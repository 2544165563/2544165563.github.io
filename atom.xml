<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ScaryPigLX的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://2544165563.github.io/"/>
  <updated>2020-09-19T05:09:43.831Z</updated>
  <id>http://2544165563.github.io/</id>
  
  <author>
    <name>liuxiang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pygame</title>
    <link href="http://2544165563.github.io/2020/09/14/pygame/"/>
    <id>http://2544165563.github.io/2020/09/14/pygame/</id>
    <published>2020-09-14T08:49:47.561Z</published>
    <updated>2020-09-19T05:09:43.831Z</updated>
    
    <content type="html"><![CDATA[<p>1设置屏幕大小</p><p>2设置窗口名称</p><p>3引入必要图片并为图片设置边框</p><p>4设置刷新频率并创建时钟对象</p><p>5while循环进行</p><p>​      5.1设置小球轨迹</p><p>​      5.2添加图片到窗口</p><p>​      5.3屏幕刷新</p><p>​      5.4屏幕刷新延迟</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame,sys</span><br><span class="line">pygame.init()   <span class="comment"># 初始化屏幕</span></span><br><span class="line">screen = pygame.display.set_mode((<span class="number">600</span>,<span class="number">400</span>),pygame.RESIZABLE)   <span class="comment"># 设置窗口大小</span></span><br><span class="line">pygame.display.set_caption(<span class="string">'游戏进化路'</span>)   <span class="comment"># 窗口名称</span></span><br><span class="line"><span class="comment">#pygame.display.set_icon()   # 设置图标</span></span><br><span class="line">ball = pygame.image.load(<span class="string">'3025.jpg'</span>)   <span class="comment">#引入图片</span></span><br><span class="line">ballrect = ball.get_rect()   <span class="comment"># 为图片添加边框来定义坐标</span></span><br><span class="line">fps = <span class="number">300</span>   <span class="comment"># 刷新频率</span></span><br><span class="line">fclock = pygame.time.Clock()   <span class="comment"># 创建时钟对象</span></span><br><span class="line">speed = [<span class="number">1</span>,<span class="number">1</span>]   <span class="comment"># 小球速度</span></span><br><span class="line">balck = <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>   <span class="comment"># 颜色</span></span><br><span class="line">width,height = <span class="number">600</span>,<span class="number">400</span>   <span class="comment">#窗口宽度</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():   <span class="comment"># 判断事件</span></span><br><span class="line">        <span class="keyword">if</span> event.type == pygame.QUIT:   <span class="comment"># 退出</span></span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">elif</span> event.type == pygame.KEYDOWN:   <span class="comment"># 移动</span></span><br><span class="line">            <span class="keyword">if</span> event.key == pygame.K_UP:</span><br><span class="line">                <span class="keyword">if</span> speed[<span class="number">0</span>] &gt; <span class="number">0</span>:</span><br><span class="line">                    speed[<span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">                    print(speed[<span class="number">0</span>])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    speed[<span class="number">0</span>] -=<span class="number">1</span></span><br><span class="line">                    print([speed[<span class="number">0</span>]])</span><br><span class="line">            <span class="keyword">elif</span> event.key == pygame.K_DOWN:</span><br><span class="line">                <span class="keyword">if</span> speed[<span class="number">0</span>] &gt; <span class="number">0</span>:</span><br><span class="line">                    speed[<span class="number">0</span>] -= <span class="number">1</span></span><br><span class="line">                    print(speed[<span class="number">0</span>])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    speed[<span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">                    print(speed[<span class="number">0</span>])</span><br><span class="line">    ballrect = ballrect.move(speed[<span class="number">0</span>],speed[<span class="number">1</span>])   <span class="comment"># 移动坐标</span></span><br><span class="line">    <span class="keyword">if</span> ballrect.left &lt; <span class="number">0</span> <span class="keyword">or</span> ballrect.right &gt; width:   <span class="comment"># 让小球反弹</span></span><br><span class="line">        speed[<span class="number">0</span>] = -speed[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> ballrect.top &lt; <span class="number">0</span> <span class="keyword">or</span> ballrect.bottom &gt; height:</span><br><span class="line">        speed[<span class="number">1</span>] = -speed[<span class="number">1</span>]</span><br><span class="line">    screen.fill(balck)   <span class="comment">#设置小球轨迹颜色</span></span><br><span class="line">    screen.blit(ball,ballrect)   <span class="comment"># 添加图像到屏幕</span></span><br><span class="line">    pygame.display.update()   <span class="comment"># 屏幕刷新</span></span><br><span class="line">    fclock.tick(fps)   <span class="comment"># 刷新频率</span></span><br></pre></td></tr></table></figure><h1 id="窗口设置"><a href="#窗口设置" class="headerlink" title="窗口设置"></a>窗口设置</h1><h2 id="大小"><a href="#大小" class="headerlink" title="大小"></a>大小</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pygame.display.set_mode((w,h),flags)</span><br><span class="line"></span><br><span class="line"><span class="comment"># flags:</span></span><br><span class="line">pygame.RESIZEBLE   窗口大小可调</span><br><span class="line">pygame.NOFRAME     无边界显示</span><br><span class="line">pygame.FULLSCREEN  全屏显示</span><br></pre></td></tr></table></figure><p>resizeble</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elif</span> event.type == pygame.VIDEORESIZE:   <span class="comment"># 窗口大小更改事件</span></span><br><span class="line">               size = width,height = event.w,event.h   <span class="comment"># 获取改变和的size</span></span><br><span class="line">               screen = pygame.display.set_mode(size,pygame.RESIZABLE)   <span class="comment"># 改变游戏大小</span></span><br></pre></td></tr></table></figure><p>fullscreen</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vinfo &#x3D; pygame.display.Info()   # 获取当窗口的大小</span><br><span class="line">size&#x3D;width,height &#x3D; vinfo.current_w,vinfo.current_h   #窗口宽度</span><br><span class="line">screen &#x3D; pygame.display.set_mode(size,pygame.FULLSCREEN)   # 设置窗口大小</span><br></pre></td></tr></table></figure><h2 id="图标、标题"><a href="#图标、标题" class="headerlink" title="图标、标题"></a>图标、标题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ico &#x3D; pygame.image.load(&#39;图标&#39;)</span><br><span class="line"></span><br><span class="line">pygame.display.set_icon(ico)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pygame.display.set_caption(<span class="string">'标题'</span>)</span><br><span class="line"></span><br><span class="line">pygame.display.get_caption()   <span class="comment"># 获取标题</span></span><br></pre></td></tr></table></figure><h2 id="最小化暂停"><a href="#最小化暂停" class="headerlink" title="最小化暂停"></a>最小化暂停</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> pygame.display.get_active():   <span class="comment"># 如果窗口最小化，结果为False，图片暂停移动</span></span><br><span class="line">     ballrect = ballrect.move(speed[<span class="number">0</span>],speed[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h1 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h1><h2 id="鼠标"><a href="#鼠标" class="headerlink" title="鼠标"></a>鼠标</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pygame.event.MOUSEMOTION   # 鼠标移动</span><br><span class="line"></span><br><span class="line">event.pos 鼠标当前坐标</span><br><span class="line"></span><br><span class="line">event.rel 鼠标相对运动距离</span><br><span class="line"></span><br><span class="line">event.buttons   鼠标三个按键,按下为1,松开为0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pygame.event.MOUSEBUTTONUP   # 鼠标释放</span><br><span class="line"></span><br><span class="line">event.pos</span><br><span class="line"></span><br><span class="line">event.button   三个键，0，1，2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pygame.event.MOUSEBUTTONDOWN   # 鼠标按下</span><br><span class="line"></span><br><span class="line">event.pos</span><br><span class="line"></span><br><span class="line">event.button   左键为1，右键为3</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1设置屏幕大小&lt;/p&gt;
&lt;p&gt;2设置窗口名称&lt;/p&gt;
&lt;p&gt;3引入必要图片并为图片设置边框&lt;/p&gt;
&lt;p&gt;4设置刷新频率并创建时钟对象&lt;/p&gt;
&lt;p&gt;5while循环进行&lt;/p&gt;
&lt;p&gt;​      5.1设置小球轨迹&lt;/p&gt;
&lt;p&gt;​      5.2添加图片到窗口&lt;/p
      
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="http://2544165563.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib</title>
    <link href="http://2544165563.github.io/2020/09/12/matplotlib/"/>
    <id>http://2544165563.github.io/2020/09/12/matplotlib/</id>
    <published>2020-09-12T10:34:42.830Z</published>
    <updated>2020-09-12T15:19:11.594Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>)   <span class="comment"># 分为3个横区，2个竖区，在第2,4,6区内画表</span></span><br><span class="line">plt.plot([<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],[<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],[<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>])</span><br><span class="line">plt.ylabel(<span class="string">'test1'</span>)</span><br><span class="line">plt.subplot(<span class="number">3</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">plt.plot([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>],<span class="string">'r--'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'test2'</span>)</span><br><span class="line">plt.savefig(<span class="string">'test'</span>,dpi=<span class="number">1000</span>)</span><br><span class="line">plt.axis([<span class="number">0</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">6</span>])   <span class="comment"># 设置x轴与y轴的范围</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">plt.xlabel()</span><br><span class="line"></span><br><span class="line">plt.ylabel()</span><br><span class="line"></span><br><span class="line">plt.title()   <span class="comment"># 整体标题</span></span><br><span class="line"></span><br><span class="line">plt.text(x,y,<span class="string">'str'</span>)   <span class="comment"># 任意位置添加文本</span></span><br><span class="line"></span><br><span class="line">plt.annotate()</span><br><span class="line"><span class="comment">#plt.annotate('123',xy=(1,2),xytext=(2,3),arrowprops=dict(facecolor='green',shrink=0.2,width=2))</span></span><br><span class="line"><span class="comment">#文本，箭头位置，文本位置，箭头颜色，箭头间距，箭头宽度</span></span><br></pre></td></tr></table></figure><h1 id="plot"><a href="#plot" class="headerlink" title=".plot()"></a>.plot()</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">tpl.plot(x,y,format_string...)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 颜色 </span></span><br><span class="line"><span class="string">'b'</span> <span class="string">'g'</span> <span class="string">'r'</span> <span class="string">'c'</span>青绿 <span class="string">'m'</span>洋红 <span class="string">'y'</span> <span class="string">'k'</span> <span class="string">'w'</span> <span class="string">'0.8'</span>灰度值 <span class="string">'#008000'</span>RGB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 类型</span></span><br><span class="line"><span class="string">'-'</span>实线 <span class="string">'--'</span>破折线 <span class="string">'-.'</span>点画线 <span class="string">':'</span>虚线 <span class="string">''''无线条</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'.'点线 ','小点 'o'大点 </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'v' '^' '&gt;' '&lt;'各种方向的三角</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">‘1’ ‘2’ ‘3’ ‘4’下上左右花三角</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">‘s’正方形 'p'五角 '*'星形</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'h'竖六边 'H'横六边 '+' 'x' 'D'菱形 'd'廋菱形 '|'</span></span><br></pre></td></tr></table></figure><h1 id="中文支持"><a href="#中文支持" class="headerlink" title="中文支持"></a>中文支持</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>默认不支持中文</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">matplotlib.rcParams[<span class="string">'font.family'</span>]=<span class="string">'SimHei'</span>   <span class="comment"># 黑体</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#字体类型</span></span><br><span class="line"><span class="string">'SimHei'</span> <span class="string">'Kaiti'</span> <span class="string">'LiSu'</span> <span class="string">'FangSong'</span> <span class="string">'YouYuan'</span> <span class="string">'STSong'</span></span><br></pre></td></tr></table></figure><p>其余两个属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">font.style   <span class="comment"># 字体类型 normal正常  italic斜体</span></span><br><span class="line"></span><br><span class="line">font.size   <span class="comment"># 字体大小 字号、large、x-small</span></span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>这个方法比第一个好</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.xlabel(<span class="string">'横轴'</span>,fontproperties=<span class="string">'SimHei'</span>,fontsize=<span class="number">20</span>)</span><br></pre></td></tr></table></figure><h1 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分区1</span></span><br><span class="line">plt.subplot(<span class="number">3</span>,<span class="number">2</span>,(<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>))  </span><br><span class="line"><span class="comment"># 分为3个横区，2个竖区，在第2,4,6区内画表</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分区2</span></span><br><span class="line">plt.subplot2grid((<span class="number">3</span>,<span class="number">3</span>),(<span class="number">1</span>,<span class="number">0</span>),colspan=<span class="number">2</span>,rowspan=<span class="number">2</span>)</span><br><span class="line"><span class="comment">#分为3X3的区，选中第2行第1列，并扩展一列和一行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分区3</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.gridspec <span class="keyword">as</span> gd</span><br><span class="line">gs = gd.GridSpe(<span class="number">3</span>,<span class="number">3</span>)   <span class="comment"># 分区</span></span><br><span class="line">a1 = plt.subplot(gs[<span class="number">1</span>,:<span class="number">-1</span>])</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="http://2544165563.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>pillow</title>
    <link href="http://2544165563.github.io/2020/09/06/pillow/"/>
    <id>http://2544165563.github.io/2020/09/06/pillow/</id>
    <published>2020-09-06T11:31:18.084Z</published>
    <updated>2020-09-06T12:42:13.772Z</updated>
    
    <content type="html"><![CDATA[<h1 id="颜色反转"><a href="#颜色反转" class="headerlink" title="颜色反转"></a>颜色反转</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test = np.array(Image.open(<span class="string">'路径'</span>))  <span class="comment"># 路径用/分割</span></span><br><span class="line">test1 = [<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>] - test</span><br><span class="line">im = Image.fromarray(test1,astype(<span class="string">'uint8'</span>))</span><br><span class="line">im.save(<span class="string">'路径'</span>)</span><br></pre></td></tr></table></figure><h1 id="灰白"><a href="#灰白" class="headerlink" title="灰白"></a>灰白</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test = np.array(Image.open(<span class="string">'路径'</span>).convert(<span class="string">'L'</span>))</span><br><span class="line">test1 = <span class="number">255</span>-test</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h1 id="手绘"><a href="#手绘" class="headerlink" title="手绘"></a>手绘</h1><p>看不懂。。。先弄上  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.asarray(Image.open(<span class="string">'C:/Users/Administrator/Desktop/我的文件/timg.jpg'</span>).convert(<span class="string">'L'</span>)).astype(<span class="string">'float'</span>)</span><br><span class="line"> </span><br><span class="line">depth = <span class="number">10.</span>                      <span class="comment"># (0-100)</span></span><br><span class="line">grad = np.gradient(a)             <span class="comment">#取图像灰度的梯度值</span></span><br><span class="line">grad_x, grad_y = grad               <span class="comment">#分别取横纵图像梯度值</span></span><br><span class="line">grad_x = grad_x*depth/<span class="number">100.</span></span><br><span class="line">grad_y = grad_y*depth/<span class="number">100.</span></span><br><span class="line">A = np.sqrt(grad_x**<span class="number">2</span> + grad_y**<span class="number">2</span> + <span class="number">1.</span>)</span><br><span class="line">uni_x = grad_x/A</span><br><span class="line">uni_y = grad_y/A</span><br><span class="line">uni_z = <span class="number">1.</span>/A</span><br><span class="line"> </span><br><span class="line">vec_el = np.pi/<span class="number">2.2</span>                   <span class="comment"># 光源的俯视角度，弧度值</span></span><br><span class="line">vec_az = np.pi/<span class="number">4.</span>                    <span class="comment"># 光源的方位角度，弧度值</span></span><br><span class="line">dx = np.cos(vec_el)*np.cos(vec_az)   <span class="comment">#光源对x 轴的影响</span></span><br><span class="line">dy = np.cos(vec_el)*np.sin(vec_az)   <span class="comment">#光源对y 轴的影响</span></span><br><span class="line">dz = np.sin(vec_el)              <span class="comment">#光源对z 轴的影响</span></span><br><span class="line"> </span><br><span class="line">b = <span class="number">255</span>*(dx*uni_x + dy*uni_y + dz*uni_z)     <span class="comment">#光源归一化</span></span><br><span class="line">b = b.clip(<span class="number">0</span>,<span class="number">255</span>)</span><br><span class="line"> </span><br><span class="line">im = Image.fromarray(b.astype(<span class="string">'uint8'</span>))  <span class="comment">#重构图像</span></span><br><span class="line">im.save(<span class="string">'C:/Users/Administrator/Desktop/我的文件/test2.jpg'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;颜色反转&quot;&gt;&lt;a href=&quot;#颜色反转&quot; class=&quot;headerlink&quot; title=&quot;颜色反转&quot;&gt;&lt;/a&gt;颜色反转&lt;/h1&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="http://2544165563.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>NumPy</title>
    <link href="http://2544165563.github.io/2020/09/06/NumPy/"/>
    <id>http://2544165563.github.io/2020/09/06/NumPy/</id>
    <published>2020-09-06T01:32:03.675Z</published>
    <updated>2020-09-12T14:11:51.108Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ndarray对象"><a href="#ndarray对象" class="headerlink" title="ndarray对象"></a>ndarray对象</h1><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.ndim    <span class="comment"># 秩，维度的数量</span></span><br><span class="line"></span><br><span class="line">.shape   <span class="comment"># 尺度，n行m列</span></span><br><span class="line"></span><br><span class="line">.size   <span class="comment"># n*m</span></span><br><span class="line"></span><br><span class="line">.dtype   <span class="comment"># 元素类型</span></span><br><span class="line"></span><br><span class="line">.itemsize   <span class="comment"># 元素的大小</span></span><br></pre></td></tr></table></figure><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">np.arrange(n)</span><br><span class="line"></span><br><span class="line">np.ones((n,m))   <span class="comment"># np.ones((n,m),dtype = np.int)</span></span><br><span class="line"></span><br><span class="line">np.zeros((n,m))   <span class="comment"># 默认是浮点数，和.ones一样</span></span><br><span class="line"></span><br><span class="line">np.full((n,m),val)   <span class="comment"># val为填充字符</span></span><br><span class="line"></span><br><span class="line">np.eye(n)   <span class="comment"># 对角线为1，其余为0的n阶矩阵</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">np.ones_like(a)   <span class="comment"># 模拟数组a的形状</span></span><br><span class="line"></span><br><span class="line">np.zeros_like(a)</span><br><span class="line"></span><br><span class="line">np.full_like(a,val)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">np.arange(<span class="number">0</span>,<span class="number">5</span>,<span class="number">1</span>) <span class="comment">#根据开始、结束、步数形成数组</span></span><br><span class="line"></span><br><span class="line">np.linspace(<span class="number">1</span>,<span class="number">10</span>,<span class="number">4</span>,endpoint=<span class="literal">False</span>)   <span class="comment"># 根据开始、结束、个数形成数组</span></span><br><span class="line"></span><br><span class="line">np.concatenate((a,b))   <span class="comment"># 合并数组</span></span><br></pre></td></tr></table></figure><h2 id="变换"><a href="#变换" class="headerlink" title="变换"></a>变换</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a.reshape((n,m))   <span class="comment"># 改变原数组的形状</span></span><br><span class="line"></span><br><span class="line">a.resize((n,m))   <span class="comment"># 改变形状，原数组a发生改变</span></span><br><span class="line"></span><br><span class="line">a.flatten()   <span class="comment">#降维</span></span><br><span class="line"></span><br><span class="line">a.astype(np.int)   <span class="comment"># 改变元素类型,并创建新的数组</span></span><br><span class="line">                   <span class="comment"># 直接b=a是指向同一个地址，而b=a.astype()是新的地址</span></span><br></pre></td></tr></table></figure><p>ndarray数组转变成列表类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls = a.tolist()</span><br></pre></td></tr></table></figure><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>多维数组切片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;array([1,2,3],</span><br><span class="line">        [4,5,6],</span><br><span class="line">        [7,8,9])</span><br><span class="line"></span><br><span class="line">a[:,1:2,0:1]   #5</span><br></pre></td></tr></table></figure><h2 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">np.sum(a,axis=<span class="literal">None</span>)   <span class="comment"># 和</span></span><br><span class="line"></span><br><span class="line">np.mean(a,axis=<span class="literal">None</span>)   <span class="comment"># 期望</span></span><br><span class="line"></span><br><span class="line">np.average(a,axis=<span class="literal">None</span>,weight=<span class="literal">None</span>)   <span class="comment"># 加权平均值</span></span><br><span class="line"></span><br><span class="line">np.std(a,axis=<span class="literal">None</span>)   <span class="comment"># 标准差</span></span><br><span class="line"></span><br><span class="line">np.var(a,axis=<span class="literal">None</span>)   <span class="comment"># 方差</span></span><br><span class="line"></span><br><span class="line">np.min(a)   <span class="comment"># 最大值</span></span><br><span class="line"></span><br><span class="line">np.max(a)   <span class="comment">#最小值</span></span><br><span class="line"></span><br><span class="line">np.argmin(a)   <span class="comment">#转一维后的下标</span></span><br><span class="line"></span><br><span class="line">np.argmax(a)</span><br><span class="line"></span><br><span class="line">np.unravel_index(index,shape) <span class="comment">#将一维下标转换为多维下标</span></span><br><span class="line"></span><br><span class="line">np.ptp(a)   <span class="comment"># 最大值与最小值的差</span></span><br><span class="line"></span><br><span class="line">np.median(a)   <span class="comment">#计算中位数</span></span><br><span class="line"></span><br><span class="line">np.gradient(f)   <span class="comment">#计算梯度</span></span><br></pre></td></tr></table></figure><h1 id="数据存取"><a href="#数据存取" class="headerlink" title="数据存取"></a>数据存取</h1><h2 id="一、二维"><a href="#一、二维" class="headerlink" title="一、二维"></a>一、二维</h2><p>存入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.savetxt(<span class="string">'a.csv'</span>,a,fmt=<span class="string">'%.1f'</span>,delimiter=<span class="string">','</span>)</span><br></pre></td></tr></table></figure><p>取出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.loadtxt(<span class="string">'a.csv'</span>,dtype=np.float,delimiter=<span class="string">','</span>,unpack=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h2 id="多维"><a href="#多维" class="headerlink" title="多维"></a>多维</h2><p>存入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.tofile(<span class="string">'b.dat'</span>,sep=<span class="string">','</span>,format=<span class="string">'%s'</span>) <span class="comment"># sep为空时以二进制存入</span></span><br></pre></td></tr></table></figure><p>取出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.fromfile(<span class="string">'b.dat'</span>,dtype=float,count=<span class="number">-1</span>,sep=<span class="string">','</span>)</span><br></pre></td></tr></table></figure><h2 id="便捷存取"><a href="#便捷存取" class="headerlink" title="便捷存取"></a>便捷存取</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">np.save(&#39;b.npy&#39;,b)</span><br><span class="line"></span><br><span class="line">np.load(&#39;b.npy&#39;)</span><br></pre></td></tr></table></figure><h1 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h1><h2 id="生产"><a href="#生产" class="headerlink" title="生产"></a>生产</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">np.random.rank((n,m))   <span class="comment"># [0,1)</span></span><br><span class="line"></span><br><span class="line">np,random.rankn((n,m))   <span class="comment">#正态分布</span></span><br><span class="line"></span><br><span class="line">np.random.randint(<span class="number">1</span>,<span class="number">10</span>,(<span class="number">3</span>,<span class="number">3</span>))  <span class="comment">#[1,10)</span></span><br><span class="line"></span><br><span class="line">np.random.seek(d)   <span class="comment">#指定一个种子，使随机数结果确定</span></span><br><span class="line"></span><br><span class="line">np.random.uniform(<span class="number">1</span>,<span class="number">10</span>,(n,m)) <span class="comment">#均匀分布</span></span><br><span class="line"></span><br><span class="line">np.random.normal(均值,标准差,(m,n))  <span class="comment">#正态分布</span></span><br><span class="line"></span><br><span class="line">np.random.poisson(发生率,(m,naxis))  <span class="comment">#泊松分布</span></span><br></pre></td></tr></table></figure><h2 id="改变"><a href="#改变" class="headerlink" title="改变"></a>改变</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">np.random.shuffle(a)   <span class="comment"># 对最外层随机排列，改变数组a</span></span><br><span class="line"></span><br><span class="line">np.random.permutation(a) <span class="comment">#不对a改变</span></span><br><span class="line"></span><br><span class="line">np.chioce(a,<span class="number">10</span>,replace=<span class="literal">False</span>) <span class="comment">#在a中选取10个，不可重复</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ndarray对象&quot;&gt;&lt;a href=&quot;#ndarray对象&quot; class=&quot;headerlink&quot; title=&quot;ndarray对象&quot;&gt;&lt;/a&gt;ndarray对象&lt;/h1&gt;&lt;h2 id=&quot;属性&quot;&gt;&lt;a href=&quot;#属性&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="http://2544165563.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>mysql基础</title>
    <link href="http://2544165563.github.io/2020/09/03/mysql%E5%9F%BA%E7%A1%80/"/>
    <id>http://2544165563.github.io/2020/09/03/mysql%E5%9F%BA%E7%A1%80/</id>
    <published>2020-09-03T13:27:58.306Z</published>
    <updated>2020-10-03T03:32:55.884Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database pig;</span><br></pre></td></tr></table></figure><p>展示数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><p>使用该数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use &lt;库名&gt;</span><br></pre></td></tr></table></figure><h1 id="表"><a href="#表" class="headerlink" title="表"></a>表</h1><p>展示该数据库中的所有表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><p>显示表的详情信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">describe &lt;表名&gt;</span><br></pre></td></tr></table></figure><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">create table tb</span><br><span class="line">(</span><br><span class="line">  id       int         auto_increment  not null primary key,</span><br><span class="line">  </span><br><span class="line">  name     varchar(10)                 not null default 1,</span><br><span class="line">   </span><br><span class="line">  password varchar(10)                 not null,</span><br><span class="line">  </span><br><span class="line">  sex      int                         not null check(sex in [1,2])</span><br><span class="line">  );</span><br></pre></td></tr></table></figure><h3 id="创建外键与主键"><a href="#创建外键与主键" class="headerlink" title="创建外键与主键"></a>创建外键与主键</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create table test2</span><br><span class="line">(学号 char(4) not null,</span><br><span class="line"> 姓名 char(4) not null,</span><br><span class="line"> primary key(学号),</span><br><span class="line"> foreign key(学号) references test1(学号)</span><br><span class="line">  on delete restrict</span><br><span class="line">  on update cascade</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">restrict   拒绝操作</span><br><span class="line"></span><br><span class="line">cascade    级联操作</span><br><span class="line"></span><br><span class="line">no action  不执行操作</span><br><span class="line"></span><br><span class="line">set default  设为默认值</span><br><span class="line"></span><br><span class="line">set null    设为空值</span><br></pre></td></tr></table></figure><h3 id="check、枚举类型enum"><a href="#check、枚举类型enum" class="headerlink" title="check、枚举类型enum"></a>check、枚举类型enum</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table test</span><br><span class="line">(性别 char(1) not null check(性别 in (&#39;男&#39;,&#39;女&#39;)));</span><br><span class="line"># 好像mysql中check不起作用。。。</span><br><span class="line"></span><br><span class="line">create table test</span><br><span class="line">(性别 enum(&#39;男&#39;,&#39;女&#39;) not null);</span><br></pre></td></tr></table></figure><h3 id="完整性约束"><a href="#完整性约束" class="headerlink" title="完整性约束"></a>完整性约束</h3><p>创建</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create table test</span><br><span class="line">(姓名 char(4) not null,</span><br><span class="line">constraint primary_key primary key(姓名));</span><br></pre></td></tr></table></figure><p>删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table test drop primary key;</span><br></pre></td></tr></table></figure><h2 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">alter table &lt;表名&gt; add column &lt;列名&gt; &lt;类型&gt; ..     # 添加列</span><br><span class="line"></span><br><span class="line">alter table &lt;表名&gt; motify &lt;列名&gt; &lt;类型&gt; ..  # 更改列的属性</span><br><span class="line"></span><br><span class="line">alter table &lt;表名&gt; drop column &lt;列名&gt;  # 删除列</span><br><span class="line"></span><br><span class="line">alter table &lt;表名&gt; rename &lt;新表名&gt;   # 修改表名</span><br><span class="line"></span><br><span class="line">alter table &lt;表名&gt; change &lt;列名&gt; &lt;原列名&gt;  # 修改列名，但我运行失败了</span><br><span class="line"></span><br><span class="line">drop table if exists &lt;表名&gt;  # 删除表</span><br></pre></td></tr></table></figure><h2 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h2><p>insert</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into &lt;表名&gt; values (&lt;&gt;,&lt;&gt;,&lt;&gt;);</span><br></pre></td></tr></table></figure><p>replace 与insert功能相同，不过能替代原有的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">replace into &lt;表名&gt; vales (&lt;&gt;,&lt;&gt;,&lt;&gt;);</span><br></pre></td></tr></table></figure><h2 id="更改"><a href="#更改" class="headerlink" title="更改"></a>更改</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update &lt;表名&gt; set &lt;改动&gt;;</span><br></pre></td></tr></table></figure><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from Student;</span><br></pre></td></tr></table></figure><p>列名更换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select sname 姓名 from Student   # 将列名sname更换成&#39;姓名&#39;输出;</span><br></pre></td></tr></table></figure><p>between</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from Student where Sage between 10 and 20;</span><br></pre></td></tr></table></figure><p>in</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from Student where Sno in (1,2,3);</span><br></pre></td></tr></table></figure><p>%  _  /</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from Student where Sname like &#39;刘%&#39;   # %任意数量字符,_单个字符;</span><br><span class="line"></span><br><span class="line">select * from Student where Sname like &#39;刘\_,escape&#39;\&#39;;</span><br></pre></td></tr></table></figure><p>is</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from Student where Sname is not null;</span><br></pre></td></tr></table></figure><p>order by</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from Student order by Sno desc;   # desc降序,asc升序</span><br></pre></td></tr></table></figure><p>聚合函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*) from Student;   # sum,avg,max,min</span><br></pre></td></tr></table></figure><p>group by</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 课程号,count(学号) from xs_kc group by 课程号 having count(学号)&lt;2;</span><br></pre></td></tr></table></figure><h3 id="内连接与外连接"><a href="#内连接与外连接" class="headerlink" title="内连接与外连接"></a>内连接与外连接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * from A inner join B on A.name&#x3D;B.name;</span><br><span class="line"></span><br><span class="line">select * from A left&#x2F;right outer join B on A.name&#x3D;B.name</span><br><span class="line"></span><br><span class="line">mysql不支持full outer join。。。</span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><p>删除表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop &lt;表名&gt;</span><br></pre></td></tr></table></figure><p>删除数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from &lt;表名&gt; where &lt;条件&gt;;</span><br></pre></td></tr></table></figure><h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><h2 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create view avg(num,avg) as</span><br><span class="line">select 学号,avg(成绩) from xs_kc group by 学号 having avg(成绩)&gt;80 with check option;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cteate view test as select * from xs where 专业名&#x3D;&#39;计算机&#39; with chexk option;</span><br><span class="line"></span><br><span class="line">with check option    在更新视图的时候判断是否符合where语句</span><br></pre></td></tr></table></figure><h2 id="修改视图"><a href="#修改视图" class="headerlink" title="修改视图"></a>修改视图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter view test as select 学号,姓名,总学分 from xs where 专业名&#x3D;&#39;计算机&#39;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;创建数据库&quot;&gt;&lt;a href=&quot;#创建数据库&quot; class=&quot;headerlink&quot; title=&quot;创建数据库&quot;&gt;&lt;/a&gt;创建数据库&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="mysql" scheme="http://2544165563.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础</title>
    <link href="http://2544165563.github.io/2020/09/01/Linux%E5%9F%BA%E7%A1%80/"/>
    <id>http://2544165563.github.io/2020/09/01/Linux%E5%9F%BA%E7%A1%80/</id>
    <published>2020-09-01T13:27:33.996Z</published>
    <updated>2020-09-28T13:51:04.023Z</updated>
    
    <content type="html"><![CDATA[<h1 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">*   任意长度的任意字符</span><br><span class="line"></span><br><span class="line">?   单个任意字符</span><br><span class="line"></span><br><span class="line">[]   范围内的字符,如[a-z,0-9]</span><br><span class="line"></span><br><span class="line">[a-z]   除了大Z外的其他字母</span><br><span class="line"></span><br><span class="line">[A-Z]   除了小a外的其他字母</span><br><span class="line"></span><br><span class="line">[:upper:]   全大写字母</span><br><span class="line"></span><br><span class="line">[:lower:]   全小写</span><br><span class="line"></span><br><span class="line">[:alpha:]   全部大小写</span><br><span class="line"></span><br><span class="line">[:digit:]   全部数字</span><br><span class="line"></span><br><span class="line">[:alnum:]   全部数字+字母</span><br><span class="line"></span><br><span class="line">[^0-9]   0-9范围内的其他数值</span><br></pre></td></tr></table></figure><h1 id="转义序列"><a href="#转义序列" class="headerlink" title="转义序列"></a>转义序列</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">\n</span><br><span class="line"></span><br><span class="line">\b   退格</span><br><span class="line"></span><br><span class="line">\c   不打印换行</span><br><span class="line"></span><br><span class="line">\f   换页</span><br><span class="line"></span><br><span class="line">\a   警报(就是运行时嘀~一声)</span><br><span class="line"></span><br><span class="line">\r   回车</span><br></pre></td></tr></table></figure><h1 id="ll结果分析"><a href="#ll结果分析" class="headerlink" title="ll结果分析"></a>ll结果分析</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">一 二   三  四  五  六   七   八    十</span><br><span class="line"> - rw- r-- r-- 1 root root 656 9月 9 06:38</span><br><span class="line"> </span><br><span class="line">一 &#39;-&#39;表文件,&#39;d&#39;表目录</span><br><span class="line">二 当前用户权限，r读,w写,x执行</span><br><span class="line">三 当前组用户权限</span><br><span class="line">四 其他组权限</span><br><span class="line">五 文件被调用次数</span><br><span class="line">六 所有者</span><br><span class="line">七 所在组</span><br><span class="line">八 文件大小</span><br><span class="line">十 最后修改时间</span><br></pre></td></tr></table></figure><h1 id="界面的切换"><a href="#界面的切换" class="headerlink" title="界面的切换"></a>界面的切换</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">先打开命令行登录</span><br><span class="line">init 3 切换到命令行界面</span><br><span class="line"></span><br><span class="line">init 5 切换成图形界面</span><br></pre></td></tr></table></figure><h1 id="基础指令"><a href="#基础指令" class="headerlink" title="基础指令"></a>基础指令</h1><h2 id="history-历史记录"><a href="#history-历史记录" class="headerlink" title="history 历史记录"></a>history 历史记录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">history   查看指令历史记录</span><br><span class="line"></span><br><span class="line">history 10  显示最近10条记录</span><br><span class="line"></span><br><span class="line">!&lt;记录序号&gt;   使用该记录的代码</span><br></pre></td></tr></table></figure><h2 id="help-帮助"><a href="#help-帮助" class="headerlink" title="help 帮助"></a>help 帮助</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">help 命令    用于内部命令</span><br><span class="line"></span><br><span class="line">命令 --help  用于外部命令</span><br></pre></td></tr></table></figure><h2 id="man-详细帮助"><a href="#man-详细帮助" class="headerlink" title="man 详细帮助"></a>man 详细帮助</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">man 命令</span><br><span class="line"></span><br><span class="line">&#x2F;  查找字符串</span><br><span class="line"></span><br><span class="line">q  退出手册</span><br></pre></td></tr></table></figure><h2 id="info-超详细目录"><a href="#info-超详细目录" class="headerlink" title="info 超详细目录"></a>info 超详细目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info 命令   与man功能差不多，但查找到的东西更多</span><br></pre></td></tr></table></figure><h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">0   停机</span><br><span class="line"></span><br><span class="line">1   单用户</span><br><span class="line"></span><br><span class="line">2   多用户，没有NFS，不联网</span><br><span class="line"></span><br><span class="line">3   完全多用户</span><br><span class="line"></span><br><span class="line">4   没用</span><br><span class="line"></span><br><span class="line">5   图形化界面</span><br><span class="line"></span><br><span class="line">6   重启</span><br></pre></td></tr></table></figure><h2 id="paweroff"><a href="#paweroff" class="headerlink" title="paweroff"></a>paweroff</h2><p>普通用户和管理员都可以用，如果多个用户用该系统，则普通用户也不能用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-w   不会关机,把记录写在&#x2F;var&#x2F;log&#x2F;wtmp里</span><br><span class="line"></span><br><span class="line">-d   与w相反,关机不写</span><br></pre></td></tr></table></figure><h2 id="shutdown"><a href="#shutdown" class="headerlink" title="shutdown"></a>shutdown</h2><p>只有管理员能够使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">shutdown 5 byebye</span><br><span class="line"></span><br><span class="line">-t   设定几秒后关机</span><br><span class="line"></span><br><span class="line">-k   不会真关机，只会警告使用者</span><br><span class="line"></span><br><span class="line">-r   关机后重启</span><br><span class="line"></span><br><span class="line">-n   强制杀掉程序关机</span><br><span class="line"></span><br><span class="line">-c   取消进行中的关机动作</span><br></pre></td></tr></table></figure><h2 id="halt"><a href="#halt" class="headerlink" title="halt"></a>halt</h2><p>不会关闭电源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-w   不关机，写记录&#x2F;var&#x2F;log&#x2F;wtmp</span><br><span class="line"></span><br><span class="line">-f   强制关机,不呼叫shutdown</span><br><span class="line"></span><br><span class="line">-d   不写记录关机</span><br><span class="line"></span><br><span class="line">-p   关机的时候关闭电源(poweroff)</span><br></pre></td></tr></table></figure><h2 id="reboot"><a href="#reboot" class="headerlink" title="reboot"></a>reboot</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-w</span><br><span class="line"></span><br><span class="line">-d</span><br><span class="line"></span><br><span class="line">-f</span><br></pre></td></tr></table></figure><h2 id="logname"><a href="#logname" class="headerlink" title="logname"></a>logname</h2><p>初次登陆的用户</p><h2 id="whoami"><a href="#whoami" class="headerlink" title="whoami"></a>whoami</h2><p>当前活动用户</p><h2 id="who"><a href="#who" class="headerlink" title="who"></a>who</h2><p>详情版users</p><p>当前登录系统的用户列表</p><h2 id="users"><a href="#users" class="headerlink" title="users"></a>users</h2><p>当前登录系统的用户列表</p><h2 id="id"><a href="#id" class="headerlink" title="id"></a>id</h2><p>查看用户的详细信息</p><h2 id="last"><a href="#last" class="headerlink" title="last"></a>last</h2><p>登录系统的历史信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-num   展示前num个</span><br><span class="line"></span><br><span class="line">username   展示username的登入信息</span><br></pre></td></tr></table></figure><h2 id="uname"><a href="#uname" class="headerlink" title="uname"></a>uname</h2><p>显示计算机的基本信息</p><h2 id="hostname"><a href="#hostname" class="headerlink" title="hostname"></a>hostname</h2><p>显示计算机名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname XXX  暂时更改主机名</span><br></pre></td></tr></table></figure><h2 id="hostnamectl"><a href="#hostnamectl" class="headerlink" title="hostnamectl"></a>hostnamectl</h2><p>永久设置主机名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl status   查看当前主机名设置</span><br><span class="line"></span><br><span class="line">hostnamectl set-hostname XXX</span><br></pre></td></tr></table></figure><h2 id="useradd"><a href="#useradd" class="headerlink" title="useradd"></a>useradd</h2><p>/etc/passwd 存放用户信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-d   指定用户的登入目录</span><br><span class="line"></span><br><span class="line">-e   账户有效天数</span><br><span class="line"></span><br><span class="line">-f   账号过期多少天后关闭</span><br><span class="line"></span><br><span class="line">-r   建立系统账号</span><br><span class="line"></span><br><span class="line">-g   指定所属群组</span><br><span class="line"></span><br><span class="line">-G   所属附加群组</span><br><span class="line"></span><br><span class="line">-u   指定用户ID</span><br></pre></td></tr></table></figure><h2 id="usermod"><a href="#usermod" class="headerlink" title="usermod"></a>usermod</h2><p>修改用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-l   修改用户名</span><br><span class="line"></span><br><span class="line">-L   锁定账号密码</span><br><span class="line"></span><br><span class="line">-U   解除密码锁定</span><br></pre></td></tr></table></figure><h2 id="userdel"><a href="#userdel" class="headerlink" title="userdel"></a>userdel</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-r   删除用户登入目录</span><br></pre></td></tr></table></figure><h2 id="su"><a href="#su" class="headerlink" title="su"></a>su</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">su test   切换到test</span><br><span class="line"></span><br><span class="line">su - test   切换到test且当前路径改为test的home</span><br><span class="line"></span><br><span class="line">su -c ls root   借用root的权限</span><br></pre></td></tr></table></figure><h2 id="groupadd"><a href="#groupadd" class="headerlink" title="groupadd"></a>groupadd</h2><p>/etc/group 存放组的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-g   指定组的id</span><br><span class="line"></span><br><span class="line">-r   使组的id小于500</span><br></pre></td></tr></table></figure><h2 id="groupmod"><a href="#groupmod" class="headerlink" title="groupmod"></a>groupmod</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-n &lt;new_name&gt; &lt;old_name&gt;  设置新的组名</span><br></pre></td></tr></table></figure><h2 id="groupdel"><a href="#groupdel" class="headerlink" title="groupdel"></a>groupdel</h2><h2 id="cd-切换目录"><a href="#cd-切换目录" class="headerlink" title="cd 切换目录"></a>cd 切换目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ..  回到父目录</span><br><span class="line"></span><br><span class="line">cd -   回到上一个目录</span><br><span class="line"></span><br><span class="line">cd ~   回到家目录</span><br></pre></td></tr></table></figure><h2 id="pwd-查看当前目录"><a href="#pwd-查看当前目录" class="headerlink" title="pwd 查看当前目录"></a>pwd 查看当前目录</h2><h2 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-n   # 给每行加上序号，包括空格</span><br><span class="line"></span><br><span class="line">-b   # 加序号，不包括空格</span><br><span class="line"></span><br><span class="line">-s   # 将一行以上的空行转换为一行</span><br><span class="line"></span><br><span class="line">cat -n test1 &gt; test2   # 将test1文本加上序号后复制test2</span><br></pre></td></tr></table></figure><h2 id="more"><a href="#more" class="headerlink" title="more"></a>more</h2><p>enter   下一行</p><p>f     空格   下一屏</p><p>b   上一屏</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-s   # 将一行以上的空行转换为一行</span><br><span class="line"></span><br><span class="line">more +10 test   # 在第10行开始显示</span><br><span class="line"></span><br><span class="line">more -3 test   # 每次显示3行</span><br></pre></td></tr></table></figure><h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ls -a  显示所有文件和目录</span><br><span class="line"></span><br><span class="line">ls -d  只显示目录</span><br><span class="line"></span><br><span class="line">ls -l  文件详情信息</span><br><span class="line"></span><br><span class="line">ls -r  反次序显示</span><br><span class="line"></span><br><span class="line">ls -t  按建立时间列出</span><br><span class="line"></span><br><span class="line">ls -A  同a，不列出.与..</span><br><span class="line"></span><br><span class="line">ls -R  显示所有文件包括目录里的</span><br></pre></td></tr></table></figure><h2 id="mkdir-创建目录"><a href="#mkdir-创建目录" class="headerlink" title="mkdir 创建目录"></a>mkdir 创建目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir &lt;选项&gt; &lt;目录名&gt;</span><br><span class="line"></span><br><span class="line">mkdir &#123;user1,user2,user3&#125;  创建多个目录</span><br><span class="line"></span><br><span class="line">mkdir -m &lt;权限&gt; &lt;目录名&gt;   创建权限目录</span><br><span class="line"> </span><br><span class="line">mkdir -v &lt;目录名&gt;   创建并显示信息</span><br><span class="line"></span><br><span class="line">mkdir -p test1&#x2F;test1.1 创建目录及子目录</span><br></pre></td></tr></table></figure><h2 id="rmdir-删除目录"><a href="#rmdir-删除目录" class="headerlink" title="rmdir 删除目录"></a>rmdir 删除目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rmdir -p  test1&#x2F;test1.1</span><br><span class="line"></span><br><span class="line">rmdir -v  显示指令执行过程</span><br></pre></td></tr></table></figure><h2 id="touch-创建文件"><a href="#touch-创建文件" class="headerlink" title="touch 创建文件"></a>touch 创建文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">touch &#123;t1,t2&#125;.mp4</span><br><span class="line"></span><br><span class="line">touch -c &lt;文件名&gt;   更改访问时间</span><br></pre></td></tr></table></figure><h2 id="cp-复制文件或目录"><a href="#cp-复制文件或目录" class="headerlink" title="cp 复制文件或目录"></a>cp 复制文件或目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cp &lt;文件&gt; &lt;指令&gt; &lt;指定目录&gt;</span><br><span class="line"></span><br><span class="line"> -p   保持原属性不变</span><br><span class="line"></span><br><span class="line"> -r   递归复制目录下所有文件</span><br><span class="line"></span><br><span class="line"> -f   强制复制，直接覆盖重名</span><br><span class="line"> </span><br><span class="line"> -l   不复制，只生产链接文件</span><br></pre></td></tr></table></figure><h2 id="mv-移动文件、改名"><a href="#mv-移动文件、改名" class="headerlink" title="mv 移动文件、改名"></a>mv 移动文件、改名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mv &lt;选项&gt; &lt;源文件&gt; &lt;指定目录&gt;</span><br><span class="line"></span><br><span class="line">mv &lt;old_name&gt; &lt;new_name&gt;</span><br><span class="line"></span><br><span class="line"> -b  若覆盖，先备份</span><br><span class="line"> </span><br><span class="line"> -f  直接覆盖</span><br><span class="line"> </span><br><span class="line"> -u  若源文件较新，就更新目标文件</span><br></pre></td></tr></table></figure><h2 id="rm-删除文件"><a href="#rm-删除文件" class="headerlink" title="rm 删除文件"></a>rm 删除文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rm &lt;选项&gt; &lt;文件名&gt;</span><br><span class="line"> </span><br><span class="line">  -f  强行删除</span><br><span class="line">  </span><br><span class="line">  -r  删除目录及文件</span><br></pre></td></tr></table></figure><h2 id="ln链接"><a href="#ln链接" class="headerlink" title="ln链接"></a>ln链接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ln &lt;选项&gt; &lt;文件&gt; &lt;目标&#x2F;new_name&gt;</span><br><span class="line"></span><br><span class="line">-b   删除,覆盖以前建的链接</span><br><span class="line"></span><br><span class="line">-d   允许超级用户制作目录的硬链接</span><br><span class="line"></span><br><span class="line">-f</span><br><span class="line"></span><br><span class="line">-i</span><br><span class="line"></span><br><span class="line">-v   显示处理过程</span><br><span class="line"></span><br><span class="line">-n   把符号链接视为一般目录(老师说这话是硬链接0.0)</span><br><span class="line"></span><br><span class="line">-s   软链接(符号链接)</span><br></pre></td></tr></table></figure><h2 id="find-查找文件"><a href="#find-查找文件" class="headerlink" title="find 查找文件"></a>find 查找文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">find 路径 &lt;选项&gt; &lt;文件名&gt;</span><br><span class="line"> </span><br><span class="line"> -name   区分大小写</span><br><span class="line"> </span><br><span class="line"> -iname  不区分大小写</span><br><span class="line"> </span><br><span class="line"> -size -10M  小于10M的文件</span><br><span class="line"> </span><br><span class="line"> -type   类型</span><br><span class="line"> </span><br><span class="line"> -user   所属用户</span><br><span class="line"> </span><br><span class="line"> -group  所属组</span><br></pre></td></tr></table></figure><h2 id="vi-编辑"><a href="#vi-编辑" class="headerlink" title="vi 编辑"></a>vi 编辑</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vi &lt;文档&gt;</span><br><span class="line"></span><br><span class="line">i   当前位置字符前插入</span><br><span class="line"></span><br><span class="line">a   当前位置字符后插入</span><br><span class="line"></span><br><span class="line">c   好像是清空再插入</span><br><span class="line"></span><br><span class="line">o   当前位置的下一行开始插入</span><br><span class="line"></span><br><span class="line">p   将最后一个删除文本放在当前字符</span><br><span class="line"></span><br><span class="line">:w!   强制保存</span><br><span class="line"></span><br><span class="line">:q!   强制退出</span><br><span class="line"></span><br><span class="line">:e!   放弃所有修改，重上次保存开始再编辑</span><br></pre></td></tr></table></figure><h2 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h2><p>默认输出后换行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;string&quot;</span><br><span class="line"></span><br><span class="line">echo &#96;date&#96;   不是单引号，是反引号</span><br><span class="line"></span><br><span class="line">-e   识别转义符</span><br><span class="line"></span><br><span class="line">-n   输出后不换行</span><br></pre></td></tr></table></figure><h2 id="printf输出"><a href="#printf输出" class="headerlink" title="printf输出"></a>printf输出</h2><p>默认输出后不换行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">printf &quot;this is string&quot;   无双引号，单引号都可</span><br><span class="line"></span><br><span class="line">printf &quot;this is %s\n&quot; &quot;sting&quot;   在不带引号的时候要\\n才能换行</span><br></pre></td></tr></table></figure><h2 id="date"><a href="#date" class="headerlink" title="date"></a>date</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">date &#39;+%D&#39;</span><br><span class="line"></span><br><span class="line">%D   09&#x2F;26&#x2F;20</span><br><span class="line"></span><br><span class="line">%x   09&#x2F;26&#x2F;2020</span><br><span class="line"></span><br><span class="line">%T   23:10:31</span><br><span class="line"></span><br><span class="line">%X   23:10:31 PM</span><br></pre></td></tr></table></figure><h2 id="cal日历"><a href="#cal日历" class="headerlink" title="cal日历"></a>cal日历</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cal 2020</span><br><span class="line"></span><br><span class="line">-y   当年日历</span><br><span class="line"></span><br><span class="line">-3   上个月，这月，下月</span><br><span class="line"></span><br><span class="line">-j   某一日位于当年的第几天</span><br></pre></td></tr></table></figure><h2 id="expr计数器"><a href="#expr计数器" class="headerlink" title="expr计数器"></a>expr计数器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">expr 2 + 5         # 7</span><br><span class="line"></span><br><span class="line">expr 2+5           # 2+5</span><br><span class="line"></span><br><span class="line">expr length &quot;this&quot;   # 4</span><br><span class="line"></span><br><span class="line">expr substr &quot;this is a test&quot; 3 5   # is is 在第3个字符开始,抓取5个字符</span><br><span class="line"></span><br><span class="line">expr index &quot;123456&quot; 5   # 5 抓取该字符第一次出现的位置</span><br></pre></td></tr></table></figure><h1 id="软链接与硬链接"><a href="#软链接与硬链接" class="headerlink" title="软链接与硬链接"></a>软链接与硬链接</h1><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><p>软链接<br>1.软链接，以路径的形式存在。类似于Windows操作系统中的快捷方式<br>2.软链接可以跨文件系统 ，硬链接不可以<br>3.软链接可以对一个不存在的文件名进行链接<br>4.软链接可以对目录进行链接<br>硬链接：<br>1.硬链接以文件副本的形式存在。但不占用实际空间。<br>2.不允许给目录创建硬链接<br>3.硬链接只有在同一个文件系统中才能创建</p><h2 id="软链接de特征"><a href="#软链接de特征" class="headerlink" title="软链接de特征"></a>软链接de特征</h2><p>1.软链接有自己的文件属性及权限等；<br>2.可对不存在的文件或目录创建软链接；<br>3.软链接可交叉文件系统；<br>4.软链接可对文件或目录创建；<br>5.创建软链接时，链接计数 i_nlink 不会增加；<br>6.删除软链接并不影响被指向的文件,但若被指向的原文件被删除，则相关软连接被称为死链接<br>   (即 dangling link,若被指向路径文件被重新创建,死链接可恢复为正常的软链接）。</p><h1 id="root密码修改"><a href="#root密码修改" class="headerlink" title="root密码修改"></a>root密码修改</h1><p>在系统内修改密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p>在系统外修改密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">不会进入单用户模式。。。以后再弄吧</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;通配符&quot;&gt;&lt;a href=&quot;#通配符&quot; class=&quot;headerlink&quot; title=&quot;通配符&quot;&gt;&lt;/a&gt;通配符&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s
      
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Linux" scheme="http://2544165563.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>高数（大一）</title>
    <link href="http://2544165563.github.io/2020/08/27/%E9%AB%98%E6%95%B0%EF%BC%88%E5%A4%A7%E4%B8%80%EF%BC%89/"/>
    <id>http://2544165563.github.io/2020/08/27/%E9%AB%98%E6%95%B0%EF%BC%88%E5%A4%A7%E4%B8%80%EF%BC%89/</id>
    <published>2020-08-27T03:00:50.646Z</published>
    <updated>2020-07-15T06:55:22.357Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定积分"><a href="#定积分" class="headerlink" title="定积分"></a>定积分</h1><a id="more"></a><h2 id="积分上限函数"><a href="#积分上限函数" class="headerlink" title="积分上限函数"></a>积分上限函数</h2><p>格式：                           <img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200604155702483.png"></p><p>积分上限函数的导数：<img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200604155919036.png"></p><p>例题：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200604162031098.png"><h2 id="定积分的计算"><a href="#定积分的计算" class="headerlink" title="定积分的计算"></a>定积分的计算</h2><h3 id="牛顿莱布尼茨公式（基本公式）"><a href="#牛顿莱布尼茨公式（基本公式）" class="headerlink" title="牛顿莱布尼茨公式（基本公式）"></a>牛顿莱布尼茨公式（基本公式）</h3><p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200610151115930.png">求导公式，arcsinx</p><p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200610151133588.png">构造法，分子-1+1</p><h3 id="换元法"><a href="#换元法" class="headerlink" title="换元法"></a>换元法</h3><p>三角换元</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200610152416926.png"><p>第一类换元</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200610152303308.png"><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200610152336136.png"><p>第二类换元</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200610152547015.png"><h3 id="分部积分法"><a href="#分部积分法" class="headerlink" title="分部积分法"></a>分部积分法</h3><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200610183544866.png"><h2 id="反常积分"><a href="#反常积分" class="headerlink" title="反常积分"></a>反常积分</h2><h3 id="无穷区间上的反常积分"><a href="#无穷区间上的反常积分" class="headerlink" title="无穷区间上的反常积分"></a>无穷区间上的反常积分</h3><p>定义：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200610183935242.png"><p>收敛与发散<img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200610184126717.png"></p><h3 id="无界函数的反常积分"><a href="#无界函数的反常积分" class="headerlink" title="无界函数的反常积分"></a>无界函数的反常积分</h3><p>定义：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200610184751540.png"><p>收敛和发散：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200610184845834.png"><h2 id="定积分的几何应用"><a href="#定积分的几何应用" class="headerlink" title="定积分的几何应用"></a>定积分的几何应用</h2><h3 id="曲线的长度"><a href="#曲线的长度" class="headerlink" title="曲线的长度"></a>曲线的长度</h3><p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603105038066.png">!</p><p>例题：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603105509556.png"><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603105522233.png"><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603105549179.png"><h3 id="平面图形的面积"><a href="#平面图形的面积" class="headerlink" title="平面图形的面积"></a>平面图形的面积</h3><p>直角坐标</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200611092703859.png"><p>极坐标</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200611093738678.png"><h3 id="旋转体的体积"><a href="#旋转体的体积" class="headerlink" title="旋转体的体积"></a>旋转体的体积</h3><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200611095357094.png"><h1 id="微分方程"><a href="#微分方程" class="headerlink" title="微分方程"></a>微分方程</h1><p>普通微分方程</p><p>定义：几阶导数就是几阶微分方程</p><p>例题：验证某函数是否是微分方程的解</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603090050962.png"><h2 id="可分离变量的微分方程"><a href="#可分离变量的微分方程" class="headerlink" title="可分离变量的微分方程"></a>可分离变量的微分方程</h2><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200611100059930.png"><h2 id="齐次方程"><a href="#齐次方程" class="headerlink" title="齐次方程"></a>齐次方程</h2><p>格式：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603091703927.png"><p>解法：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603091929717.png"><h2 id="一阶线性方程"><a href="#一阶线性方程" class="headerlink" title="一阶线性方程"></a>一阶线性方程</h2><p>格式：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603092139900.png"><p>Q(x)=0为齐次方程，否则为非齐次方程</p><p>解法：将非齐次或为齐次，求得：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603092422938.png"><p>原非齐次方程的通解为：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603092520338.png"><p>伯努利方程</p><p>格式：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603093252193.png"><p>解法：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603093330786.png"><p>证明解的例题：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200611100706343.png"><h2 id="高阶微分方程"><a href="#高阶微分方程" class="headerlink" title="高阶微分方程"></a>高阶微分方程</h2><h3 id="1-自变量只有x"><a href="#1-自变量只有x" class="headerlink" title="1.自变量只有x"></a>1.自变量只有x</h3><p>直接连续积分。</p><h3 id="2-变量为x、y的导数"><a href="#2-变量为x、y的导数" class="headerlink" title="2.变量为x、y的导数"></a>2.变量为x、y的导数</h3><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603095150037.png"><h3 id="3-变量为y、y的导数"><a href="#3-变量为y、y的导数" class="headerlink" title="3.变量为y、y的导数"></a>3.变量为y、y的导数</h3><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603095531385.png"><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/wps1.jpg"><h1 id="偏导数"><a href="#偏导数" class="headerlink" title="偏导数"></a>偏导数</h1><p>偏导数存在，但不一定连续</p><p>例子：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200611101350458.png"><p>高阶偏导数</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200611101708954.png"><h1 id="全微分"><a href="#全微分" class="headerlink" title="全微分"></a>全微分</h1><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200611143928518.png"><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200611144031204.png"><p>全微分的近似计算</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200611144347545.png"><h1 id="多元复合函数"><a href="#多元复合函数" class="headerlink" title="多元复合函数"></a>多元复合函数</h1><p>求导法则：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200611144832373.png"><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200611144956932.png"><p>例题：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200611145146906.png"><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200611145431790.png"><h2 id="隐函数"><a href="#隐函数" class="headerlink" title="隐函数"></a>隐函数</h2><p>一个方程</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603103058363.png"><p>方程组</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603103736962.png"><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200603103754833.png"><h2 id="求极值"><a href="#求极值" class="headerlink" title="求极值"></a>求极值</h2><p>步骤</p><p>1.分别对x,y求导得出Fx,Fy,求出驻点</p><p>2.分别求A:Fxx,B:Fxy,C:Fyy。</p><p>3.求出AC-B²。</p><p>4.将驻点带入，如果&gt;0，则是极值点。</p><h1 id="重积分"><a href="#重积分" class="headerlink" title="重积分"></a>重积分</h1><h2 id="重积分的计算"><a href="#重积分的计算" class="headerlink" title="重积分的计算"></a>重积分的计算</h2><p>性质：</p><p>1.公式相加性</p><p>2.区域相加性</p><p>3.公式比较，公式大的二重积分也大</p><p>4.对称性</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200602170502402.png"><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200602170515740.png"><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200602170529074.png"><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200602170544954.png"><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200602170557907.png"><p>解决方法：</p><p>1.利用直角坐标</p><p>X-型区域、Y-型区域</p><p>例题：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200530145520862.png"><p>2.利用极坐标</p><p>例题：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200530145355108.png"><h2 id="重积分x、y型的转换"><a href="#重积分x、y型的转换" class="headerlink" title="重积分x、y型的转换"></a>重积分x、y型的转换</h2><p>（空）</p><h1 id="无穷级数"><a href="#无穷级数" class="headerlink" title="无穷级数"></a>无穷级数</h1><h2 id="绝对收敛和条件收敛"><a href="#绝对收敛和条件收敛" class="headerlink" title="绝对收敛和条件收敛"></a>绝对收敛和条件收敛</h2><p>绝对收敛：将通项加上绝对值后仍然收敛。</p><p>条件收敛：通项加绝对值不收敛，不加绝对值收敛。</p><h2 id="常数项级数"><a href="#常数项级数" class="headerlink" title="常数项级数"></a>常数项级数</h2><p>解决方法：</p><p>1.如果是两项相减，直接带入前几项求</p><p>2.当一般项为等比数列时，当|q|&lt;1时收敛，当|q|&gt;=1时发散</p><p>3.裂项法</p><p>4.比较审敛法:大收敛小的就收敛，小的发散大的就发散</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200530141232152.png"><p>5.比值审敛法</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200530141440474.png"><p>6.根植审敛法（柯西判别法）</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200530141545351.png"><p>7.极限审敛法</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200530141759504.png"><h2 id="交错级数"><a href="#交错级数" class="headerlink" title="交错级数"></a>交错级数</h2><p>绝对收敛：加了绝对值符号依旧收敛。</p><p>条件收敛：去了绝对值符号才收敛。</p><p>1.一般项极限为0，前一项大于后一项</p><h2 id="幂级数"><a href="#幂级数" class="headerlink" title="幂级数"></a>幂级数</h2><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200530143947774.png"><h3 id="收敛区间与收敛域的区别"><a href="#收敛区间与收敛域的区别" class="headerlink" title="收敛区间与收敛域的区别"></a>收敛区间与收敛域的区别</h3><p>收敛区间：小于收敛半径的开区间</p><p>收敛域：将区间的两个值带入原幂函数，判断是收敛还是发散，如果收敛则为闭区间</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;定积分&quot;&gt;&lt;a href=&quot;#定积分&quot; class=&quot;headerlink&quot; title=&quot;定积分&quot;&gt;&lt;/a&gt;定积分&lt;/h1&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="高数" scheme="http://2544165563.github.io/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>JAVA登录小程序</title>
    <link href="http://2544165563.github.io/2020/08/27/%E8%AF%A5%E6%AD%BB%E7%9A%84%E8%8B%8D%E8%9D%87%EF%BC%88%E9%99%84JAVAGUI%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%A3%E7%A0%81%EF%BC%89/"/>
    <id>http://2544165563.github.io/2020/08/27/%E8%AF%A5%E6%AD%BB%E7%9A%84%E8%8B%8D%E8%9D%87%EF%BC%88%E9%99%84JAVAGUI%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%A3%E7%A0%81%EF%BC%89/</id>
    <published>2020-08-27T03:00:50.644Z</published>
    <updated>2020-08-01T02:07:39.859Z</updated>
    
    <content type="html"><![CDATA[<p>该死的苍蝇🐸。</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Action</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="title">Action</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> init();</span><br><span class="line"> setVisible(<span class="keyword">true</span>);</span><br><span class="line"> setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">&#125;</span><br><span class="line"> JButton button,button1; </span><br><span class="line"> JTextField text1;</span><br><span class="line"> JPasswordField text2;</span><br><span class="line"> Box basebox,box1,box2; </span><br><span class="line"> Connection con;</span><br><span class="line">String sql,s1,s2;</span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  setLayout(<span class="keyword">new</span> FlowLayout());  </span><br><span class="line">  JTextArea area=<span class="keyword">new</span> JTextArea(<span class="number">20</span>,<span class="number">20</span>);</span><br><span class="line">  JPanel panel=<span class="keyword">new</span> JPanel();  </span><br><span class="line">text1=<span class="keyword">new</span> JTextField(<span class="number">10</span>);   <span class="comment">//定义事件源</span></span><br><span class="line">text2=<span class="keyword">new</span> JPasswordField(<span class="number">10</span>);</span><br><span class="line">button=<span class="keyword">new</span> JButton(<span class="string">"登录"</span>);</span><br><span class="line">button1=<span class="keyword">new</span> JButton(<span class="string">"注册"</span>);</span><br><span class="line"> text1.addActionListener(<span class="keyword">this</span>);<span class="comment">//注册监视器</span></span><br><span class="line"> text2.addActionListener(<span class="keyword">this</span>);</span><br><span class="line"> button.addActionListener(<span class="keyword">this</span>);</span><br><span class="line"> button1.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">box1=Box.createVerticalBox();    <span class="comment">//布局</span></span><br><span class="line">box1.add(<span class="keyword">new</span> JLabel(<span class="string">"用户名："</span>));</span><br><span class="line">box1.add(Box.createVerticalStrut(<span class="number">8</span>));</span><br><span class="line">box1.add(<span class="keyword">new</span> JLabel(<span class="string">"密码："</span>));</span><br><span class="line">box1.add(Box.createVerticalStrut(<span class="number">8</span>));</span><br><span class="line">box2=Box.createVerticalBox();</span><br><span class="line">box2.add(text1);</span><br><span class="line">box2.add(Box.createVerticalStrut(<span class="number">8</span>));</span><br><span class="line">box2.add(text2);</span><br><span class="line">box2.add(Box.createVerticalStrut(<span class="number">8</span>));</span><br><span class="line">basebox=Box.createHorizontalBox();</span><br><span class="line">basebox.add(box1);</span><br><span class="line">basebox.add(Box.createHorizontalStrut(<span class="number">10</span>));</span><br><span class="line">basebox.add(box2);</span><br><span class="line">add(basebox);</span><br><span class="line">panel.add(button);</span><br><span class="line">panel.add(button1);</span><br><span class="line">add(panel);</span><br><span class="line">add(area);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">area.append(<span class="string">"加载数据库驱动成功\n"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">area.append(<span class="string">"加载数据库驱动失败\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">con=DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/date1"</span>,<span class="string">"root"</span>,<span class="string">"liuxiang5."</span>);</span><br><span class="line">area.append(<span class="string">"连接数据库成功"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">area.append(<span class="string">"连接数据库失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> &#125;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;   <span class="comment">//重写抽象方法</span></span><br><span class="line"> <span class="keyword">if</span>(e.getSource()==button)</span><br><span class="line">&#123;</span><br><span class="line"> s1=text1.getText().trim();</span><br><span class="line"> s2=text2.getText().trim();</span><br><span class="line"> sql=<span class="string">"select * from account where password='"</span>+s1+<span class="string">"' and password='"</span>+s2+<span class="string">"'"</span>; </span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    Statement st=con.createStatement();</span><br><span class="line">ResultSet rs=st.executeQuery(sql);</span><br><span class="line"><span class="keyword">if</span>(rs.next()) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(button, <span class="string">"登录成功"</span>);</span><br><span class="line">text1.setText(<span class="keyword">null</span>);</span><br><span class="line">text2.setText(<span class="keyword">null</span>);&#125;</span><br><span class="line"><span class="keyword">else</span> JOptionPane.showMessageDialog(button, <span class="string">"登陆失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(button, <span class="string">"登陆失败"</span>);</span><br><span class="line">text1.setText(<span class="keyword">null</span>);</span><br><span class="line">text2.setText(<span class="keyword">null</span>);</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(e.getSource()==button1)&#123;</span><br><span class="line">sql=<span class="string">"insert into account values('"</span>+s1+<span class="string">"','"</span>+s2+<span class="string">"')"</span>;</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">PreparedStatement pst;</span><br><span class="line">    pst=con.prepareStatement(sql);</span><br><span class="line"><span class="keyword">int</span> m=pst.executeUpdate();</span><br><span class="line"><span class="keyword">if</span>(m&gt;<span class="number">0</span>) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(button1, <span class="string">"注册成功"</span>);</span><br><span class="line">text1.setText(<span class="keyword">null</span>);</span><br><span class="line">text2.setText(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(button1, <span class="string">"注册失败"</span>);</span><br><span class="line">text1.setText(<span class="keyword">null</span>);</span><br><span class="line">text2.setText(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Action win=<span class="keyword">new</span> Action();</span><br><span class="line"> win.setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">310</span>, <span class="number">260</span>);</span><br><span class="line"> win.setTitle(<span class="string">"登录窗口"</span>);</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;该死的苍蝇🐸。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="JAVA" scheme="http://2544165563.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>泛型与集合框架</title>
    <link href="http://2544165563.github.io/2020/08/27/%E6%B3%9B%E5%9E%8B%E4%B8%8E%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/"/>
    <id>http://2544165563.github.io/2020/08/27/%E6%B3%9B%E5%9E%8B%E4%B8%8E%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/</id>
    <published>2020-08-27T03:00:50.643Z</published>
    <updated>2020-07-15T06:55:32.580Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-List表-有序可重复-LinkedList链表、ArrayList"><a href="#1-List表-有序可重复-LinkedList链表、ArrayList" class="headerlink" title="1.List表(有序可重复)(LinkedList链表、ArrayList)"></a>1.List表(有序可重复)(LinkedList链表、ArrayList)</h1><a id="more"></a><p>常用方法：</p><p>void add(int index,Object element)        boolean addAll(int index,Collection c)</p><p>Object get(int index)                                 Object remove(int index)</p><p>Object set(int index,Object element)      int indexOf(Object o)</p><p>int lastIndex(Object o)                               List subList(int fromIndex,int toIndex)                          </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Man</span> </span>&#123;</span><br><span class="line">String name;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">int</span> wages;</span><br><span class="line">Man(String name,<span class="keyword">int</span> age,<span class="keyword">int</span> wages) &#123;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line"><span class="keyword">this</span>.age=age;</span><br><span class="line"><span class="keyword">this</span>.wages=wages;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"姓名:"</span>+name+<span class="string">"  "</span>+<span class="string">"年龄:"</span>+age+<span class="string">"  "</span>+<span class="string">"工资:"</span>+wages);;&#125;&#125;</span><br><span class="line"><span class="comment">/*---------------------------------------------------------------------------------*/</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">And</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">  List&lt;Man&gt; list=<span class="keyword">new</span> ArrayList&lt;&gt;();  <span class="comment">//&lt;泛型&gt;</span></span><br><span class="line">  list.add(<span class="keyword">new</span> Man(<span class="string">"张三"</span>, <span class="number">18</span>, <span class="number">3000</span>));</span><br><span class="line">  list.add(<span class="keyword">new</span> Man(<span class="string">"李四"</span>, <span class="number">25</span>, <span class="number">3500</span>));</span><br><span class="line">  list.add(<span class="keyword">new</span> Man(<span class="string">"王五"</span>, <span class="number">22</span>, <span class="number">3200</span>));</span><br><span class="line">  list.add(<span class="keyword">new</span> Man(<span class="string">"赵六"</span>, <span class="number">24</span>, <span class="number">3300</span>));</span><br><span class="line">  <span class="keyword">int</span> len=list.size();     <span class="comment">//获取长度</span></span><br><span class="line"><span class="comment">//迭代器遍历</span></span><br><span class="line">Iterator&lt;Man&gt; iterator=list.iterator();    </span><br><span class="line"> <span class="keyword">while</span>(iterator.hasNext()) &#123;</span><br><span class="line"> Man man=iterator.next();</span><br><span class="line">man.get();&#125;&#125;&#125;</span><br><span class="line"><span class="comment">//简单遍历</span></span><br><span class="line"><span class="keyword">for</span>(Man man : list) &#123;</span><br><span class="line"> man.get();&#125;</span><br><span class="line"> &#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="1-Stack栈"><a href="#1-Stack栈" class="headerlink" title="(1)Stack栈"></a>(1)Stack栈</h2><p>常用方法：</p><p>Object push(Object item)</p><p>Object pop()</p><p>boolean empty()    //判断是否为空</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">And</span></span>&#123;</span><br><span class="line"> <span class="keyword">static</span> String months[]= &#123;<span class="string">"January"</span>,<span class="string">"February"</span>,<span class="string">"March"</span>,<span class="string">"April"</span>,<span class="string">"May"</span>,<span class="string">"June"</span>,<span class="string">"July"</span>,<span class="string">"August"</span>,<span class="string">"September"</span>,<span class="string">"October"</span>,<span class="string">"November"</span>,<span class="string">"December"</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">  Stack&lt;String&gt; stk=<span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;months.length;i++) </span><br><span class="line">  stk.push(months[i]);</span><br><span class="line">  System.out.println(stk);   <span class="comment">//输出栈内元素（正序）</span></span><br><span class="line">   <span class="keyword">while</span>(!stk.empty())</span><br><span class="line">   System.out.println(stk.pop());&#125;&#125;   <span class="comment">//出栈（倒序）</span></span><br></pre></td></tr></table></figure><h2 id="2-Queue队列"><a href="#2-Queue队列" class="headerlink" title="(2)Queue队列"></a>(2)Queue队列</h2><p>常用方法1.抛出异常方法 add(e)  remove()   element()</p><p>​               2.返回元素方法 offer(e)  poll()  peek()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">And</span></span>&#123;</span><br><span class="line"> <span class="keyword">static</span> String months[]= &#123;<span class="string">"January"</span>,<span class="string">"February"</span>,<span class="string">"March"</span>,<span class="string">"April"</span>,<span class="string">"May"</span>,<span class="string">"June"</span>,<span class="string">"July"</span>,<span class="string">"August"</span>,<span class="string">"September"</span>,<span class="string">"October"</span>,<span class="string">"November"</span>,<span class="string">"December"</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">  Queue&lt;String&gt; que=<span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;months.length;i++)</span><br><span class="line">  que.offer(months[i]);</span><br><span class="line">  <span class="keyword">while</span>(!que.isEmpty())</span><br><span class="line">  System.out.println(que.poll());&#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="2-Set集-无序不可重复-HashSet、TreeSet树集"><a href="#2-Set集-无序不可重复-HashSet、TreeSet树集" class="headerlink" title="2.Set集(无序不可重复)(HashSet、TreeSet树集)"></a>2.Set集(无序不可重复)(HashSet、TreeSet树集)</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">And</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">Set&lt;String&gt; set=<span class="keyword">new</span> TreeSet&lt;&gt;();</span><br><span class="line">set.add(<span class="string">"apple"</span>);</span><br><span class="line">set.add(<span class="string">"banane"</span>);</span><br><span class="line">set.add(<span class="string">"apple"</span>);</span><br><span class="line">System.out.println(set.contains(<span class="string">"banane"</span>));  <span class="comment">//判断是否存在</span></span><br><span class="line">System.out.println(set); &#125;&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><p>​       true</p><p>​       [apple,banane]</p><h1 id="3-Map映射（键-值对的集合）（HashMap散列映射、TreeMap）"><a href="#3-Map映射（键-值对的集合）（HashMap散列映射、TreeMap）" class="headerlink" title="3.Map映射（键-值对的集合）（HashMap散列映射、TreeMap）"></a>3.Map映射（键-值对的集合）（HashMap散列映射、TreeMap）</h1><p>常用方法：put(key,value)       get(key)</p><p>​                   entrySet(）  keySet()     values()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">And</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">Map&lt;String,String&gt; map=<span class="keyword">new</span> TreeMap&lt;&gt;();</span><br><span class="line">map.put(<span class="string">"1"</span>, <span class="string">"apple"</span>);</span><br><span class="line">map.put(<span class="string">"2"</span>, <span class="string">"banane"</span>);</span><br><span class="line">map.put(<span class="string">"1"</span>, <span class="string">"orange"</span>);</span><br><span class="line">System.out.println(map.get(<span class="string">"1"</span>));</span><br><span class="line"><span class="keyword">for</span>(String s:map.keySet())           <span class="comment">//根据键输出值</span></span><br><span class="line">System.out.print(map.get(s)+<span class="string">"  "</span>);System.out.print(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">for</span>(String s:map.values())           <span class="comment">//直接输出值</span></span><br><span class="line">System.out.print(s+<span class="string">"  "</span>);System.out.print(<span class="string">"\n"</span>);</span><br><span class="line">Iterator it=map.entrySet().iterator();     <span class="comment">//迭代器遍历</span></span><br><span class="line"><span class="keyword">while</span>(it.hasNext()) &#123;</span><br><span class="line">Map.Entry&lt;String,String&gt; entry=(Map.Entry&lt;String, String&gt;)it.next();</span><br><span class="line">System.out.println(entry.getKey()+<span class="string">":"</span>+entry.getValue());&#125; </span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><p>​            orange</p><p>​            orange  banane</p><p>​            orange  banane</p><p>​            1:orange</p><p>​            2:banane</p><h1 id="4-泛型"><a href="#4-泛型" class="headerlink" title="4.泛型"></a>4.泛型</h1><p>优点：可以建立具有类型安全的数据结构，在使用泛型类建立的数据结构时，不必进行类型转换</p><p>泛型类： class ShowObject<E>  E为任何对象（类）或接口</p><p>​                 泛型变量只能调用toString方法</p><p>泛型类声明对象：泛型类声明和创建对象时，类名后多一对“&lt;&gt;”          </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-List表-有序可重复-LinkedList链表、ArrayList&quot;&gt;&lt;a href=&quot;#1-List表-有序可重复-LinkedList链表、ArrayList&quot; class=&quot;headerlink&quot; title=&quot;1.List表(有序可重复)(LinkedList链表、ArrayList)&quot;&gt;&lt;/a&gt;1.List表(有序可重复)(LinkedList链表、ArrayList)&lt;/h1&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="JAVA" scheme="http://2544165563.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>菜鸡的无聊代码</title>
    <link href="http://2544165563.github.io/2020/08/27/%E8%8F%9C%E9%B8%A1%E7%9A%84%E6%97%A0%E8%81%8A%E4%BB%A3%E7%A0%81/"/>
    <id>http://2544165563.github.io/2020/08/27/%E8%8F%9C%E9%B8%A1%E7%9A%84%E6%97%A0%E8%81%8A%E4%BB%A3%E7%A0%81/</id>
    <published>2020-08-27T03:00:50.643Z</published>
    <updated>2020-07-15T06:55:28.663Z</updated>
    
    <content type="html"><![CDATA[<p>又不想学习，游戏又没新玩法，闲的用刚学的知识写几行代🦓🐴🦄，欢迎尝试运行下👀</p><a id="more"></a><img src="https://c-ssl.duitang.com/uploads/item/201804/30/2018043011318_TyyUt.jpeg"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Action</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">WindowListener</span>,<span class="title">ActionListener</span>,<span class="title">MouseListener</span></span>&#123;</span><br><span class="line">JButton button1,button2;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Action</span><span class="params">()</span> </span>&#123;</span><br><span class="line">init();</span><br><span class="line">setVisible(<span class="keyword">true</span>);</span><br><span class="line"> setDefaultCloseOperation(JFrame.DEFAULT_CURSOR);</span><br><span class="line"> <span class="keyword">this</span>.addWindowListener(<span class="keyword">this</span>);</span><br><span class="line"> </span><br><span class="line">  &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">setLayout(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER,<span class="number">200</span>,<span class="number">40</span>));</span><br><span class="line">JLabel label=<span class="keyword">new</span> JLabel(<span class="string">"你是憨憨吗？"</span>);</span><br><span class="line">label.setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>,Font.PLAIN,<span class="number">100</span>));</span><br><span class="line">button1=<span class="keyword">new</span> JButton(<span class="string">"我是"</span>);</span><br><span class="line">button2=<span class="keyword">new</span> JButton(<span class="string">"我不是"</span>);</span><br><span class="line">button1.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">button2.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">button2.addMouseListener(<span class="keyword">this</span>);</span><br><span class="line">JPanel panel=<span class="keyword">new</span> JPanel();</span><br><span class="line">JPanel panel2=<span class="keyword">new</span> JPanel();</span><br><span class="line">panel.add(label);</span><br><span class="line"></span><br><span class="line">add(panel);</span><br><span class="line">    add(button1);</span><br><span class="line">    add(button2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowActivated</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosed</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=JOptionPane.showConfirmDialog(<span class="keyword">null</span>, <span class="string">"你是一个憨憨吗"</span>,<span class="string">"询问"</span>,JOptionPane.YES_NO_OPTION);</span><br><span class="line"><span class="keyword">if</span>(a==JOptionPane.YES_OPTION)</span><br><span class="line">System.exit(-<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowDeactivated</span><span class="params">(WindowEvent e)</span> </span>&#123;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowDeiconified</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowIconified</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowOpened</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(e.getSource().equals(button1)) &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"有自知之明，不错。"</span>,<span class="string">"恭喜"</span>,JOptionPane.PLAIN_MESSAGE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(e.getSource().equals(button2))&#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"你竟然！！！"</span>,<span class="string">"可怕"</span>,JOptionPane.INFORMATION_MESSAGE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseEntered</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">Component com=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(e.getSource() <span class="keyword">instanceof</span> Component) &#123;</span><br><span class="line">com=(Component) e.getSource();</span><br><span class="line">      <span class="keyword">int</span> a=(<span class="keyword">int</span>) (<span class="number">1</span>+Math.random()*<span class="number">800</span>);</span><br><span class="line">      <span class="keyword">int</span> b=(<span class="keyword">int</span>) (<span class="number">1</span>+Math.random()*<span class="number">800</span>);</span><br><span class="line">      com.setLocation(a,b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseExited</span><span class="params">(MouseEvent arg0)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mousePressed</span><span class="params">(MouseEvent arg0)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseReleased</span><span class="params">(MouseEvent arg0)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Action win=<span class="keyword">new</span> Action();</span><br><span class="line"> win.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">960</span>, <span class="number">960</span>);</span><br><span class="line"> win.setTitle(<span class="string">"真诚的问题"</span>);</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;又不想学习，游戏又没新玩法，闲的用刚学的知识写几行代🦓🐴🦄，欢迎尝试运行下👀&lt;/p&gt;
    
    </summary>
    
    
      <category term="日常" scheme="http://2544165563.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="JAVA" scheme="http://2544165563.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>图形用户界面设计</title>
    <link href="http://2544165563.github.io/2020/08/27/%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1/"/>
    <id>http://2544165563.github.io/2020/08/27/%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1/</id>
    <published>2020-08-27T03:00:50.641Z</published>
    <updated>2020-07-15T06:55:39.986Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-窗口-JFrame"><a href="#1-窗口-JFrame" class="headerlink" title="1.窗口(JFrame)"></a>1.窗口(JFrame)</h1><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> javax.swing.JFrame.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">JFrame window1=<span class="keyword">new</span> JFrame(<span class="string">"我的世界"</span>);        <span class="comment">//创建</span></span><br><span class="line">    JFrame window2=<span class="keyword">new</span> JFrame(<span class="string">"星际战甲"</span>);</span><br><span class="line">    window1.setBounds(<span class="number">60</span>, <span class="number">100</span>, <span class="number">1588</span>, <span class="number">980</span>);      <span class="comment">//调整（前部分为位置x,y，后面为大小w,h）</span></span><br><span class="line">    window2.setBounds(<span class="number">260</span>, <span class="number">100</span>, <span class="number">588</span>, <span class="number">308</span>);</span><br><span class="line">    window1.setVisible(<span class="keyword">true</span>);              <span class="comment">//是否显示窗口</span></span><br><span class="line">    window1.setDefaultCloseOperation(EXIT_ON_CLOSE);   <span class="comment">//点击关闭图标时的处理</span></span><br><span class="line">    window2.setVisible(<span class="keyword">true</span>);</span><br><span class="line">    window2.setDefaultCloseOperation(DISPOSE_ON_CLOSE);</span><br><span class="line">  &#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="2-菜单条-JMenubar-、菜单-JMenu-、菜单项-JMenuItem"><a href="#2-菜单条-JMenubar-、菜单-JMenu-、菜单项-JMenuItem" class="headerlink" title="2.菜单条(JMenubar)、菜单(JMenu)、菜单项(JMenuItem)"></a>2.菜单条(JMenubar)、菜单(JMenu)、菜单项(JMenuItem)</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.InputEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> javax.swing.JFrame.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WindowMenu</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123; </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">WindowMenu</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">WindowMenu</span><span class="params">(String s,<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> w,<span class="keyword">int</span> h)</span> </span>&#123;</span><br><span class="line">init(s);</span><br><span class="line">setLocation(x, y);</span><br><span class="line">setSize(w, h);</span><br><span class="line">setVisible(<span class="keyword">true</span>);</span><br><span class="line">setDefaultCloseOperation(DISPOSE_ON_CLOSE);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">  setTitle(s);</span><br><span class="line">  JMenuBar menubar =<span class="keyword">new</span> JMenuBar();  <span class="comment">//建立菜单条</span></span><br><span class="line">  JMenu menu=<span class="keyword">new</span> JMenu(<span class="string">"菜单"</span>);       <span class="comment">//建立菜单</span></span><br><span class="line">  JMenu submenu=<span class="keyword">new</span> JMenu(<span class="string">"软件项目"</span>); </span><br><span class="line">  JMenuItem item1=<span class="keyword">new</span> JMenuItem(<span class="string">"JAVA话题"</span>,<span class="keyword">new</span> ImageIcon(<span class="string">"a.gif"</span>));</span><br><span class="line">  JMenuItem item2=<span class="keyword">new</span> JMenuItem(<span class="string">"动画话题"</span>,<span class="keyword">new</span> ImageIcon(<span class="string">"b.gif"</span>));</span><br><span class="line">  menu.add(item1);</span><br><span class="line">  menu.addSeparator();</span><br><span class="line">  menu.add(item2);</span><br><span class="line">  menu.add(submenu);</span><br><span class="line">  submenu.add(<span class="keyword">new</span> JMenuItem(<span class="string">"汽车销售系统"</span>,<span class="keyword">new</span> ImageIcon(<span class="string">"c.gif"</span>)));</span><br><span class="line">  submenu.add(<span class="keyword">new</span> JMenuItem(<span class="string">"农场信息系统"</span>,<span class="keyword">new</span> ImageIcon(<span class="string">"d.gif"</span>)));</span><br><span class="line">  menubar.add(menu);</span><br><span class="line">  setJMenuBar(menubar);</span><br><span class="line">  &#125;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">WindowMenu win=<span class="keyword">new</span> WindowMenu(<span class="string">"我的世界"</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">1200</span>,<span class="number">900</span>); &#125;&#125;</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/tu.png"><h1 id="3-常用组件与布局"><a href="#3-常用组件与布局" class="headerlink" title="3.常用组件与布局"></a>3.常用组件与布局</h1><p>组件：</p><p>1.文本框(JTextField）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   setLayout(<span class="keyword">new</span> FlowLayout();  </span><br><span class="line">add(<span class="keyword">new</span> JLabel(<span class="string">"文本框"</span>));    </span><br><span class="line">JTextField  text=<span class="keyword">new</span> JTextField(<span class="number">10</span>);</span><br><span class="line">add(text);&#125;</span><br></pre></td></tr></table></figure><p>2.文本区(JTexArea)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">add(<span class="keyword">new</span> JLabel(<span class="string">"文本区"</span>));</span><br><span class="line">JTextArea texts=<span class="keyword">new</span> JTextArea(<span class="number">6</span>,<span class="number">12</span>);</span><br><span class="line">add(<span class="keyword">new</span> JScrollPane(texts));  <span class="comment">//滚动窗格</span></span><br></pre></td></tr></table></figure><p>3.按钮(JButton)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">add(<span class="keyword">new</span> JLabel(<span class="string">"按钮:"</span>));</span><br><span class="line">JButton button=<span class="keyword">new</span> JButton(<span class="string">"确定"</span>);</span><br><span class="line">add(button);</span><br></pre></td></tr></table></figure><p>4.标签(JLabel)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add(<span class="keyword">new</span> JLabel(<span class="string">"名称"</span>));</span><br></pre></td></tr></table></figure><p>5.选择框(JCheckBox)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">add(<span class="keyword">new</span> JLabel(<span class="string">"选择框"</span>));</span><br><span class="line">  JCheckBox check1=<span class="keyword">new</span> JCheckBox(<span class="string">"篮球"</span>);</span><br><span class="line">  JCheckBox check2=<span class="keyword">new</span> JCheckBox(<span class="string">"足球"</span>);</span><br><span class="line">  JCheckBox check3=<span class="keyword">new</span> JCheckBox(<span class="string">"乒乓球"</span>);</span><br><span class="line">  add(check1);</span><br><span class="line">  add(check2);</span><br><span class="line">  add(check3);</span><br></pre></td></tr></table></figure><p>6.单选按钮(JRadioButton)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">add(<span class="keyword">new</span> JLabel(<span class="string">"单选按钮"</span>));</span><br><span class="line">  ButtonGroup group=<span class="keyword">new</span> ButtonGroup();</span><br><span class="line">  JRadioButton radio1=<span class="keyword">new</span> JRadioButton(<span class="string">"男"</span>);</span><br><span class="line">  JRadioButton radio2=<span class="keyword">new</span> JRadioButton(<span class="string">"女"</span>);</span><br><span class="line">  group.add(radio1);</span><br><span class="line">  group.add(radio2);</span><br><span class="line">  add(radio1);</span><br><span class="line">  add(radio2);</span><br></pre></td></tr></table></figure><p>7.下拉列表(JComboBox)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">add(<span class="keyword">new</span> JLabel(<span class="string">"下拉列表"</span>));</span><br><span class="line">  JComboBox combox=<span class="keyword">new</span> JComboBox();</span><br><span class="line">  combox.addItem(<span class="string">"星际战甲"</span>);</span><br><span class="line">  combox.addItem(<span class="string">"英雄联盟"</span>);</span><br><span class="line">  combox.addItem(<span class="string">"我的世界"</span>);</span><br><span class="line">  add(combox);</span><br></pre></td></tr></table></figure><p>8.密码框(JPasswordField)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">add(<span class="keyword">new</span> JLabel(<span class="string">"密码框"</span>));</span><br><span class="line">JPasswordField password=<span class="keyword">new</span> JPasswordField(<span class="number">10</span>);</span><br><span class="line">password.setEchoChar(<span class="string">'*'</span>);</span><br><span class="line">add(password);</span><br></pre></td></tr></table></figure><p>9.面板(JPanel)</p><p>三种常用布局：</p><p>1.FlowLayout流动式布局</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setLayout(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER，<span class="number">20</span>，<span class="number">40</span>));  </span><br><span class="line">                       <span class="comment">//创建布局，中间对齐，水平间距，竖直间距。（默认是中，5，5）</span></span><br></pre></td></tr></table></figure><p>2.BorderLayout边框式布局</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    setLayout(<span class="keyword">new</span> BorderLayout());  <span class="comment">//创建布局</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> JButton button=<span class="keyword">new</span> JButton(<span class="string">"确1定"</span>);</span><br><span class="line"> add(button,BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line"> JButton button1=<span class="keyword">new</span> JButton(<span class="string">"确2定"</span>);</span><br><span class="line"> add(button1,BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line"> JButton button2=<span class="keyword">new</span> JButton(<span class="string">"确3定"</span>);</span><br><span class="line"> add(button2,BorderLayout.WEST);</span><br><span class="line"></span><br><span class="line"> JButton button3=<span class="keyword">new</span> JButton(<span class="string">"确4定"</span>);</span><br><span class="line"> add(button3,BorderLayout.EAST);</span><br><span class="line"></span><br><span class="line"> add(<span class="keyword">new</span> JButton(<span class="string">"确5定"</span>),BorderLayout.NORTH);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/KZEN3])JY~2{$SFZFLZ9A04.png"><p>3.GridLayout网格式布局</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">setLayout(<span class="keyword">new</span> GridLayout(<span class="number">2</span>,<span class="number">2</span>));  <span class="comment">//2行2列</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">JButton button=<span class="keyword">new</span> JButton(<span class="string">"确1定"</span>);</span><br><span class="line">add(button);</span><br><span class="line"></span><br><span class="line">JButton button1=<span class="keyword">new</span> JButton(<span class="string">"确2定"</span>);</span><br><span class="line">add(button1);</span><br><span class="line"></span><br><span class="line">JButton button2=<span class="keyword">new</span> JButton(<span class="string">"确3定"</span>);</span><br><span class="line">add(button2);</span><br><span class="line"></span><br><span class="line">JButton button3=<span class="keyword">new</span> JButton(<span class="string">"确4定"</span>);</span><br><span class="line">add(button3,BorderLayout.EAST); &#125;</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/@{WJ)@8O$G5ZAZS1$2N{)0J.png"><p>混合使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   JLabel label=<span class="keyword">new</span> JLabel(<span class="string">"标签"</span>);</span><br><span class="line">   JPanel panel=<span class="keyword">new</span> JPanel();</span><br><span class="line">   panel.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">2</span>,<span class="number">2</span>));  <span class="comment">//创建布局</span></span><br><span class="line"></span><br><span class="line">JButton button=<span class="keyword">new</span> JButton(<span class="string">"确1定"</span>);</span><br><span class="line">panel.add(button);</span><br><span class="line">JButton button1=<span class="keyword">new</span> JButton(<span class="string">"确2定"</span>);</span><br><span class="line">panel.add(button1);</span><br><span class="line">JButton button2=<span class="keyword">new</span> JButton(<span class="string">"确3定"</span>);</span><br><span class="line">panel.add(button2);</span><br><span class="line">JButton button3=<span class="keyword">new</span> JButton(<span class="string">"确4定"</span>);</span><br><span class="line"> panel.add(button3);</span><br><span class="line"> </span><br><span class="line"> add(label,BorderLayout.NORTH);</span><br><span class="line"> add(panel,BorderLayout.SOUTH);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/AE}$FEBT3UCH)F01BA)006M.png"><h1 id="4-处理事件"><a href="#4-处理事件" class="headerlink" title="4.处理事件"></a>4.处理事件</h1><h5 id="1-ActionEvent事件（文本框、按钮、菜单项、密码框、单选按钮）"><a href="#1-ActionEvent事件（文本框、按钮、菜单项、密码框、单选按钮）" class="headerlink" title="1.ActionEvent事件（文本框、按钮、菜单项、密码框、单选按钮）"></a>1.ActionEvent事件（文本框、按钮、菜单项、密码框、单选按钮）</h5><p>setText()设置内容   getText()获得内容</p><p>append()  添加内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Action</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="title">Action</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> init();</span><br><span class="line"> setVisible(<span class="keyword">true</span>);</span><br><span class="line"> setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">&#125;</span><br><span class="line"> JButton button,button1; </span><br><span class="line"> JTextField text1;</span><br><span class="line"> JPasswordField text2;</span><br><span class="line"> Box basebox,box1,box2; </span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  setLayout(<span class="keyword">new</span> FlowLayout());  </span><br><span class="line">  JPanel panel=<span class="keyword">new</span> JPanel();  </span><br><span class="line">text1=<span class="keyword">new</span> JTextField(<span class="number">10</span>);   <span class="comment">//定义事件源</span></span><br><span class="line">text2=<span class="keyword">new</span> JPasswordField(<span class="number">10</span>);</span><br><span class="line">button=<span class="keyword">new</span> JButton(<span class="string">"登录"</span>);</span><br><span class="line">button1=<span class="keyword">new</span> JButton(<span class="string">"清空"</span>);</span><br><span class="line"> text1.addActionListener(<span class="keyword">this</span>);<span class="comment">//注册监视器</span></span><br><span class="line"> text2.addActionListener(<span class="keyword">this</span>);</span><br><span class="line"> button.addActionListener(<span class="keyword">this</span>);</span><br><span class="line"> button1.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">box1=Box.createVerticalBox();    <span class="comment">//布局</span></span><br><span class="line">box1.add(<span class="keyword">new</span> JLabel(<span class="string">"用户名："</span>));</span><br><span class="line">box1.add(Box.createVerticalStrut(<span class="number">8</span>));</span><br><span class="line">box1.add(<span class="keyword">new</span> JLabel(<span class="string">"密码："</span>));</span><br><span class="line">box1.add(Box.createVerticalStrut(<span class="number">8</span>));</span><br><span class="line">box2=Box.createVerticalBox();</span><br><span class="line">box2.add(text1);</span><br><span class="line">box2.add(Box.createVerticalStrut(<span class="number">8</span>));</span><br><span class="line">box2.add(text2);</span><br><span class="line">box2.add(Box.createVerticalStrut(<span class="number">8</span>));</span><br><span class="line">basebox=Box.createHorizontalBox();</span><br><span class="line">basebox.add(box1);</span><br><span class="line">basebox.add(Box.createHorizontalStrut(<span class="number">10</span>));</span><br><span class="line">basebox.add(box2);</span><br><span class="line">add(basebox);</span><br><span class="line">panel.add(button);</span><br><span class="line">panel.add(button1);</span><br><span class="line">add(panel);&#125;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;   <span class="comment">//重写抽象方法</span></span><br><span class="line"><span class="keyword">if</span>(e.getSource()==button)</span><br><span class="line">&#123;</span><br><span class="line">String s1=text1.getText();</span><br><span class="line">String s2=text2.getText();</span><br><span class="line">String s3=<span class="string">"123456"</span>;</span><br><span class="line">String s4=<span class="string">"admin"</span>;</span><br><span class="line"><span class="keyword">if</span>(s1.matches(s4)&amp;&amp;s2.matches(s3)) JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"密码正确"</span>);</span><br><span class="line"><span class="keyword">else</span> &#123;JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"密码错误"</span>);&#125;  <span class="comment">//弹出对话框</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;text1.setText(<span class="keyword">null</span>);</span><br><span class="line">       text2.setText(<span class="keyword">null</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Action win=<span class="keyword">new</span> Action();</span><br><span class="line"> win.setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">310</span>, <span class="number">260</span>);</span><br><span class="line"> win.setTitle(<span class="string">"登录窗口"</span>);</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><h5 id="2-ItemEvent事件（下拉列表、选择框）"><a href="#2-ItemEvent事件（下拉列表、选择框）" class="headerlink" title="2.ItemEvent事件（下拉列表、选择框）"></a>2.ItemEvent事件（下拉列表、选择框）</h5><p>getItemSelectable()返回事件源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Action</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ItemListener</span></span>&#123;</span><br><span class="line">JComboBox chioce;</span><br><span class="line">JTextArea textshow;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Action</span><span class="params">()</span> </span>&#123;</span><br><span class="line">init();</span><br><span class="line">setVisible(<span class="keyword">true</span>);</span><br><span class="line">setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">chioce=<span class="keyword">new</span> JComboBox();</span><br><span class="line">chioce.addItem(<span class="string">"请做出你的选择"</span>);</span><br><span class="line">chioce.addItem(<span class="string">"星际战甲"</span>);</span><br><span class="line">chioce.addItem(<span class="string">"我的世界"</span>);</span><br><span class="line">chioce.addItem(<span class="string">"英雄联盟"</span>);</span><br><span class="line">JButton button=<span class="keyword">new</span> JButton(<span class="string">"选择"</span>);</span><br><span class="line">chioce.addItemListener(<span class="keyword">this</span>);</span><br><span class="line">textshow=<span class="keyword">new</span> JTextArea(<span class="number">9</span>,<span class="number">20</span>);  <span class="comment">//高，宽</span></span><br><span class="line">add(chioce);</span><br><span class="line">add(button);</span><br><span class="line">add(<span class="keyword">new</span> JScrollPane(textshow));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">itemStateChanged</span><span class="params">(ItemEvent e)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(chioce.getSelectedItem().equals(<span class="string">"星际战甲"</span>)) textshow.setText(<span class="string">"我喜欢"</span>);</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span>(chioce.getSelectedItem().equals(<span class="string">"我的世界"</span>))textshow.setText(<span class="string">"怀念"</span>);</span><br><span class="line">   <span class="keyword">else</span> textshow.setText(<span class="string">"无限火力！！！"</span>);</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Action win=<span class="keyword">new</span> Action();</span><br><span class="line"> win.setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">310</span>, <span class="number">260</span>);</span><br><span class="line"> win.setTitle(<span class="string">"登录窗口"</span>);</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/haha.png"><h5 id="3-DocumentEvent事件（文本区）"><a href="#3-DocumentEvent事件（文本区）" class="headerlink" title="3.DocumentEvent事件（文本区）"></a>3.DocumentEvent事件（文本区）</h5><p>getDocument()返回文档事件源，注册监视器的时候用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.event.DocumentEvent;</span><br><span class="line"><span class="keyword">import</span> javax.swing.event.DocumentListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Action</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">DocumentListener</span></span>&#123;</span><br><span class="line">JTextArea text1,text2;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Action</span><span class="params">()</span> </span>&#123;</span><br><span class="line">init();</span><br><span class="line">setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">setVisible(<span class="keyword">true</span>);</span><br><span class="line">setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  text1=<span class="keyword">new</span> JTextArea(<span class="number">6</span>,<span class="number">8</span>);</span><br><span class="line">  text2=<span class="keyword">new</span> JTextArea(<span class="number">6</span>,<span class="number">8</span>);</span><br><span class="line">  add(<span class="keyword">new</span> JScrollPane(text1));</span><br><span class="line">  add(<span class="keyword">new</span> JScrollPane(text2));</span><br><span class="line">  text1.getDocument().addDocumentListener(<span class="keyword">this</span>);   <span class="comment">//像文档注册监视器</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">changedUpdate</span><span class="params">(DocumentEvent e)</span> </span>&#123;</span><br><span class="line">String s1=text1.getText();</span><br><span class="line">String regex=<span class="string">"[\\s\\d\\p&#123;Punct&#125;]+"</span>; <span class="comment">//空格类字符、0~9、标点符号其中一个出现1次或n次</span></span><br><span class="line">String[] word=s1.split(regex);</span><br><span class="line">Arrays.sort(word);  <span class="comment">//将字典从小到大排序</span></span><br><span class="line">text2.setText(<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">for</span>(String s:word)</span><br><span class="line">text2.append(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertUpdate</span><span class="params">(DocumentEvent e)</span> </span>&#123;</span><br><span class="line">changedUpdate(e);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeUpdate</span><span class="params">(DocumentEvent e)</span> </span>&#123;</span><br><span class="line">changedUpdate(e);</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><h5 id="4-MouseEvent事件-鼠标"><a href="#4-MouseEvent事件-鼠标" class="headerlink" title="4.MouseEvent事件(鼠标)"></a>4.MouseEvent事件(鼠标)</h5><p>getX() getY()  获取鼠标在事件源上的x-y坐标   getClickCount() 获取鼠标单击次数</p><p>getModifiers()  获取鼠标的左键或右键,使用InputEvent类中的常量BUTTON1_MASK与BUTTON3_MASK表示</p><p>1.mousePressed(MouseEvent)  在事件源上按下鼠标</p><p>2.mouseReleased(MouseEvent)  在事件源上释放鼠标</p><p>3.mouseEntered(MouseEvent)    鼠标进入组件时</p><p>4.mouseExited(MouseEvent)    鼠标离开容器时</p><p>5.mouseClicked(MouseEvent)    单击鼠标时</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Action</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">MouseListener</span></span>&#123;</span><br><span class="line">JTextField text;</span><br><span class="line">JTextArea area;</span><br><span class="line">JButton button;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Action</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  init();</span><br><span class="line">  setVisible(<span class="keyword">true</span>);</span><br><span class="line">  setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">text=<span class="keyword">new</span> JTextField(<span class="number">8</span>);</span><br><span class="line">area=<span class="keyword">new</span> JTextArea(<span class="number">55</span>,<span class="number">138</span>);</span><br><span class="line">text.addMouseListener(<span class="keyword">this</span>);</span><br><span class="line">button=<span class="keyword">new</span> JButton(<span class="string">"按钮"</span>);</span><br><span class="line">button.addMouseListener(<span class="keyword">this</span>);</span><br><span class="line">addMouseListener(<span class="keyword">this</span>);</span><br><span class="line">add(button);</span><br><span class="line">add(text);</span><br><span class="line">add(<span class="keyword">new</span> JScrollPane(area));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(e.getClickCount()&gt;=<span class="number">2</span>) </span><br><span class="line">area.append(<span class="string">"\n鼠标连击，位置："</span>+<span class="string">"("</span>+e.getX()+<span class="string">","</span>+e.getY()+<span class="string">")"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseEntered</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(e.getSource() <span class="keyword">instanceof</span> JButton)    <span class="comment">//instanceof属于</span></span><br><span class="line">  area.append(<span class="string">"\n鼠标进入按钮，位置："</span>+<span class="string">"("</span>+e.getX()+<span class="string">","</span>+e.getY()+<span class="string">")"</span>);</span><br><span class="line">  <span class="keyword">if</span>(e.getSource() <span class="keyword">instanceof</span> JTextField)</span><br><span class="line">  area.append(<span class="string">"\n鼠标进入文本框，位置："</span>+<span class="string">"("</span>+e.getX()+<span class="string">","</span>+e.getY()+<span class="string">")"</span>);</span><br><span class="line">  <span class="keyword">if</span>(e.getSource() <span class="keyword">instanceof</span> JFrame)</span><br><span class="line">  area.append(<span class="string">"\n鼠标进入窗口，位置："</span>+<span class="string">"("</span>+e.getX()+<span class="string">","</span>+e.getY()+<span class="string">")"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseExited</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">area.append(<span class="string">"\n鼠标退出，位置："</span>+<span class="string">"("</span>+e.getX()+<span class="string">","</span>+e.getY()+<span class="string">")"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mousePressed</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">area.append(<span class="string">"\n鼠标按下，位置："</span>+<span class="string">"("</span>+e.getX()+<span class="string">","</span>+e.getY()+<span class="string">")"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseReleased</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">area.append(<span class="string">"\n鼠标释放，位置："</span>+<span class="string">"("</span>+e.getX()+<span class="string">","</span>+e.getY()+<span class="string">")"</span>);</span><br><span class="line"></span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><p>mouseDragged(MouseEvent)   拖动鼠标(不必在事件源上)</p><p>mouseMoved(MouseEvent)  移动鼠标(在事件源上)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PoliceListen</span> <span class="keyword">extends</span> <span class="title">JLayeredPane</span> <span class="keyword">implements</span> <span class="title">MouseListener</span>,<span class="title">MouseMotionListener</span></span>&#123;</span><br><span class="line">  JButton button=<span class="keyword">new</span> JButton(<span class="string">"用鼠标拖动我"</span>);</span><br><span class="line">    <span class="keyword">int</span> x,y,a,b,x0,y0;  <span class="comment">//x,y鼠标在组件中的位置,a,b组件左上角在容器的位置</span></span><br><span class="line">    PoliceListen()&#123;</span><br><span class="line">    JButton button=<span class="keyword">new</span> JButton(<span class="string">"用鼠标拖动我"</span>);</span><br><span class="line">    button.addMouseListener(<span class="keyword">this</span>);</span><br><span class="line">    button.addMouseMotionListener(<span class="keyword">this</span>);</span><br><span class="line">    setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">    add(button,JLayeredPane.DEFAULT_LAYER);    <span class="comment">//默认层</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseDragged</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">Component com=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(e.getSource() <span class="keyword">instanceof</span> Component) &#123;</span><br><span class="line">com=(Component) e.getSource();</span><br><span class="line">a=com.getBounds().x;  b=com.getBounds().y;</span><br><span class="line">x=e.getX();y=e.getY();</span><br><span class="line">a=a+x;</span><br><span class="line">b=b+y;</span><br><span class="line">com.setLocation(a-x0, b-y0);</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseMoved</span><span class="params">(MouseEvent e)</span> </span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseEntered</span><span class="params">(MouseEvent e)</span> </span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseExited</span><span class="params">(MouseEvent e)</span> </span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mousePressed</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">JComponent com=<span class="keyword">null</span>;            <span class="comment">//定义组件容器</span></span><br><span class="line">com=(JComponent) e.getSource();   <span class="comment">//放入事件源</span></span><br><span class="line">setLayer(com,JLayeredPane.DRAG_LAYER); <span class="comment">//点击进入拖拽层</span></span><br><span class="line">a=com.getBounds().x;                    </span><br><span class="line">b=com.getBounds().y;</span><br><span class="line">x0=e.getX();</span><br><span class="line">y0=e.getY();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseReleased</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">JComponent com=<span class="keyword">null</span>;</span><br><span class="line">com=(JComponent) e.getSource();</span><br><span class="line">setLayer(com,JLayeredPane.DEFAULT_LAYER);&#125;&#125;    <span class="comment">//释放 返回默认层</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Action</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;</span><br><span class="line">   PoliceListen listen;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Action</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  listen=<span class="keyword">new</span> PoliceListen();</span><br><span class="line">  add(listen,BorderLayout.CENTER);</span><br><span class="line">  setVisible(<span class="keyword">true</span>);</span><br><span class="line">  setBounds(<span class="number">12</span>,<span class="number">12</span>,<span class="number">300</span>,<span class="number">300</span>);</span><br><span class="line">  setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Action win=<span class="keyword">new</span> Action();</span><br><span class="line"> win.setBounds(<span class="number">10</span>, <span class="number">10</span>, <span class="number">460</span>, <span class="number">360</span>);</span><br><span class="line"> win.setTitle(<span class="string">"拖动"</span>);</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><h5 id="5-焦点事件-FocusEvent"><a href="#5-焦点事件-FocusEvent" class="headerlink" title="5.焦点事件(FocusEvent)"></a>5.焦点事件(FocusEvent)</h5><p>当点击一个组件时，该组件就有输入焦点，其他就没有，一个组件时可以调用public boolean requestFocusInWindow()方法获得输入焦点</p><p>添加监视器：addFocusListener()</p><p>方法：1.focusGained(FocusEvent e) 从无输入焦点到有输入焦点</p><p>​            2.focusLost(FocusEvent e)从有输入焦点到无输入焦点</p><h5 id="6-键盘事件-KeyEvent"><a href="#6-键盘事件-KeyEvent" class="headerlink" title="6.键盘事件(KeyEvent)"></a>6.键盘事件(KeyEvent)</h5><p>KeyPressed(KeyEvent e)    按下         </p><p>KeyReleased(KeyEvent e)   释放</p><p>KeyTyped(KeyEvent e)      按下又释放</p><p>getKeyCode()     获取键码值           getKeyChar  获取键盘字符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Action</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">KeyListener</span>,<span class="title">FocusListener</span></span>&#123;</span><br><span class="line">JTextField text[]=<span class="keyword">new</span> JTextField[<span class="number">3</span>];</span><br><span class="line">JButton button;</span><br><span class="line">Action()&#123;</span><br><span class="line">setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">    &#123;text[i]=<span class="keyword">new</span> JTextField(<span class="number">7</span>);</span><br><span class="line">    text[i].addKeyListener(<span class="keyword">this</span>);</span><br><span class="line">    text[i].addFocusListener(<span class="keyword">this</span>);</span><br><span class="line">    add(text[i]);</span><br><span class="line">    &#125;</span><br><span class="line">      button=<span class="keyword">new</span> JButton(<span class="string">"确定"</span>);</span><br><span class="line">      add(button);</span><br><span class="line">      text[<span class="number">0</span>].requestFocusInWindow();</span><br><span class="line">      setVisible(<span class="keyword">true</span>);</span><br><span class="line">      setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">focusGained</span><span class="params">(FocusEvent e)</span> </span>&#123;</span><br><span class="line">JTextField t=(JTextField) e.getSource();</span><br><span class="line">t.setText(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">focusLost</span><span class="params">(FocusEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">JTextField t=(JTextField) e.getSource();</span><br><span class="line"><span class="keyword">if</span>(t.getCaretPosition()&gt;=<span class="number">6</span>)   <span class="comment">//获取插入的字符数</span></span><br><span class="line">t.transferFocus();           <span class="comment">//转移焦点</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-使用MVA结构"><a href="#5-使用MVA结构" class="headerlink" title="5.使用MVA结构"></a>5.使用MVA结构</h1><p>模型、视图、控制器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PoliceListen</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> a,b,c,area;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set1</span><span class="params">(<span class="keyword">double</span> e)</span> </span>&#123;</span><br><span class="line">a=e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set2</span><span class="params">(<span class="keyword">double</span> e)</span> </span>&#123;</span><br><span class="line">b=e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set3</span><span class="params">(<span class="keyword">double</span> e)</span> </span>&#123;</span><br><span class="line">c=e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getarea</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a+b&gt;c&amp;&amp;a+c&gt;b&amp;&amp;b+c&gt;a) &#123;</span><br><span class="line"><span class="keyword">double</span> p=(a+b+c)/<span class="number">2.0</span>;</span><br><span class="line">area=Math.sqrt(p*(p-a)*(p-b)*(p-c));</span><br><span class="line"><span class="keyword">return</span> String.valueOf(area);&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;<span class="keyword">return</span> <span class="string">"不是三角形"</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Action</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line">    PoliceListen listen;</span><br><span class="line">JTextField text1,text2,text3;</span><br><span class="line">   JTextArea area;      <span class="comment">//提供视图</span></span><br><span class="line">   JButton button=<span class="keyword">new</span> JButton();</span><br><span class="line">   <span class="keyword">double</span> a,b,c;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Action</span><span class="params">()</span> </span>&#123;</span><br><span class="line">init();</span><br><span class="line">setVisible(<span class="keyword">true</span>);</span><br><span class="line">setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">listen=<span class="keyword">new</span> PoliceListen();</span><br><span class="line">text1=<span class="keyword">new</span> JTextField(<span class="number">5</span>);</span><br><span class="line">text2=<span class="keyword">new</span> JTextField(<span class="number">5</span>);</span><br><span class="line">text3=<span class="keyword">new</span> JTextField(<span class="number">5</span>);</span><br><span class="line">area=<span class="keyword">new</span> JTextArea();</span><br><span class="line">button=<span class="keyword">new</span> JButton(<span class="string">"计算面积"</span>);</span><br><span class="line">JPanel panel=<span class="keyword">new</span> JPanel();</span><br><span class="line">panel.add(<span class="keyword">new</span> JLabel(<span class="string">"边A"</span>));</span><br><span class="line">panel.add(text1);</span><br><span class="line">panel.add(<span class="keyword">new</span> JLabel(<span class="string">"边B"</span>));</span><br><span class="line">panel.add(text2);</span><br><span class="line">panel.add(<span class="keyword">new</span> JLabel(<span class="string">"边C"</span>));</span><br><span class="line">panel.add(text3);</span><br><span class="line">panel.add(button);</span><br><span class="line">button.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">add(panel,BorderLayout.NORTH);</span><br><span class="line">add(<span class="keyword">new</span> JScrollPane(area),BorderLayout.CENTER);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;a=Double.parseDouble(text1.getText().trim());    <span class="comment">//......</span></span><br><span class="line">b=Double.parseDouble(text2.getText().trim());</span><br><span class="line">c=Double.parseDouble(text3.getText().trim());</span><br><span class="line">listen.set1(a);</span><br><span class="line">listen.set2(b);</span><br><span class="line">listen.set3(c);</span><br><span class="line">String max=listen.getarea();</span><br><span class="line">area.append(<span class="string">"三角形"</span>+a+<span class="string">","</span>+b+<span class="string">","</span>+c+<span class="string">"的面积："</span>);</span><br><span class="line">area.append(max+<span class="string">"\n"</span>);&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exception ex) &#123;</span><br><span class="line">area.append(<span class="string">"\n"</span>+ex+<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Action win=<span class="keyword">new</span> Action();</span><br><span class="line"> win.setBounds(<span class="number">10</span>, <span class="number">10</span>, <span class="number">460</span>, <span class="number">360</span>);</span><br><span class="line"> win.setTitle(<span class="string">"三角形"</span>);</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="6-对话框（JDialog）"><a href="#6-对话框（JDialog）" class="headerlink" title="6.对话框（JDialog）"></a>6.对话框（JDialog）</h1><p>有点多。。。假期再写</p><p>有模式：弹出对话框后堵塞其他线程的执行</p><p>无模式：不堵塞</p><p>1.消息对话框</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Action</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line">  JTextField text;</span><br><span class="line">  JTextArea area;</span><br><span class="line">  String regex=<span class="string">"[a-zA-Z]+"</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Action</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  text=<span class="keyword">new</span> JTextField(<span class="number">22</span>);</span><br><span class="line">  text.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">  area=<span class="keyword">new</span> JTextArea();</span><br><span class="line">  add(text,BorderLayout.NORTH);</span><br><span class="line">  add(area,BorderLayout.CENTER);</span><br><span class="line">  setVisible(<span class="keyword">true</span>);</span><br><span class="line">  setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(e.getSource()==text) &#123;</span><br><span class="line">String str=text.getText();</span><br><span class="line"><span class="keyword">if</span>(str.matches(regex)) &#123;</span><br><span class="line">area.append(str+<span class="string">","</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"输入错误"</span>,<span class="string">"警告"</span>,JOptionPane.WARNING_MESSAGE);</span><br><span class="line">text.setText(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><p>2.输入对话框</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Action</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line">  JButton button;</span><br><span class="line">  JTextArea area;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Action</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  button=<span class="keyword">new</span> JButton(<span class="string">"弹出"</span>);</span><br><span class="line">  area=<span class="keyword">new</span> JTextArea();</span><br><span class="line">  add(button,BorderLayout.NORTH);</span><br><span class="line">  add(<span class="keyword">new</span> JScrollPane(area),BorderLayout.CENTER);</span><br><span class="line">  button.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">  setVisible(<span class="keyword">true</span>);</span><br><span class="line">  setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">String str=JOptionPane.showInputDialog(<span class="keyword">this</span>, <span class="string">"输入数字，用空格分隔"</span>,<span class="string">"输入对话框"</span>,JOptionPane.PLAIN_MESSAGE); <span class="comment">//showInputDialog</span></span><br><span class="line"><span class="keyword">if</span>(str!=<span class="keyword">null</span>) &#123;</span><br><span class="line">Scanner scanner=<span class="keyword">new</span> Scanner(str);</span><br><span class="line"><span class="keyword">double</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(scanner.hasNext()) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">double</span> number=scanner.nextDouble();</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">0</span>)</span><br><span class="line">area.append(<span class="string">" "</span>+number);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">area.append(<span class="string">"+"</span>+number);</span><br><span class="line">sum=sum+number;</span><br><span class="line">k++;&#125;</span><br><span class="line"><span class="keyword">catch</span>(InputMismatchException exp) &#123;</span><br><span class="line">String t=scanner.next();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">area.append(<span class="string">"="</span>+sum+<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><p>3.确认对话框</p><p>JOptionPane.YES_ON_OPTION</p><p>JOptionPane.YES_ON_CANCEL_OPTION</p><p>JOptionPane.OK_CANCEL_OPTION</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Action</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">WindowListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Action</span><span class="params">()</span> </span>&#123;</span><br><span class="line">setVisible(<span class="keyword">true</span>);</span><br><span class="line"> setDefaultCloseOperation(JFrame.DEFAULT_CURSOR);</span><br><span class="line"> <span class="keyword">this</span>.addWindowListener(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowActivated</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosed</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=JOptionPane.showConfirmDialog(<span class="keyword">null</span>, <span class="string">"你确定？？"</span>,<span class="string">"关闭"</span>,JOptionPane.YES_NO_OPTION);</span><br><span class="line"><span class="keyword">if</span>(a==JOptionPane.YES_OPTION)</span><br><span class="line">System.exit(-<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowDeactivated</span><span class="params">(WindowEvent e)</span> </span>&#123;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowDeiconified</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowIconified</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowOpened</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.颜色对话框</p><p>5.文件对话框</p><p>6.自定义对话框</p><h1 id="7-发布GUI程序"><a href="#7-发布GUI程序" class="headerlink" title="7.发布GUI程序"></a>7.发布GUI程序</h1><p>可以直接用eclipse打包jar.然后用exe4j转换exe。wo它🦄</p><p>步骤：</p><p>1.先找到写的java后缀源文件  d</p><p>2.将源文件编码为后缀为class的源文件(cmd中用javac A.java指令，A为类名)</p><p>3.编写后缀为mf的清单文件，格式如下：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/qing.png"><p>4.使用cmd生成jar文件</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/dai1.png"><p>c表示生成新的jar文件，f表示生成jar的名称(Tom.jar)，m表示文件清单的名字(Mymoon.mf)，后跟源文件，*表示该目录下的所有文件。</p><p>另：java -jar A.jar可以解压,也可以直接解压软件解压。</p><p>public class Test {</p><pre><code>// 默认60秒后关机public void shutdown() {    // 关机    try {        Runtime.getRuntime().exec(&quot;shutdown /s /t  60&quot;);       } catch (IOException e) {        // TODO Auto-generated catch block        e.printStackTrace();    }}// 根据输入的时间秒数关机public void shutdown(String s) {    try {        // 关机        Runtime.getRuntime().exec(&quot;shutdown /s /t &quot; + s);  //关机时间可以自动设置    } catch (IOException e) {        e.printStackTrace();    }}</code></pre><p>————————————————<br>版权声明：本文为CSDN博主「sarida」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/sarida/java/article/details/81195378" target="_blank" rel="noopener">https://blog.csdn.net/sarida/java/article/details/81195378</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-窗口-JFrame&quot;&gt;&lt;a href=&quot;#1-窗口-JFrame&quot; class=&quot;headerlink&quot; title=&quot;1.窗口(JFrame)&quot;&gt;&lt;/a&gt;1.窗口(JFrame)&lt;/h1&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="JAVA" scheme="http://2544165563.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>requests爬取数据</title>
    <link href="http://2544165563.github.io/2020/08/27/Python%E7%88%AC%E8%99%AB/"/>
    <id>http://2544165563.github.io/2020/08/27/Python%E7%88%AC%E8%99%AB/</id>
    <published>2020-08-27T03:00:50.637Z</published>
    <updated>2020-09-23T15:14:33.846Z</updated>
    
    <content type="html"><![CDATA[<h1 id="requests的使用"><a href="#requests的使用" class="headerlink" title="requests的使用"></a>requests的使用</h1><h2 id="先来一个例子看一下使用过程"><a href="#先来一个例子看一下使用过程" class="headerlink" title="先来一个例子看一下使用过程"></a>先来一个例子看一下使用过程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.status_code</span><br><span class="line"><span class="number">200</span>   <span class="comment">#状态码，200表明成功</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.encoding = <span class="string">'utf-8'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.text</span><br><span class="line"><span class="string">'&lt;!DOCTYPE html&gt;\r\n&lt;!--STATUS OK--&gt;&lt;html&gt; &lt;head&gt;&lt;meta http-equiv=content-type content=text/html;charset=utf-8&gt;&lt;meta http-equiv=X-UA-Compatible content=IE=Edge&gt;&lt;meta content=always name=referrer&gt;&lt;link rel=stylesheet type=text/css href=http://s1.bdstatic.com/r/www/cache/bdorz/baidu.min.css&gt;&lt;title&gt;百度一下，你就知道&lt;/title&gt;&lt;/head&gt; &lt;body link=#0000cc&gt; &lt;div id=wrapper&gt; &lt;div id=head&gt;</span></span><br></pre></td></tr></table></figure><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>主要方法，也就用到get。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">requests.request()  <span class="comment">#构造一个请求，支撑一下各种方法</span></span><br><span class="line"></span><br><span class="line">requests.get()    <span class="comment">#获取HTML网页</span></span><br><span class="line"></span><br><span class="line">requests.head()   <span class="comment">#获取HTML网页头信息</span></span><br><span class="line"></span><br><span class="line">requests.post()   <span class="comment">#不改变原数据添加新数据</span></span><br><span class="line"></span><br><span class="line">requests.put()    <span class="comment">#覆盖原数据添加数据</span></span><br><span class="line"></span><br><span class="line">requests.patch()    <span class="comment">#局部修改请求</span></span><br><span class="line"></span><br><span class="line">requests.delete()   <span class="comment">#删除请求</span></span><br></pre></td></tr></table></figure><hr><p>可用request()来执行其他方法，也可以直接用其他requests库的方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requests.request(method,url,**kwargs)</span><br></pre></td></tr></table></figure><p>第一个参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">r &#x3D; requests.request(&#39;GET&#39;,url,**kwargs)</span><br><span class="line"></span><br><span class="line">#参数</span><br><span class="line">&#39;GET&#39;  &#39;HEAD&#39;  &#39;POST&#39;  &#39;PUT&#39;  &#39;PATCH&#39;  &#39;PUT&#39;  &#39;POST&#39;  &#39;delete&#39;  &#39;OPTIONS&#39;</span><br></pre></td></tr></table></figure><p>第二个参数就是网址，直接看第三个参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">r &#x3D; requests.request(method,url,params&#x3D;kv)</span><br><span class="line"></span><br><span class="line">#参数(其余主要方法适用)</span><br><span class="line">params:字典或字节序列，作为参数增加到返回的url中</span><br><span class="line">    </span><br><span class="line">data:字典、字节序列或文件对象，提交数据</span><br><span class="line">    </span><br><span class="line">json:JSON格式的数据，提交使用</span><br><span class="line">    </span><br><span class="line">headers:字典，HTTP定制头</span><br><span class="line">    </span><br><span class="line">cookies:字典或CookieJar,Request中的cookie</span><br><span class="line">    </span><br><span class="line">auth:元组</span><br><span class="line">    </span><br><span class="line">files:字典类型，传输文件</span><br><span class="line"></span><br><span class="line">timeout:设定超时时间，秒为单位</span><br><span class="line"></span><br><span class="line">proxies:字典类型，设定访问代理服务器，可以增加登录认证</span><br><span class="line"></span><br><span class="line">allow_redirects:重定向,默认True</span><br><span class="line"></span><br><span class="line">stream:获取内容立即下载，默认True</span><br><span class="line"></span><br><span class="line">verify:认证SSL证书开关，默认True</span><br><span class="line"></span><br><span class="line">cert:本地SSL证书路径</span><br></pre></td></tr></table></figure><hr><p>get()方法后，处理数据的一些方法，不加括号哟~~</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">r = requests.get(url,params=<span class="literal">None</span>,**kwargs)   </span><br><span class="line"><span class="comment">#get构造向服务器请求资源的Request对象</span></span><br><span class="line"><span class="comment">#requests返回包含服务器资源的Response对象</span></span><br><span class="line"></span><br><span class="line">r.status_code   <span class="comment">#Http请求的返回状态，200表示连接成功，404表示失败</span></span><br><span class="line"></span><br><span class="line">r.text    <span class="comment">#响应内容的字符串形式，url对应的页面内容</span></span><br><span class="line"></span><br><span class="line">r.encoding   <span class="comment">#在HTTP header中猜测的响应内容编码方式</span></span><br><span class="line"></span><br><span class="line">r.apparent_encoding     <span class="comment">#从内容分析出编码方式</span></span><br><span class="line"></span><br><span class="line">r.content    <span class="comment">#响应内容的二进制形式</span></span><br><span class="line"></span><br><span class="line">r.raise_for_ataus()  <span class="comment">#当状态不是200时，引起HTTPError异常</span></span><br><span class="line"></span><br><span class="line">r.header   <span class="comment">#</span></span><br></pre></td></tr></table></figure><hr><p>post()与put()方法的使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">r = post(url,data=<span class="literal">None</span>,json=<span class="literal">None</span>,**kwargs)</span><br><span class="line">r = put(url,data=<span class="literal">None</span>,**kwargs)</span><br><span class="line"></span><br><span class="line">payload = &#123;<span class="string">'key1'</span>:<span class="string">'value1'</span>,<span class="string">'key2'</span>:<span class="string">'value2'</span>&#125;</span><br><span class="line"></span><br><span class="line">r = requests.post(<span class="string">'http://httpbin.org/post'</span>,data = payload)</span><br><span class="line"></span><br><span class="line">r.text</span><br></pre></td></tr></table></figure><h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">requests.ConnectionError <span class="comment">#网络连接错误异常</span></span><br><span class="line"></span><br><span class="line">requests.HTTPError   <span class="comment">#HTTP错误异常</span></span><br><span class="line"></span><br><span class="line">requests.URLRequired  <span class="comment">#URL缺失异常</span></span><br><span class="line"></span><br><span class="line">requests.TooManyRedirects  <span class="comment">#超过最大重定向次数，产生重定向异常</span></span><br><span class="line"></span><br><span class="line">requests.ConnectTimeout  <span class="comment">#连接远程服务器超时异常</span></span><br><span class="line"></span><br><span class="line">requests.Timeout  <span class="comment">#请求URL超时，产生超时异常</span></span><br></pre></td></tr></table></figure><h2 id="代码框架"><a href="#代码框架" class="headerlink" title="代码框架"></a>代码框架</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"产生异常"</span></span><br></pre></td></tr></table></figure><h1 id="Robots协议"><a href="#Robots协议" class="headerlink" title="Robots协议"></a>Robots协议</h1><p>User-agent: *</p><p>Disallow: /</p><p>对于所有用户，不允许爬取任何数据</p><h1 id="爬虫被拒绝"><a href="#爬虫被拒绝" class="headerlink" title="爬虫被拒绝"></a>爬虫被拒绝</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">"https://www.amazon.cn/"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.status_code</span><br><span class="line"><span class="number">503</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.encoding=<span class="string">'utf-8'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.text</span><br><span class="line">抱歉，我们只是想确认一下当前访问者并非自动程序。为了达到最佳效果，请确保您浏览器上的 Cookie 已启用。</span><br></pre></td></tr></table></figure><p>不让用爬虫爬取，就只能伪装了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; kv = &#123;<span class="string">'user-agent'</span>:<span class="string">'Mozilla/5.0'</span>&#125;</span><br><span class="line">&gt;&gt; r = requests.get(<span class="string">"http://www.baidu.com"</span>,headers = kv)</span><br><span class="line">&gt;&gt; r.status_code</span><br><span class="line"><span class="number">200</span></span><br></pre></td></tr></table></figure><p>这样就可以让网站认为我们不是爬虫强盗，而是一个浏览器良民</p><h1 id="爬取搜索结果"><a href="#爬取搜索结果" class="headerlink" title="爬取搜索结果"></a>爬取搜索结果</h1><p>先附上关键词接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">百度：http:&#x2F;&#x2F;www.baidu.com&#x2F;s?wd&#x3D;keyword</span><br><span class="line">360：http:&#x2F;&#x2F;www.so.com&#x2F;s?q&#x3D;keyword</span><br></pre></td></tr></table></figure><p>接下来是代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>kv = &#123;<span class="string">'wd'</span>:<span class="string">'Python'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">"http://www.baidu.com/s"</span>,params = kv)</span><br></pre></td></tr></table></figure><h1 id="图片爬取"><a href="#图片爬取" class="headerlink" title="图片爬取"></a>图片爬取</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://img0.dili360.com/pic/2020/07/13/5f0bc0add82ed2q84362951.jpg"</span></span><br><span class="line">path = <span class="string">"D://test.jpg"</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    <span class="keyword">with</span> open(path,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(r.content)   <span class="comment">#将r转换为二进制形式</span></span><br><span class="line">        f.close()</span><br><span class="line">        print(<span class="string">"文件保存成功"</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure><h1 id="例-淘宝爬取"><a href="#例-淘宝爬取" class="headerlink" title="例 淘宝爬取"></a>例 淘宝爬取</h1><p>可能教程太老了，淘宝应该让菜鸡不能轻易爬到物品数据了，下面代码只能看看其中的一些问题了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url, timeout=<span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">     </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parsePage</span><span class="params">(ilt, html)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        plt = re.findall(<span class="string">r'\"view_price\"\:\"[\d\.]*\"'</span>,html)</span><br><span class="line">        tlt = re.findall(<span class="string">r'\"raw_title\"\:\".*?\"'</span>,html)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(plt)):</span><br><span class="line">            price = eval(plt[i].split(<span class="string">':'</span>)[<span class="number">1</span>])</span><br><span class="line">            title = eval(tlt[i].split(<span class="string">':'</span>)[<span class="number">1</span>])</span><br><span class="line">            ilt.append([price , title])</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">""</span>)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printGoodsList</span><span class="params">(ilt)</span>:</span></span><br><span class="line">    tplt = <span class="string">"&#123;:4&#125;\t&#123;:8&#125;\t&#123;:16&#125;"</span></span><br><span class="line">    print(tplt.format(<span class="string">"序号"</span>, <span class="string">"价格"</span>, <span class="string">"商品名称"</span>))</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> g <span class="keyword">in</span> ilt:</span><br><span class="line">        count = count + <span class="number">1</span></span><br><span class="line">        print(tplt.format(count, g[<span class="number">0</span>], g[<span class="number">1</span>]))</span><br><span class="line">         </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    goods = <span class="string">'书包'</span></span><br><span class="line">    u=<span class="string">'https://s.taobao.com/search?q='</span></span><br><span class="line">    depth = <span class="number">3</span></span><br><span class="line">    start_url = <span class="string">'https://s.taobao.com/search?q='</span> + goods</span><br><span class="line">    infoList = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(depth):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment">#url = start_url + '&amp;s=' + str(44*i)</span></span><br><span class="line">            html = getHTMLText(u)</span><br><span class="line">            print(html)</span><br><span class="line">            parsePage(infoList, html)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    printGoodsList(infoList)</span><br><span class="line">     </span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;requests的使用&quot;&gt;&lt;a href=&quot;#requests的使用&quot; class=&quot;headerlink&quot; title=&quot;requests的使用&quot;&gt;&lt;/a&gt;requests的使用&lt;/h1&gt;&lt;h2 id=&quot;先来一个例子看一下使用过程&quot;&gt;&lt;a href=&quot;#先来一个
      
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="http://2544165563.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python基础中的基础...</title>
    <link href="http://2544165563.github.io/2020/08/27/python/"/>
    <id>http://2544165563.github.io/2020/08/27/python/</id>
    <published>2020-08-27T03:00:50.634Z</published>
    <updated>2020-10-06T15:29:16.231Z</updated>
    
    <content type="html"><![CDATA[<h1 id="例-温度转换"><a href="#例-温度转换" class="headerlink" title="例 温度转换"></a>例 温度转换</h1><p>字符串”123456”由第一个字符开始记序号:</p><p>​     0,1,2,3,4,5</p><p>​     -6,-5,-4,-3,-2,-1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">TempStr = input(<span class="string">"请输入带有符号的温度值:"</span>)</span><br><span class="line"><span class="keyword">if</span> TempStr[<span class="number">-1</span>] <span class="keyword">in</span> [<span class="string">'F'</span>,<span class="string">'f'</span>]:             <span class="comment"># -1代表字符串最后一位</span></span><br><span class="line">    C =(eval(TempStr[<span class="number">0</span>:<span class="number">-1</span>]) - <span class="number">32</span>)/<span class="number">1.8</span>    <span class="comment">#eval去除字符串最外层</span></span><br><span class="line">    print(<span class="string">"转换后的温度是&#123;:.2f&#125;C"</span>.format(C))</span><br><span class="line"><span class="keyword">elif</span> TempStr[<span class="number">-1</span>] <span class="keyword">in</span> [<span class="string">'C'</span>,<span class="string">'c'</span>]:</span><br><span class="line">    F=<span class="number">1.8</span>*eval(TempStr[<span class="number">0</span>:<span class="number">-1</span>]) + <span class="number">32</span></span><br><span class="line">    print(<span class="string">"转换后的温度是&#123;:.2f&#125;F"</span>.format(F))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"输入格式错误"</span>)</span><br></pre></td></tr></table></figure><h1 id="数学计算"><a href="#数学计算" class="headerlink" title="数学计算"></a>数学计算</h1><h2 id="浮点数的运算"><a href="#浮点数的运算" class="headerlink" title="浮点数的运算"></a>浮点数的运算</h2><p>在计算的时候由于二进制的转换导致存在不确定尾数,可用round求值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">round(<span class="number">0.1</span>+<span class="number">0.2</span>,<span class="number">1</span>)   <span class="comment">#对计算保留1位小数</span></span><br></pre></td></tr></table></figure><p>浮点数的表示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">32e-2</span>  <span class="comment">#相当于0.32</span></span><br></pre></td></tr></table></figure><h2 id="其他一些运算函数"><a href="#其他一些运算函数" class="headerlink" title="其他一些运算函数"></a>其他一些运算函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">abs(x)  <span class="comment">#取绝对值</span></span><br><span class="line"></span><br><span class="line">divmod(<span class="number">10</span>，<span class="number">3</span>)   <span class="comment">#商余，结果为(3,1)</span></span><br><span class="line"></span><br><span class="line">pow(x,y[,z])   <span class="comment">#x**y%z,其中z可以省略</span></span><br><span class="line"></span><br><span class="line">round(x[,d])   <span class="comment">#d可省略，默认值为0</span></span><br><span class="line"></span><br><span class="line">max(x1,x2,..,xn)</span><br><span class="line"></span><br><span class="line">min(x1,x2,..,xn)</span><br><span class="line"></span><br><span class="line">int(x)    <span class="comment">#转换为整数</span></span><br><span class="line"></span><br><span class="line">float(x)  <span class="comment">#转换为浮点数</span></span><br><span class="line"></span><br><span class="line">complex(x) <span class="comment">#转换为复数，xomplex(4)==4+0j</span></span><br><span class="line"></span><br><span class="line">a**b   <span class="comment"># a的b次方</span></span><br><span class="line"></span><br><span class="line">a/b    <span class="comment"># a除以b的浮点数</span></span><br><span class="line"></span><br><span class="line">a//b   <span class="comment"># a除以b的整数</span></span><br></pre></td></tr></table></figure><h2 id="例-天天向上"><a href="#例-天天向上" class="headerlink" title="例 天天向上"></a>例 天天向上</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dayUP</span><span class="params">(df)</span>:</span></span><br><span class="line">    dayup=<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">365</span>):</span><br><span class="line">        <span class="keyword">if</span> i%<span class="number">7</span> <span class="keyword">in</span> [<span class="number">6</span>,<span class="number">0</span>]:</span><br><span class="line">            dayup = dayup*(<span class="number">1</span> - <span class="number">0.01</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            dayup = dayup*(<span class="number">1</span> + df)</span><br><span class="line">    <span class="keyword">return</span> dayup</span><br><span class="line">dayfactor = <span class="number">0.01</span></span><br><span class="line"><span class="keyword">while</span> dayUP(dayfactor) &lt; <span class="number">37.78</span>:</span><br><span class="line">    dayfactor +=<span class="number">0.001</span></span><br><span class="line">print(<span class="string">"工作日的努利参数是&#123;:.3f&#125;"</span>.format(dayfactor))</span><br></pre></td></tr></table></figure><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><h2 id="字符串的定义"><a href="#字符串的定义" class="headerlink" title="字符串的定义"></a>字符串的定义</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">str = <span class="string">'123'</span></span><br><span class="line"></span><br><span class="line">str = <span class="string">"123"</span></span><br><span class="line"></span><br><span class="line">str = <span class="string">"""123</span></span><br><span class="line"><span class="string">                 123"""</span></span><br></pre></td></tr></table></figure><h2 id="字符串的使用"><a href="#字符串的使用" class="headerlink" title="字符串的使用"></a>字符串的使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#索引</span></span><br><span class="line">&lt;字符串&gt;[M]   <span class="comment">#第M+1个字符</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#切片</span></span><br><span class="line">&lt;字符串&gt;[M:N:K] </span><br><span class="line"><span class="comment">#M:开头  N:结尾  K:步长</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#逆序</span></span><br><span class="line">&lt;字符串&gt;[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#转义符\</span></span><br><span class="line"><span class="string">"使用双引号\"了。"</span>  <span class="comment">#使用双引号"了。</span></span><br><span class="line"><span class="comment">#\b回退  \n换行  \r回车(回到本行的行首)</span></span><br></pre></td></tr></table></figure><h2 id="字符串操作符"><a href="#字符串操作符" class="headerlink" title="字符串操作符"></a>字符串操作符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x + y     <span class="comment">#连接字符串</span></span><br><span class="line"></span><br><span class="line">n*x       <span class="comment">#复制字符串n次</span></span><br><span class="line"></span><br><span class="line">x <span class="keyword">in</span> s    <span class="comment">#判断x是否为s的子串，返回False与True</span></span><br></pre></td></tr></table></figure><h2 id="字符串处理函数"><a href="#字符串处理函数" class="headerlink" title="字符串处理函数"></a>字符串处理函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">len(x)   <span class="comment">#返回字符串长度</span></span><br><span class="line"></span><br><span class="line">str(x)   <span class="comment">#将x转换为字符串</span></span><br><span class="line"></span><br><span class="line">hex(x) oct(x)  <span class="comment">#转换为十六进制或八进制的字符串</span></span><br><span class="line"></span><br><span class="line">chr(u)   <span class="comment">#将Unicode编码转换为对应字符</span></span><br><span class="line"></span><br><span class="line">ord(x)   <span class="comment">#将字符转换为Unicode编码</span></span><br></pre></td></tr></table></figure><h2 id="字符串处理方法"><a href="#字符串处理方法" class="headerlink" title="字符串处理方法"></a>字符串处理方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">str.lower()    <span class="comment">#全小写</span></span><br><span class="line"></span><br><span class="line">str.upper()    <span class="comment">#全大写</span></span><br><span class="line"></span><br><span class="line">str.split(s)   <span class="comment">#拆分，"A,B,C".split(",")==['A','B','C']</span></span><br><span class="line"></span><br><span class="line">str.count(sub) <span class="comment">#返回子串sub在str中出现的次数</span></span><br><span class="line"></span><br><span class="line">str.replace(old,new)  <span class="comment">#将old替换成new</span></span><br><span class="line"></span><br><span class="line">str.center(width[,fillchar]) <span class="comment">#"liu".center(9,"=") == '===liu==='</span></span><br><span class="line"></span><br><span class="line">str.strip(chars) <span class="comment">#"= python=".strip(" =np") == "ytho"</span></span><br><span class="line"></span><br><span class="line">str.join(iter)  <span class="comment">#",".join("123") == "1,2,3"</span></span><br></pre></td></tr></table></figure><h2 id="字符串类型的格式化"><a href="#字符串类型的格式化" class="headerlink" title="字符串类型的格式化"></a>字符串类型的格式化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 槽</span></span><br><span class="line"><span class="string">"&#123;&#125;是一个&#123;&#125;"</span>.format(<span class="string">"chenlvtang"</span>,<span class="string">"小天才"</span>)</span><br><span class="line">  ==</span><br><span class="line"><span class="string">"&#123;1&#125;是一个&#123;0&#125;"</span>.format(<span class="string">"小天才"</span>,<span class="string">"chenlvtang"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#槽内部对格式化的配置方式</span></span><br><span class="line">&#123;&lt;参数序号&gt;:&lt;格式控制标记&gt;&#125;</span><br><span class="line">: &lt;填充&gt; &lt;对齐&gt; &lt;宽度&gt; &lt;,&gt; &lt;.精度&gt; &lt;类型&gt;</span><br><span class="line">    对齐<span class="comment">#&lt;左对齐，&gt;右对齐，^居中</span></span><br><span class="line">    类型<span class="comment">#b二进制,c字符,d十进制,o八进制,x十六进制,X大写十六进制,小e科学计数法,大E科学计数法,f,%以百分式</span></span><br><span class="line"> <span class="string">"0:=^9"</span>.format(<span class="string">"liu"</span>)==<span class="string">'===liu==='</span></span><br><span class="line"> <span class="string">"0:,.2f"</span>.format(<span class="string">"12345.6789"</span>)==<span class="string">'12,345.68'</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># %占位符</span></span><br><span class="line">print(<span class="string">'我的名字叫%s'</span> %<span class="string">'小飞侠'</span>)</span><br><span class="line"></span><br><span class="line">%s</span><br><span class="line"></span><br><span class="line">%d   十进制</span><br><span class="line"></span><br><span class="line">%o   八进制</span><br><span class="line"></span><br><span class="line">%X   十六进制</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># f'string'</span></span><br><span class="line">meng=<span class="string">'梦'</span></span><br><span class="line">print(<span class="string">f'我的<span class="subst">&#123;meng&#125;</span>'</span>)</span><br></pre></td></tr></table></figure><h1 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cal_time</span><span class="params">(fn)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner1</span><span class="params">()</span>:</span></span><br><span class="line">        start1 = time.time()</span><br><span class="line">        fn()</span><br><span class="line">        end1 = time.time()</span><br><span class="line">        print(<span class="string">'代码耗时'</span>,end1 - start1)</span><br><span class="line">    <span class="keyword">return</span> inner1</span><br><span class="line"></span><br><span class="line"><span class="meta">@cal_time   # 1.调用cal_time 2.将demo传给fn 3.将inner1返回给demo</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'Hellow'</span>)</span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    print(<span class="string">'ByeBye'</span>)</span><br><span class="line"></span><br><span class="line">demo()   <span class="comment"># 此时的demo其实是inner</span></span><br></pre></td></tr></table></figure><p>较高级点的用法，在开放封闭原则下修改代码。</p><p>在不修改play_game的情况下增加对时间的判断。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">can_game</span><span class="params">(fn)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner1</span><span class="params">(name,*args,**kwargs)</span>:</span></span><br><span class="line">        clock1 = kwargs.get(<span class="string">'clock1'</span>,<span class="number">23</span>)</span><br><span class="line">        <span class="keyword">if</span> clock1 &gt; <span class="number">22</span> <span class="keyword">or</span> clock1 &lt; <span class="number">6</span>:</span><br><span class="line">            print(<span class="string">'不能打游戏'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fn(name)</span><br><span class="line">    <span class="keyword">return</span> inner1</span><br><span class="line"></span><br><span class="line"><span class="meta">@can_game</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">play_game</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">'&#123;&#125;在玩游戏'</span>.format(name))</span><br><span class="line"></span><br><span class="line">play_game(<span class="string">'李四'</span>,clock1 = <span class="number">22</span>)</span><br><span class="line">play_game(<span class="string">'张三'</span>)</span><br></pre></td></tr></table></figure><h1 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h1><h2 id="if、else、elif"><a href="#if、else、elif" class="headerlink" title="if、else、elif"></a>if、else、elif</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#and与   or或   not非</span></span><br><span class="line">guess = eval(input())</span><br><span class="line"><span class="keyword">if</span> guess == <span class="number">520</span> <span class="keyword">or</span> guess ==<span class="number">521</span>:</span><br><span class="line">    print(<span class="string">"猜对了"</span>)</span><br><span class="line"><span class="keyword">elif</span> guess == <span class="number">500</span>:</span><br><span class="line">    print(<span class="string">"很接近了"</span>)</span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line">    print(<span class="string">"猜错了"</span>)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="comment">#紧凑形式  &lt;表达式1&gt; if &lt;条件&gt; else &lt;表达式2&gt;</span></span><br><span class="line">print(<span class="string">"猜对了"</span>) <span class="keyword">if</span> guess ==<span class="number">520</span> <span class="keyword">else</span> print(<span class="string">"猜错了"</span>)</span><br><span class="line">print(<span class="string">"猜&#123;&#125;了"</span>.format(<span class="string">"对"</span> <span class="keyword">if</span> guess == <span class="number">520</span> <span class="keyword">else</span> <span class="string">"错"</span>))</span><br></pre></td></tr></table></figure><h2 id="程序异常处理"><a href="#程序异常处理" class="headerlink" title="程序异常处理"></a>程序异常处理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    abc = eval(input())</span><br><span class="line">    print(abc)</span><br><span class="line"><span class="keyword">except</span>:           <span class="comment">#except &lt;异常类型&gt;   来针对处理某类异常</span></span><br><span class="line">    print(<span class="string">"程序异常"</span>)</span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    &lt;语句块<span class="number">1</span>&gt;</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    &lt;语句块<span class="number">2</span>&gt;</span><br><span class="line"><span class="keyword">else</span>:             <span class="comment">#语句1运行的化才运行</span></span><br><span class="line">    &lt;语句块<span class="number">3</span>&gt;</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    &lt;语句块<span class="number">4</span>&gt;      <span class="comment">#一定运行</span></span><br></pre></td></tr></table></figure><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#数字</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    print(i)</span><br><span class="line"><span class="comment">#0 \n 1 \n 2 \n 3 \n</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">4</span>):</span><br><span class="line">    print(i)</span><br><span class="line"><span class="comment">#1 \n 2 \n 3 \n</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> rang(<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>):</span><br><span class="line">    print(i)</span><br><span class="line"><span class="comment">#1 \n 3 \n 5 \n</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#字符串</span></span><br><span class="line"><span class="keyword">for</span> str <span class="keyword">in</span> <span class="string">"Hellow"</span>:</span><br><span class="line">    print(str,end=<span class="string">","</span>)</span><br><span class="line"><span class="comment">#H,e,l,l,o,w,</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#列表</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> enumerate([<span class="number">123</span>,<span class="string">"python"</span>,<span class="number">456</span>]):</span><br><span class="line">    print(item,end=<span class="string">","</span>)</span><br><span class="line"><span class="comment">#123,python,456</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#文件</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fi:</span><br><span class="line">    print(line)</span><br><span class="line"><span class="comment">#遍历每一行</span></span><br></pre></td></tr></table></figure><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> a&gt;<span class="number">0</span>:</span><br><span class="line">    a = a<span class="number">-1</span></span><br><span class="line">    print(a)</span><br><span class="line">    </span><br><span class="line">  </span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> gameOver(a,b):</span><br><span class="line">    <span class="keyword">if</span>(x&gt;a):</span><br><span class="line">        a++</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        b++</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gameOver</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a==<span class="number">15</span> <span class="keyword">or</span> b==<span class="number">15</span></span><br></pre></td></tr></table></figure><h2 id="循环搭配else"><a href="#循环搭配else" class="headerlink" title="循环搭配else"></a>循环搭配else</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">"python"</span>:</span><br><span class="line">    <span class="keyword">if</span> c == <span class="string">"t"</span>:</span><br><span class="line">        <span class="keyword">continue</span>      <span class="comment">#break时，else不运行</span></span><br><span class="line">    print(c,end=<span class="string">""</span>)</span><br><span class="line"><span class="keyword">else</span>:                 <span class="comment">#只有当循环中执行break时，该语句才不执行</span></span><br><span class="line">    print(<span class="string">"正常退出"</span>)</span><br></pre></td></tr></table></figure><h2 id="例-圆周率计算"><a href="#例-圆周率计算" class="headerlink" title="例 圆周率计算"></a>例 圆周率计算</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pi = <span class="number">0</span></span><br><span class="line">N = <span class="number">100</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(N) :</span><br><span class="line">    pi += <span class="number">1</span>/pow(<span class="number">16</span>,k)*( \</span><br><span class="line">        <span class="number">4</span>/(<span class="number">8</span>*k+<span class="number">1</span>)<span class="number">-2</span>/(<span class="number">8</span>*k+<span class="number">4</span>) - \</span><br><span class="line">        <span class="number">1</span>/(<span class="number">8</span>*k+<span class="number">5</span>) - <span class="number">1</span>/(<span class="number">8</span>*k+<span class="number">6</span>))</span><br><span class="line">print(<span class="string">"圆周率值是:&#123;&#125;"</span>.format(pi))</span><br></pre></td></tr></table></figure><h1 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact</span><span class="params">(n,m=<span class="number">1</span>)</span>:</span> <span class="comment">#n为非可选参数，m为可选参数，调用时m可有可无</span></span><br><span class="line">    s = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">        s *= i</span><br><span class="line">    <span class="keyword">return</span> s//m</span><br><span class="line"><span class="comment">#fact(10) == 10!//1  fact(10,2) == 10!//2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact</span><span class="params">(n,m=<span class="number">1</span>)</span>:</span></span><br><span class="line">    s = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">        s *= i</span><br><span class="line">    <span class="keyword">return</span> s//m,n,m</span><br><span class="line"><span class="comment">#赋值a,b,c = fact(10,5)  == (725760,10,5)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact</span><span class="params">(n, *args, **kwargs)</span>:</span>  <span class="comment"># b为可变参数，填几个都行</span></span><br><span class="line">    print(n,args,kwargs)</span><br><span class="line"><span class="comment">#fact(1,2,3,a=4,b=5) == 1 (2,3) &#123;'a':4,'b':5&#125;</span></span><br></pre></td></tr></table></figure><h1 id="lambda紧凑函数"><a href="#lambda紧凑函数" class="headerlink" title="lambda紧凑函数"></a>lambda紧凑函数</h1><p>少用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;函数名&gt; = <span class="keyword">lambda</span> &lt;参数&gt; : &lt;表达式&gt;  <span class="comment">#紧凑函数</span></span><br><span class="line"></span><br><span class="line">f = <span class="keyword">lambda</span> x,y : x + y</span><br><span class="line"><span class="comment"># f(1,2) == 3</span></span><br><span class="line"></span><br><span class="line">f = <span class="keyword">lambda</span> : <span class="string">"Hellow"</span></span><br><span class="line"><span class="comment"># print(f()) = Hellow</span></span><br></pre></td></tr></table></figure><p>多用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">abc</span><span class="params">(x,y,lam)</span>:</span></span><br><span class="line">    a = lam(x,y)</span><br><span class="line">    print(a)</span><br><span class="line">abc(<span class="number">1</span>,<span class="number">2</span>,<span class="keyword">lambda</span> a,b:a+b)</span><br></pre></td></tr></table></figure><p>对含有字典的列表排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">test = [</span><br><span class="line">    &#123;<span class="string">'name'</span>:<span class="string">'LiMing'</span>,<span class="string">'age'</span>:<span class="number">18</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'name'</span>:<span class="string">'WangLei'</span>,<span class="string">'age'</span>:<span class="number">10</span>&#125;</span><br><span class="line">]</span><br><span class="line">test.sort(key=<span class="keyword">lambda</span> x:x[<span class="string">'age'</span>])   <span class="comment"># 传递给key的必须是函数</span></span><br><span class="line">print(test)   <span class="comment"># [&#123;'name': 'WangLei', 'age': 10&#125;, &#123;'name': 'LiMing', 'age': 18&#125;]</span></span><br></pre></td></tr></table></figure><h1 id="filter过滤"><a href="#filter过滤" class="headerlink" title="filter过滤"></a>filter过滤</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">test = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">x = filter(<span class="keyword">lambda</span> ls : ls &gt; <span class="number">3</span>,test)</span><br><span class="line"><span class="comment"># x为可迭代对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出方法1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> x:</span><br><span class="line">    print(i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出方法2</span></span><br><span class="line">ls1 = list(x)</span><br><span class="line">print(ls1)</span><br></pre></td></tr></table></figure><h1 id="map改动元素"><a href="#map改动元素" class="headerlink" title="map改动元素"></a>map改动元素</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">x = map(<span class="keyword">lambda</span> ls : ls + <span class="number">2</span>,test)</span><br><span class="line">print(list(x))</span><br></pre></td></tr></table></figure><h1 id="reduce相加"><a href="#reduce相加" class="headerlink" title="reduce相加"></a>reduce相加</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line">test = [</span><br><span class="line">    &#123;<span class="string">'name'</span>:<span class="string">'LiMing'</span>,<span class="string">'age'</span>:<span class="number">18</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'name'</span>:<span class="string">'WangLei'</span>,<span class="string">'age'</span>:<span class="number">10</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'name'</span>:<span class="string">'MaXiao'</span>,<span class="string">'age'</span>:<span class="number">20</span>&#125;</span><br><span class="line">]</span><br><span class="line">print(reduce(<span class="keyword">lambda</span> x, y: x + y[<span class="string">'age'</span>], test, <span class="number">0</span>))</span><br></pre></td></tr></table></figure><h1 id="PyInstaller打包程序"><a href="#PyInstaller打包程序" class="headerlink" title="PyInstaller打包程序"></a>PyInstaller打包程序</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#小小程序耽误我一晚，该死。</span></span><br><span class="line"><span class="comment">#需要安装pyinstaller第三方库</span></span><br><span class="line"></span><br><span class="line">-h     <span class="comment">#查看帮助</span></span><br><span class="line">--clean    <span class="comment">#清理打包过程中的临时文件</span></span><br><span class="line">-D,-onedir  <span class="comment">#默认值，生成dist文件</span></span><br><span class="line">-F,-onefile  <span class="comment">#在dist文件夹中只生成独立的打包文件</span></span><br><span class="line">-i &lt;图标文件名.ico&gt; <span class="comment">#指定打包程序使用的图标文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#小结</span></span><br><span class="line"> <span class="comment">#最好都带有-F，生成的pycache与build可删除</span></span><br><span class="line"> <span class="comment">#该程序在cmd中运行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#例子</span></span><br><span class="line">pyinstaller -i tu.ico -F test.py</span><br></pre></td></tr></table></figure><h1 id="组合数据类型"><a href="#组合数据类型" class="headerlink" title="组合数据类型"></a>组合数据类型</h1><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><p>元素特征：无序、唯一、不可更改</p><p>表示：{1,2,3}</p><p>创建：{}  或 set()创建可变集合              创建空集合必须用set()</p><p>​           frozenset创建不可变集合</p><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A=&#123;<span class="number">123</span>,<span class="string">"abc"</span>,(<span class="string">"abc"</span>,<span class="number">123</span>)&#125;    <span class="comment">#&#123;123,'abc',('abc',123)&#125;</span></span><br><span class="line"></span><br><span class="line">B=set(<span class="string">"abca"</span>)     <span class="comment">#&#123;a,c,b&#125; 无序，相同只有一个</span></span><br></pre></td></tr></table></figure><h3 id="集合操作符"><a href="#集合操作符" class="headerlink" title="集合操作符"></a>集合操作符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">S|T<span class="comment">#并   </span></span><br><span class="line">S&amp;T<span class="comment">#交   </span></span><br><span class="line">S-T<span class="comment">#差   </span></span><br><span class="line">S^T<span class="comment">#补</span></span><br><span class="line">S&gt;=T</span><br><span class="line">...</span><br><span class="line"><span class="comment">#增强操作符</span></span><br><span class="line">S|=T  <span class="comment">#对S进行更新</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="集合处理方法"><a href="#集合处理方法" class="headerlink" title="集合处理方法"></a>集合处理方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">S.add(x)</span><br><span class="line"></span><br><span class="line">S.update(x)   <span class="comment"># 将可迭代对象x拆分放入集合</span></span><br><span class="line"></span><br><span class="line">S.discard(x)  <span class="comment">#移除，不存在，不报错</span></span><br><span class="line"></span><br><span class="line">S.remove(x)   <span class="comment">#移除，不存在，报错KeyError</span></span><br><span class="line"></span><br><span class="line">S.clear()   <span class="comment"># 清空</span></span><br><span class="line"></span><br><span class="line">S.pop()  <span class="comment">#随机返回一个数并删除，更新S，为空KeyError</span></span><br><span class="line"></span><br><span class="line">S.copy()  <span class="comment">#返回S的副本</span></span><br><span class="line"></span><br><span class="line">len(S)</span><br><span class="line"></span><br><span class="line">x <span class="keyword">in</span> S  <span class="comment">#True or False</span></span><br><span class="line"></span><br><span class="line">x <span class="keyword">not</span> <span class="keyword">in</span> S</span><br><span class="line"></span><br><span class="line">set(x)  <span class="comment">#转换为集合</span></span><br></pre></td></tr></table></figure><h3 id="例-数据去重"><a href="#例-数据去重" class="headerlink" title="例 数据去重"></a>例 数据去重</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">l=[<span class="string">"p"</span>,<span class="string">"p"</span>,<span class="string">"y"</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>]</span><br><span class="line">s=set(l)     <span class="comment">#&#123;'p','y',1,2&#125;</span></span><br><span class="line">l=list(s)    <span class="comment">#['p','y',1,2]</span></span><br></pre></td></tr></table></figure><h2 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h2><p>元素特征：有序，不唯一，基类类型，包含字符串类型、元组类型、列表类型</p><p>序号规则：</p><p>0   1   2   3  4  5  6 </p><p>————————&gt;</p><p>&lt;———————–</p><p>-7 -6 -5 -4 -3 -2 -1</p><h3 id="序列操作符"><a href="#序列操作符" class="headerlink" title="序列操作符"></a>序列操作符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x <span class="keyword">in</span> S</span><br><span class="line"></span><br><span class="line">x <span class="keyword">not</span> <span class="keyword">in</span> S</span><br><span class="line"></span><br><span class="line">x+t</span><br><span class="line"></span><br><span class="line">n*s</span><br><span class="line"></span><br><span class="line">s[i]   <span class="comment">#索引，返回i序号的元素</span></span><br><span class="line"></span><br><span class="line">s[i:j:k]  <span class="comment">#切片</span></span><br></pre></td></tr></table></figure><h3 id="序列处理方法"><a href="#序列处理方法" class="headerlink" title="序列处理方法"></a>序列处理方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">len(s)</span><br><span class="line"></span><br><span class="line">min(s)</span><br><span class="line"></span><br><span class="line">max(s)</span><br><span class="line"></span><br><span class="line">s.index(x)  #返回x的位置</span><br><span class="line"></span><br><span class="line">s.index(x,i,j)  #给定范围i~j</span><br></pre></td></tr></table></figure><h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><p>元素特征：创建后不能修改，继承序列的全部方法</p><p>创建：() 或 tuple()</p><p>规则：元组的()可有可无</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>,<span class="number">1</span>  <span class="comment">#1,2为元组类型</span></span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>元素特征：创建后可以修改，不唯一，无长度限制</p><p>创建：[] 或 list()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">t=l   <span class="comment">#t与l均指向同一列表</span></span><br></pre></td></tr></table></figure><h3 id="列表操作符"><a href="#列表操作符" class="headerlink" title="列表操作符"></a>列表操作符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ls[i]=x   <span class="comment">#替换</span></span><br><span class="line"></span><br><span class="line">ls[i:j:k]=lt</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> ls[i]    <span class="comment">#删除</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> ls[i:j:k]</span><br><span class="line"></span><br><span class="line">ls += lt</span><br><span class="line"></span><br><span class="line">ls *= n</span><br></pre></td></tr></table></figure><h3 id="列表处理方法"><a href="#列表处理方法" class="headerlink" title="列表处理方法"></a>列表处理方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ls.append(x)   <span class="comment">#ls[i].append(x)用于嵌套列表</span></span><br><span class="line"></span><br><span class="line">ls1.extend(ls2)   <span class="comment"># 连接</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> ls[<span class="number">0</span>]   <span class="comment">#删除ls的第一个元素</span></span><br><span class="line"></span><br><span class="line">ls,index(values)   <span class="comment"># 查询元素所在位置</span></span><br><span class="line"></span><br><span class="line">ls.clear()</span><br><span class="line"></span><br><span class="line">ls.copy()</span><br><span class="line"></span><br><span class="line">ls.insert(i,x)</span><br><span class="line"></span><br><span class="line">ls.pop(i)   <span class="comment">#默认返回并删除最后一个元素，取出第i+1个元素</span></span><br><span class="line"></span><br><span class="line">ls.remove(x)</span><br><span class="line"></span><br><span class="line">ls.reverse()   <span class="comment">#元素顺序反转，覆盖原列表</span></span><br><span class="line"></span><br><span class="line">ls.sort(key=len,reverse=<span class="literal">True</span>) <span class="comment"># 按长度降序排列，直接覆盖原列表</span></span><br><span class="line"></span><br><span class="line">sorted(list) <span class="comment"># 将列表升序排列，生成一个新列表</span></span><br></pre></td></tr></table></figure><h2 id="字典（映射）"><a href="#字典（映射）" class="headerlink" title="字典（映射）"></a>字典（映射）</h2><p>字典是键值对的集合，键值对之间无序</p><p>创建：{} 或 dict()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;&lt;键<span class="number">1</span>&gt;:&lt;值<span class="number">1</span>&gt;,&lt;键<span class="number">2</span>&gt;:&lt;值<span class="number">2</span>&gt;...&#125;</span><br><span class="line"></span><br><span class="line">d = dict(<span class="number">1</span>=<span class="string">'a'</span>,<span class="number">2</span>=<span class="string">'b'</span>)</span><br><span class="line"></span><br><span class="line">&lt;值&gt; = &lt;字典变量&gt;[&lt;键&gt;]</span><br><span class="line"></span><br><span class="line">&lt;字典变量&gt;[&lt;键&gt;] = &lt;值&gt;    <span class="comment">#用来增加键值对</span></span><br></pre></td></tr></table></figure><h3 id="字典处理方法"><a href="#字典处理方法" class="headerlink" title="字典处理方法"></a>字典处理方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> d[k]</span><br><span class="line"></span><br><span class="line">k <span class="keyword">in</span> d</span><br><span class="line"></span><br><span class="line">d.keys()</span><br><span class="line"></span><br><span class="line">d.values()</span><br><span class="line"></span><br><span class="line">d.items()  <span class="comment">#返回所有</span></span><br><span class="line"></span><br><span class="line">d.get(k,&lt;default&gt;)   <span class="comment">#k不存在则返回default值</span></span><br><span class="line"></span><br><span class="line">d.pop(k,&lt;default&gt;)   <span class="comment">#取出</span></span><br><span class="line"></span><br><span class="line">d.popitem()  <span class="comment">#随机取出，以元组类型返回</span></span><br><span class="line"></span><br><span class="line">d1.update(d2)   <span class="comment"># 连接</span></span><br><span class="line"></span><br><span class="line">d.clear()</span><br><span class="line"></span><br><span class="line">len(d)</span><br></pre></td></tr></table></figure><h3 id="例-统计文本单词数量"><a href="#例-统计文本单词数量" class="headerlink" title="例 统计文本单词数量"></a>例 统计文本单词数量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getText</span><span class="params">()</span>:</span></span><br><span class="line">    txt = open(<span class="string">"hamlet.txt"</span>,<span class="string">"r"</span>).read()</span><br><span class="line">    txt = txt.lower()</span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> <span class="string">'|"#$%&amp;*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~'</span>:</span><br><span class="line">        txt = txt.replace(ch,<span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">return</span> txt</span><br><span class="line"></span><br><span class="line">hamletTxt = getText()</span><br><span class="line">words = hamletTxt.split()</span><br><span class="line">counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">    counts[word] = counts.get(word,<span class="number">0</span>)+<span class="number">1</span></span><br><span class="line">items = list(counts.items())</span><br><span class="line">items.sort(key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>],reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="comment">#lambda指明按key排序，reverse为从大到小</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    word,count=items[i]</span><br><span class="line">    print(<span class="string">"&#123;0:&lt;10&#125;&#123;1:&gt;5&#125;"</span>.format(word,count))</span><br></pre></td></tr></table></figure><h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h1><h2 id="文件的打开与关闭"><a href="#文件的打开与关闭" class="headerlink" title="文件的打开与关闭"></a>文件的打开与关闭</h2><p>存储状态 与 占用状态 的转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#打开</span></span><br><span class="line">&lt;变量名&gt; = open(&lt;文件名&gt;,&lt;打开模式&gt;)</span><br><span class="line"><span class="comment">#文件名</span></span><br><span class="line">在不同目录时用绝对路径</span><br><span class="line"><span class="comment">#打开模式</span></span><br><span class="line"><span class="string">'r'</span>  <span class="comment">#只读，不存在返回FileNotFoundErrpr，默认值</span></span><br><span class="line"></span><br><span class="line"><span class="string">'w'</span>  <span class="comment">#覆盖写,不存在就创建，存在就覆盖</span></span><br><span class="line"></span><br><span class="line"><span class="string">'x'</span>  <span class="comment">#创建写，不存在就创建，存在返回FileExistsError</span></span><br><span class="line"></span><br><span class="line"><span class="string">'a'</span>  <span class="comment">#追加写，不存在就创建，存在就在文件内容和继续写</span></span><br><span class="line"></span><br><span class="line"><span class="string">'b'</span>  <span class="comment">#二进制形式打开</span></span><br><span class="line"></span><br><span class="line"><span class="string">'t'</span>  <span class="comment">#文本文件形式打开，默认值</span></span><br><span class="line"></span><br><span class="line"><span class="string">'+'</span>  <span class="comment">#与r/w/x/a7一起用，增加读写功能</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭</span></span><br><span class="line">&lt;变量名&gt;.close()</span><br></pre></td></tr></table></figure><h2 id="文件内容的读取"><a href="#文件内容的读取" class="headerlink" title="文件内容的读取"></a>文件内容的读取</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;f&gt;.read(x)  <span class="comment">#读取长度为x的信息，x可有可无</span></span><br><span class="line"></span><br><span class="line">&lt;f&gt;.readline(x)  <span class="comment">#读取长度为x的信息，x可有可无</span></span><br><span class="line"></span><br><span class="line">&lt;f&gt;.readlines(x)  <span class="comment">#一行一个字符串，读取前x行，可有可无</span></span><br></pre></td></tr></table></figure><h2 id="文件内容的写入"><a href="#文件内容的写入" class="headerlink" title="文件内容的写入"></a>文件内容的写入</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;f&gt;.write(s)</span><br><span class="line"></span><br><span class="line">&lt;f&gt;.writelines(lines) <span class="comment">#写入一个字符串列表,字符串之间紧挨</span></span><br><span class="line"></span><br><span class="line">&lt;f&gt;.seek(x)  <span class="comment">#0-文件开头,1-当前位置,2-文件结尾</span></span><br></pre></td></tr></table></figure><h2 id="例-自动绘制"><a href="#例-自动绘制" class="headerlink" title="例 自动绘制"></a>例 自动绘制</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br><span class="line">t.title(<span class="string">'自动轨迹绘制'</span>)</span><br><span class="line">t.setup(<span class="number">800</span>,<span class="number">600</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">t.pencolor(<span class="string">"red"</span>)</span><br><span class="line">t.pensize(<span class="number">5</span>)</span><br><span class="line"><span class="comment">#数据读取</span></span><br><span class="line">datals = []</span><br><span class="line">f = open(<span class="string">"data.txt"</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">    line = line.replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    datals.append(list(map(eval,line.split(<span class="string">","</span>)))) <span class="comment">#map让eval对分节后的每个字符串使用</span></span><br><span class="line">f.close()</span><br><span class="line"><span class="comment">#自动绘制</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(datals)):</span><br><span class="line">    t.pencolor(datals[i][<span class="number">3</span>],datals[i][<span class="number">4</span>],datals[i][<span class="number">5</span>])</span><br><span class="line">    t.fd(datals[i][<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> datals[i][<span class="number">1</span>]:</span><br><span class="line">        t.right(datals[i][<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        t.left(datals[i][<span class="number">2</span>])</span><br><span class="line"><span class="comment">#数据</span></span><br><span class="line"><span class="string">'''300,0,144,1,0,0</span></span><br><span class="line"><span class="string">300,0,144,0,1,0</span></span><br><span class="line"><span class="string">300,0,144,0,0,1</span></span><br><span class="line"><span class="string">300,0,144,1,1,0</span></span><br><span class="line"><span class="string">300,0,108,0,1,1</span></span><br><span class="line"><span class="string">184,0,72,1,0,1</span></span><br><span class="line"><span class="string">184,0,72,0,0,0</span></span><br><span class="line"><span class="string">184,0,72,0,0,0</span></span><br><span class="line"><span class="string">184,0,72,0,0,0</span></span><br><span class="line"><span class="string">184,1,72,1,0,1</span></span><br><span class="line"><span class="string">184,1,72,0,0,0</span></span><br><span class="line"><span class="string">184,1,72,0,0,0</span></span><br><span class="line"><span class="string">184,1,72,0,0,0</span></span><br><span class="line"><span class="string">184,1,72,0,0,0</span></span><br><span class="line"><span class="string">184,1,720,0,0,0'''</span></span><br></pre></td></tr></table></figure><h1 id="re正则表达式"><a href="#re正则表达式" class="headerlink" title="re正则表达式"></a>re正则表达式</h1><p>使用原生字符串表达，r’text’</p><p>old: ‘Hellow’</p><p>new: r’Hellow’</p><h2 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">.       任何单个字符</span><br><span class="line"></span><br><span class="line">[]      [a-z]a到z的范围</span><br><span class="line"></span><br><span class="line">[^ ]    非[^abc]不包括abc</span><br><span class="line"></span><br><span class="line">*        abc*表示ab、abc、abcc等，0次或无限次扩展</span><br><span class="line"></span><br><span class="line">+        前一字符1次或无限次扩展</span><br><span class="line"></span><br><span class="line">?        0次或1次扩展</span><br><span class="line"></span><br><span class="line">|        abc|def，表示abc、def</span><br><span class="line"></span><br><span class="line">&#123;m&#125;      ab&#123;2&#125;c表示abbc</span><br><span class="line"></span><br><span class="line">&#123;m,n&#125;    ab&#123;1,2&#125;c表示abc,abbc</span><br><span class="line"></span><br><span class="line">^        开头</span><br><span class="line"></span><br><span class="line">$        结尾</span><br><span class="line"></span><br><span class="line">()       分组，内部只能用|</span><br><span class="line"></span><br><span class="line">\d       数字</span><br><span class="line"></span><br><span class="line">\w       字母和数字</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[\u4e00-\u9fa5]  匹配中文字符</span><br></pre></td></tr></table></figure><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">re.compile(pattern,flags=<span class="number">0</span>) <span class="comment">#将字符串编译成正则表达式对象</span></span><br><span class="line"></span><br><span class="line">re.search(pattern,string,flags=<span class="number">0</span>)  <span class="comment">#找到第一个位置的match对象</span></span><br><span class="line"></span><br><span class="line">re.match(pattern,string,flags=<span class="number">0</span>)   <span class="comment">#在字符串开始位置查找，match对象</span></span><br><span class="line"></span><br><span class="line">re.findall(pattern,string,flags=<span class="number">0</span>) <span class="comment">#以列表类型返回全部子串</span></span><br><span class="line"></span><br><span class="line">re.split(pattern,string,maxsolit=<span class="number">0</span>,flags=<span class="number">0</span>)   <span class="comment">#分割后列表返回</span></span><br><span class="line"></span><br><span class="line">re.finditer(pattern,string,flags=<span class="number">0</span>)<span class="comment">#返回迭代类型，都是match对象</span></span><br><span class="line"></span><br><span class="line">re.sub(pattern,repl,string,count=<span class="number">0</span>,flags=<span class="number">0</span>)     <span class="comment">#替换后返回字符串</span></span><br></pre></td></tr></table></figure><h3 id="flags常用标记"><a href="#flags常用标记" class="headerlink" title="flags常用标记"></a>flags常用标记</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">re.I  #忽略大小写</span><br><span class="line"></span><br><span class="line">re.M  #将每行当作开始</span><br><span class="line"></span><br><span class="line">re.S  #操作符能匹配所有字符</span><br></pre></td></tr></table></figure><h2 id="match对象属性"><a href="#match对象属性" class="headerlink" title="match对象属性"></a>match对象属性</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.string   <span class="comment">#待匹配文本</span></span><br><span class="line"></span><br><span class="line">.re       <span class="comment">#匹配时的pattern对象</span></span><br><span class="line"></span><br><span class="line">.pos      <span class="comment">#开始位置</span></span><br><span class="line"></span><br><span class="line">.endpos   <span class="comment">#结束位置</span></span><br><span class="line"></span><br><span class="line">.group(<span class="number">0</span>) <span class="comment">#获取匹配后的字符串</span></span><br><span class="line"></span><br><span class="line">.start()  <span class="comment">#匹配字符的开始位置</span></span><br><span class="line"></span><br><span class="line">.end()    <span class="comment">#匹配字符的结束位置</span></span><br><span class="line"></span><br><span class="line">.span()   <span class="comment">#返回(.start(),.end())</span></span><br></pre></td></tr></table></figure><h2 id="贪婪匹配与最小匹配"><a href="#贪婪匹配与最小匹配" class="headerlink" title="贪婪匹配与最小匹配"></a>贪婪匹配与最小匹配</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>rst = re.search(<span class="string">r'PY.*N'</span>,<span class="string">"PYQNPLN"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>rst.group()</span><br><span class="line"><span class="string">'PYQNPLN'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>rst = re.search(<span class="string">r'PY.*?N'</span>,<span class="string">"PYQNPLN"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>rst.group()</span><br><span class="line"><span class="string">'PYQN</span></span><br></pre></td></tr></table></figure><p>只差一个？就是两种不同的匹配</p><h2 id="面向对象的用法"><a href="#面向对象的用法" class="headerlink" title="面向对象的用法"></a>面向对象的用法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">old:</span><br><span class="line">rst = re.search(<span class="string">r'[1-9]\d&#123;5&#125;'</span>,<span class="string">'BIT 100081'</span>)</span><br><span class="line"></span><br><span class="line">new:</span><br><span class="line">pat = re.compile(<span class="string">r'[1-9]\d&#123;5&#125;'</span>)</span><br><span class="line">rst = pat.search(<span class="string">'BIT 100081'</span>)</span><br></pre></td></tr></table></figure><h1 id="模块的导入"><a href="#模块的导入" class="headerlink" title="模块的导入"></a>模块的导入</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint   <span class="comment"># 导入random模板里的randint函数，调用randint方法时不用加random. 。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> *   <span class="comment"># 引入math模板里的全部方法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t   <span class="comment"># 为模板设置简称</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint <span class="keyword">as</span> rd   <span class="comment"># 为方法设置简称</span></span><br></pre></td></tr></table></figure><h1 id="time时间"><a href="#time时间" class="headerlink" title="time时间"></a>time时间</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment">#时间获取</span></span><br><span class="line"></span><br><span class="line">time.time()    <span class="comment">#1594889513.965165</span></span><br><span class="line"></span><br><span class="line">time.ctime()   <span class="comment">#'Thu Jul 16 16:52:16 2020'</span></span><br><span class="line"></span><br><span class="line">time.gmtime()  <span class="comment">#time.struct_time(tm_year=2020, tm_mon=7, tm_mday=16, tm_hour=8, tm_min=55, tm_sec=7,                         tm_wday=3, tm_yday=198, tm_isdst=0)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#时间格式化</span></span><br><span class="line">t = time.gmtime()</span><br><span class="line"><span class="comment"># Y年:2020     m月:7     B月:April     b月:Apr     d日:16     A星期:Wednesday     a星期:Wed     H小时(24h):12     I小时(12h):7     p上下午:PM,M分钟:26     S秒:26</span></span><br><span class="line"></span><br><span class="line">time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>,t)  <span class="comment"># '2020-07-16 09:00:44'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">timeStr=<span class="string">'2020-07-16 17:13:20'</span></span><br><span class="line">time.strptime(timeStr,<span class="string">"%Y-%m-%d %H:%M:%S"</span>) <span class="comment">#time.struct_time(tm_year=2020, tm_mon=7, tm_mday=16, tm_hour=17,                                             tm_min=13, tm_sec=20, tm_wday=3, tm_yday=198, tm_isdst=-1)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#程序计时</span></span><br><span class="line"></span><br><span class="line">time.perf_counter()  <span class="comment">#定义start与end，然后相减计算。</span></span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">3.3</span>) <span class="comment">#3.3秒后退出</span></span><br></pre></td></tr></table></figure><h2 id="例-文本进度条"><a href="#例-文本进度条" class="headerlink" title="例 文本进度条"></a>例 文本进度条</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">scale = <span class="number">50</span></span><br><span class="line">print(<span class="string">"执行开始"</span>.center(scale//<span class="number">2</span>,<span class="string">"-"</span>))</span><br><span class="line">start = time.perf_counter()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(scale+<span class="number">1</span>):</span><br><span class="line">    a=<span class="string">'*'</span>*i</span><br><span class="line">    b=<span class="string">'.'</span>*(scale-i)</span><br><span class="line">    c=(i/scale)*<span class="number">100</span></span><br><span class="line">    dur = time.perf_counter() - start</span><br><span class="line">    print(<span class="string">"\r&#123;:^3.0f&#125;%[&#123;&#125;-&gt;&#123;&#125;]&#123;:.2f&#125;s"</span>.format(c,a,b,dur),end=<span class="string">""</span>)  <span class="comment">#end使输出后不换行，\r回到行首</span></span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br><span class="line">print(<span class="string">"\n"</span>+<span class="string">"执行结束"</span>.center(scale//<span class="number">2</span>,<span class="string">"-"</span>))</span><br></pre></td></tr></table></figure><h2 id="例-七段数码管绘制"><a href="#例-七段数码管绘制" class="headerlink" title="例 七段数码管绘制"></a>例 七段数码管绘制</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawGap</span><span class="params">()</span>:</span></span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">5</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawLine</span><span class="params">(draw)</span>:</span></span><br><span class="line">    drawGap()</span><br><span class="line">    turtle.pendown() <span class="keyword">if</span> draw <span class="keyword">else</span> turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">40</span>)</span><br><span class="line">    drawGap()</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawDigit</span><span class="params">(digit)</span>:</span></span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">8</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.left(<span class="number">90</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.left(<span class="number">180</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">20</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawDate</span><span class="params">(date)</span>:</span></span><br><span class="line">    turtle.pencolor(<span class="string">"red"</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> date:</span><br><span class="line">        <span class="keyword">if</span> i==<span class="string">'-'</span>:</span><br><span class="line">            turtle.write(<span class="string">'年'</span>,font=(<span class="string">"Arial"</span>,<span class="number">18</span>,<span class="string">"normal"</span>))</span><br><span class="line">            turtle.pencolor(<span class="string">"green"</span>)</span><br><span class="line">            turtle.fd(<span class="number">40</span>)</span><br><span class="line">        <span class="keyword">elif</span> i==<span class="string">'='</span>:</span><br><span class="line">            turtle.write(<span class="string">'月'</span>,font=(<span class="string">"Arial"</span>,<span class="number">18</span>,<span class="string">"normal"</span>))</span><br><span class="line">            turtle.pencolor(<span class="string">"blue"</span>)</span><br><span class="line">            turtle.fd(<span class="number">40</span>)</span><br><span class="line">        <span class="keyword">elif</span> i==<span class="string">'+'</span>:</span><br><span class="line">            turtle.write(<span class="string">'日'</span>,font=(<span class="string">"Arial"</span>,<span class="number">18</span>,<span class="string">"normal"</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            drawDigit(eval(i))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    turtle.setup(<span class="number">800</span>,<span class="number">350</span>,<span class="number">200</span>,<span class="number">200</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">-300</span>)</span><br><span class="line">    turtle.pensize(<span class="number">5</span>)</span><br><span class="line">    drawDate(time.strftime(<span class="string">'%Y-%m=%d+'</span>,time.gmtime()))</span><br><span class="line">    turtle.hideturtle()</span><br><span class="line">    turtle.done()</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="random随机数"><a href="#random随机数" class="headerlink" title="random随机数"></a>random随机数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#基本随机函数</span></span><br><span class="line"><span class="keyword">import</span> random   <span class="comment">#伪随机数。。。。随机都是骗人的，你就是那1%的倒霉蛋</span></span><br><span class="line"></span><br><span class="line">random.seed(<span class="number">10</span>)  <span class="comment">#产生种子10对应的序列</span></span><br><span class="line"><span class="comment">#相同种子随机数的顺序相同，默认种子是系统时间</span></span><br><span class="line"></span><br><span class="line">random.random()  <span class="comment">#产生[0.0,1.0)之间的随机小数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#扩展随机数函数</span></span><br><span class="line">random.randint(a,b)  <span class="comment">#产生[a,b]之间的一个整数，这不挺有用的吗</span></span><br><span class="line"></span><br><span class="line">random.randrange(m,n[,k])  <span class="comment">#在[m,n)之间产生以k为增长的随机整数</span></span><br><span class="line"></span><br><span class="line">random.getrandbits(k)  <span class="comment">#生成一个k比特长的随机整数</span></span><br><span class="line"></span><br><span class="line">random.uniform(a,b)   <span class="comment">#生成[a,b]之间的随机小数</span></span><br><span class="line"></span><br><span class="line">random.choice([<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>])  <span class="comment">#随机选取其中一个数</span></span><br><span class="line"></span><br><span class="line">random.shuffle([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]) <span class="comment">#返回打乱后的序列,比如[3,2,4,1]</span></span><br></pre></td></tr></table></figure><h2 id="例-计算圆周率"><a href="#例-计算圆周率" class="headerlink" title="例 计算圆周率"></a>例 计算圆周率</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> perf_counter</span><br><span class="line">darts = <span class="number">1000</span>*<span class="number">1000</span></span><br><span class="line">hits = <span class="number">0.0</span></span><br><span class="line">start = perf_counter()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,darts+<span class="number">1</span>):</span><br><span class="line">    x,y = random(),random()</span><br><span class="line">    dist = pow(x**<span class="number">2</span>+y**<span class="number">2</span>,<span class="number">0.5</span>)</span><br><span class="line">    <span class="keyword">if</span> dist &lt;=<span class="number">1.0</span>:</span><br><span class="line">        hits = hits+<span class="number">1</span></span><br><span class="line">pi = <span class="number">4</span>*(hits/darts)</span><br><span class="line">print(<span class="string">"圆周率值是:&#123;&#125;"</span>.format(pi))</span><br><span class="line">print(<span class="string">"运行时间是:&#123;:.5f&#125;s"</span>.format(perf_counter()-start))</span><br></pre></td></tr></table></figure><h1 id="turtle画图"><a href="#turtle画图" class="headerlink" title="turtle画图"></a>turtle画图</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br><span class="line">t.setup(w,h,x,y)     <span class="comment">#设置位置大小</span></span><br><span class="line">t.screensize(<span class="number">800</span>,<span class="number">600</span>,<span class="string">'green'</span>)   <span class="comment"># 设置画布</span></span><br><span class="line">t.speed(<span class="number">30</span>)   <span class="comment"># 设置绘制速度，[1，10]</span></span><br><span class="line">t.hideturtle()   <span class="comment"># 隐藏画笔，showturtle显示画笔</span></span><br><span class="line">t.dot(<span class="number">20</span>,<span class="string">'red'</span>)   <span class="comment"># 画一个实心原点</span></span><br><span class="line">t.fillcolor(<span class="string">'red'</span>)</span><br><span class="line">t.begin_fill()   <span class="comment"># 开始填充</span></span><br><span class="line">t.circle(<span class="number">100</span>,<span class="number">360</span>)</span><br><span class="line">t.end_fill()   <span class="comment"># 结束填充</span></span><br><span class="line">t.penup()              </span><br><span class="line">t.pendown()        </span><br><span class="line">t.fd(<span class="number">-250</span>)                 </span><br><span class="line">t.pensize(<span class="number">25</span>)            <span class="comment">#设置笔迹的宽度</span></span><br><span class="line">t.pencolor(<span class="string">"green"</span>)</span><br><span class="line">t.seth(<span class="number">90</span>)        <span class="comment">#让海龟转向90°的位置</span></span><br><span class="line"><span class="keyword">for</span> <span class="number">1</span> <span class="keyword">in</span> rang(<span class="number">4</span>):      <span class="comment">#循环4次</span></span><br><span class="line">    t.circle(<span class="number">40</span>,<span class="number">80</span>)     <span class="comment">#40的半径绘制80°的弧线</span></span><br><span class="line">    t.circle(<span class="number">-40</span>,<span class="number">80</span>)</span><br><span class="line">t.done()     <span class="comment">#可以不会自动退出</span></span><br></pre></td></tr></table></figure><h2 id="例-科赫雪花（使用递归）"><a href="#例-科赫雪花（使用递归）" class="headerlink" title="例 科赫雪花（使用递归）"></a>例 科赫雪花（使用递归）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#递归要包括 基例 与 递归链条</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">koch</span><span class="params">(size,n)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:    <span class="comment">#基例</span></span><br><span class="line">        t.fd(size)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> angle <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">60</span>,<span class="number">-120</span>,<span class="number">60</span>]:  <span class="comment">#递归链条</span></span><br><span class="line">            t.left(angle)</span><br><span class="line">            koch(size/<span class="number">3</span>,n<span class="number">-1</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    t.setup(<span class="number">800</span>,<span class="number">400</span>)</span><br><span class="line">    t.penup()</span><br><span class="line">    t.goto(<span class="number">-300</span>,<span class="number">-50</span>)</span><br><span class="line">    t.pendown()</span><br><span class="line">    t.pensize(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        koch(<span class="number">120</span>,<span class="number">3</span>)</span><br><span class="line">        t.right(<span class="number">120</span>)</span><br><span class="line">    t.hideturtle</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="jieba中文分词"><a href="#jieba中文分词" class="headerlink" title="jieba中文分词()"></a>jieba中文分词()</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">jieba.lcut(s) <span class="comment">#精确模式，无冗余</span></span><br><span class="line"><span class="comment">#中国是一个伟大的国家&gt;&gt;&#123;'中国','是','一个','伟大','的','国家'&#125;</span></span><br><span class="line"></span><br><span class="line">jieba.lcut(s,cut_all=<span class="literal">True</span>) <span class="comment">#全模式，有冗余</span></span><br><span class="line"><span class="comment">#中国是一个伟大的国家&gt;&gt;&#123;'中国','国是','一个','伟大','的','国家'&#125;</span></span><br><span class="line"></span><br><span class="line">jieba.lcut_for)serch(s) <span class="comment">#搜索引擎模式</span></span><br><span class="line"><span class="comment">#中华人民共和国&gt;&gt;&#123;'中华','华人','人民','共和','共和国'&#125;</span></span><br><span class="line"></span><br><span class="line">jieba.add_word(w)  <span class="comment">#向分词词典中增加新词w</span></span><br></pre></td></tr></table></figure><h1 id="wordcloud词云"><a href="#wordcloud词云" class="headerlink" title="wordcloud词云"></a>wordcloud词云</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wordcloud</span><br><span class="line">步骤<span class="number">1</span></span><br><span class="line">w = wordcloud.WordCloud()</span><br><span class="line"><span class="comment">#w=wordcloud.WprdCloud(width=100) </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置对象参数</span></span><br><span class="line"></span><br><span class="line">width</span><br><span class="line"></span><br><span class="line">height</span><br><span class="line"></span><br><span class="line">min_font_size</span><br><span class="line"></span><br><span class="line">max_font_size</span><br><span class="line"></span><br><span class="line">font_step  <span class="comment">#字号的步进间隔</span></span><br><span class="line"></span><br><span class="line">font_path  <span class="comment">#指定字体文件路径，微软雅黑：msyh.ttc</span></span><br><span class="line"></span><br><span class="line">max_words</span><br><span class="line"></span><br><span class="line">stop_words=&#123;<span class="string">"123"</span>&#125;  <span class="comment">#排除的单词</span></span><br><span class="line"></span><br><span class="line">mask</span><br><span class="line"><span class="keyword">from</span> scipy.misc <span class="keyword">import</span> imread</span><br><span class="line">mk=imread(<span class="string">"pic.png"</span>)</span><br><span class="line">w=wordcloud.WordCloud(mask=mk)</span><br><span class="line"></span><br><span class="line">backgorund_color</span><br><span class="line"></span><br><span class="line">步骤<span class="number">2</span></span><br><span class="line">w.generate(txt)   <span class="comment">#加载文本</span></span><br><span class="line">步骤<span class="number">3</span></span><br><span class="line">w.to_file(filename)  <span class="comment">#输出图片文件,png或jpg</span></span><br></pre></td></tr></table></figure><h2 id="例-文本文件生成词云"><a href="#例-文本文件生成词云" class="headerlink" title="例 文本文件生成词云"></a>例 文本文件生成词云</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> wordcloud</span><br><span class="line"><span class="keyword">from</span> imageio <span class="keyword">import</span> imread</span><br><span class="line">mask = imread(<span class="string">"fivestart.png"</span>)</span><br><span class="line">f = open(<span class="string">"中国特色社会主义.txt"</span>,<span class="string">"r"</span>,encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">t = f.read()</span><br><span class="line">f.close()</span><br><span class="line">ls = jieba.lcut(t)</span><br><span class="line">txt = <span class="string">" "</span>.join(ls)</span><br><span class="line">w = wordcloud.WordCloud(font_path=<span class="string">"msyh.ttc"</span>,background_color=<span class="string">"white"</span>,mask = mask)</span><br><span class="line">w.generate(txt)</span><br><span class="line">w.to_file(<span class="string">"text.png"</span>)<span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> wordcloud</span><br><span class="line">f = open(<span class="string">"中国特色社会主义.txt"</span>,<span class="string">"r"</span>,encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">t = f.read()</span><br><span class="line">f.close()</span><br><span class="line">ls = jieba.lcut(t)</span><br><span class="line">txt = <span class="string">" "</span>.join(ls)</span><br><span class="line">w = wordcloud.WordCloud(font_path=<span class="string">"msyh.ttc"</span>,\</span><br><span class="line">                        background_color=<span class="string">"white"</span>)</span><br><span class="line">w.generate(txt)</span><br><span class="line">w.to_file(<span class="string">"text.png"</span>)</span><br></pre></td></tr></table></figure><h2 id="json字符串"><a href="#json字符串" class="headerlink" title="json字符串"></a>json字符串</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">test = &#123;<span class="string">'1'</span>:<span class="string">'a'</span>,<span class="string">'2'</span>:<span class="string">'b'</span>,<span class="string">'3'</span>:<span class="string">'c'</span>&#125;</span><br><span class="line">x = json.dumps(test)   <span class="comment"># 转换为json字符串</span></span><br><span class="line">print(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x == '&#123;"1":"a","2":"b","3":"c"&#125;'</span></span><br><span class="line"></span><br><span class="line">x1 = json.loads(x)   <span class="comment"># 转换为原来的类型</span></span><br><span class="line">print(x1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x1 == &#123;'1':'a','2':'b','3':'c'&#125;</span></span><br></pre></td></tr></table></figure><h1 id="os库"><a href="#os库" class="headerlink" title="os库"></a>os库</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">"命令"</span>)</span><br><span class="line"></span><br><span class="line">os.cpu_dount()</span><br><span class="line"></span><br><span class="line">os.getlogin()</span><br><span class="line"></span><br><span class="line"><span class="comment">#其余对文件的路径不太感兴趣。。。用到的时候再看吧</span></span><br></pre></td></tr></table></figure><h1 id="第三方库的安装"><a href="#第三方库的安装" class="headerlink" title="第三方库的安装"></a>第三方库的安装</h1><p>pip install &lt;&gt;     安装</p><p>pip install -U &lt;&gt;     更新</p><p>pip uninstall &lt;&gt;      卸载</p><p>pip download &lt;&gt;  下载不安装</p><p>pip show &lt;&gt;    查看详情信息</p><p>pip search &lt;&gt;    搜索</p><p>pip list  &lt;&gt;  将安装的列举出来</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/image-20200803165429996.png">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;例-温度转换&quot;&gt;&lt;a href=&quot;#例-温度转换&quot; class=&quot;headerlink&quot; title=&quot;例 温度转换&quot;&gt;&lt;/a&gt;例 温度转换&lt;/h1&gt;&lt;p&gt;字符串”123456”由第一个字符开始记序号:&lt;/p&gt;
&lt;p&gt;​     0,1,2,3,4,5&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="http://2544165563.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>JDBC数据库连接</title>
    <link href="http://2544165563.github.io/2020/08/27/JDBC%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/"/>
    <id>http://2544165563.github.io/2020/08/27/JDBC%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/</id>
    <published>2020-08-27T03:00:50.629Z</published>
    <updated>2020-08-01T02:06:20.575Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-连接MySQL数据库及操作"><a href="#1-连接MySQL数据库及操作" class="headerlink" title="1.连接MySQL数据库及操作"></a>1.连接MySQL数据库及操作</h1><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//加载驱动类，并执行该类中的初始化代码，将驱动注册到DriverManager中</span></span><br><span class="line"> <span class="keyword">try</span> &#123;</span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">System.out.println(<span class="string">"加载数据库驱动成功"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"加载数据库驱动失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line">        </span><br><span class="line"> <span class="keyword">try</span> &#123;</span><br><span class="line"> <span class="comment">//数据库的路径</span></span><br><span class="line"> String url=<span class="string">"jdbc:mysql://localhost:3306/date"</span>;</span><br><span class="line"> <span class="comment">//数据库的用户名</span></span><br><span class="line"> String user=<span class="string">"root"</span>;</span><br><span class="line"> <span class="comment">//密码</span></span><br><span class="line"> String password=<span class="string">"liuxiang5."</span>;</span><br><span class="line">Connection con=DriverManager.getConnection(url,user,password);</span><br><span class="line">System.out.println(<span class="string">"连接数据库成功"</span>);</span><br><span class="line"> &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"连接数据库失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><p>在大佬的帮助下终于连接上了🐇</p><p>解决方法链接</p><p>（<a href="https://blog.csdn.net/qq_41950447/article/details/90085170）" target="_blank" rel="noopener">https://blog.csdn.net/qq_41950447/article/details/90085170）</a></p><h1 id="2-查询"><a href="#2-查询" class="headerlink" title="2.查询"></a>2.查询</h1><p>select* from 表名</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//向数据库发送SQL查询语句</span></span><br><span class="line"> Statement st=con.createStatement();</span><br><span class="line"><span class="comment">//执行查询</span></span><br><span class="line"> String sql=<span class="string">"select * from form1 where salary&gt;1900"</span>; </span><br><span class="line"> ResultSet rs=st.executeQuery(sql);  </span><br><span class="line"><span class="comment">//处理结果</span></span><br><span class="line"> <span class="keyword">while</span>(rs.next()) &#123;</span><br><span class="line"> String number=rs.getString(<span class="number">1</span>);</span><br><span class="line"> String name=rs.getString(<span class="number">2</span>);</span><br><span class="line"> Date birthday=rs.getDate(<span class="string">"birthday"</span>);</span><br><span class="line"> <span class="keyword">double</span> salary=rs.getDouble(<span class="number">4</span>);</span><br><span class="line"> System.out.println(number+<span class="string">"   "</span>+name+<span class="string">"   "</span>+birthday+<span class="string">"   "</span>+salary);</span><br><span class="line"> &#125;</span><br><span class="line"> rs.close();  <span class="comment">//关闭结果集</span></span><br><span class="line"> con.close();  <span class="comment">//关闭连接</span></span><br><span class="line"> &#125; </span><br><span class="line"> <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">System.out.println(<span class="string">"数据库操作异常"</span>+e);</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">finally</span> &#123;</span><br><span class="line"> System.out.println(<span class="string">"数据库数据获取成功"</span>);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="3-增加、删除、修改"><a href="#3-增加、删除、修改" class="headerlink" title="3.增加、删除、修改"></a>3.增加、删除、修改</h1><p>1.更新记录的SQL语法</p><p>UPDATE &lt;表名&gt; SET &lt;字段名&gt; = 新值 WHERE &lt;条件子句&gt;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sql=<span class="string">"update form1 set salary=5000 where name='小明'"</span>;</span><br><span class="line">pst=con.prepareStatement(sql);</span><br><span class="line"><span class="keyword">int</span> m=pst.executeUpdate();</span><br><span class="line"><span class="keyword">if</span>(m!=<span class="number">0</span>) &#123;</span><br><span class="line"> System.out.println(<span class="string">"更新了"</span>+m+<span class="string">"条记录"</span>);</span><br></pre></td></tr></table></figure><p>2.添加记录的SQL语法</p><p>​      INSERT INTO 表(字段列表) VALUES(对应的具体的记录)</p><p>或  INSERT INTO 表 VALUES(对应的具体的记录)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sql=<span class="string">"insert into form1 values('004','小明','2005-11-29','3000')"</span>;</span><br><span class="line">PreparedStatement pst=con.prepareStatement(sql);</span><br><span class="line"> <span class="keyword">int</span> m=pst.executeUpdate();</span><br><span class="line"> <span class="keyword">if</span>(m!=<span class="number">0</span>) &#123;</span><br><span class="line"> System.out.println(<span class="string">"对标添加了"</span>+m+<span class="string">"条记录"</span>);</span><br></pre></td></tr></table></figure><p>3.删除记录的SQL语法</p><p>DELETE FROM &lt;表名&gt; WHERE &lt;条件子句&gt;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> sql=<span class="string">"delete from form1 where number='005'"</span>;</span><br><span class="line">pst=con.prepareStatement(sql);</span><br><span class="line"><span class="keyword">int</span> m=pst.executeUpdate();</span><br><span class="line"><span class="keyword">if</span>(m!=<span class="number">0</span>) &#123;</span><br><span class="line"> System.out.println(<span class="string">"删除了"</span>+m+<span class="string">"条记录"</span>);</span><br></pre></td></tr></table></figure><h1 id="4-通配符"><a href="#4-通配符" class="headerlink" title="4.通配符"></a>4.通配符</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  sql=<span class="string">"delete from form1 where salary=?"</span>;</span><br><span class="line">pst=con.prepareStatement(sql);</span><br><span class="line">pst.setDouble(<span class="number">1</span>, <span class="number">5000</span>);</span><br><span class="line"><span class="keyword">int</span> m=pst.executeUpdate();</span><br><span class="line"><span class="keyword">if</span>(m!=<span class="number">0</span>) &#123;</span><br><span class="line"> System.out.println(<span class="string">"删除了"</span>+m+<span class="string">"条记录"</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-连接MySQL数据库及操作&quot;&gt;&lt;a href=&quot;#1-连接MySQL数据库及操作&quot; class=&quot;headerlink&quot; title=&quot;1.连接MySQL数据库及操作&quot;&gt;&lt;/a&gt;1.连接MySQL数据库及操作&lt;/h1&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="JAVA" scheme="http://2544165563.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>I/O流</title>
    <link href="http://2544165563.github.io/2020/08/27/IO%E6%B5%81/"/>
    <id>http://2544165563.github.io/2020/08/27/IO%E6%B5%81/</id>
    <published>2020-08-27T03:00:50.626Z</published>
    <updated>2020-07-15T06:55:51.039Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-File类"><a href="#1-File类" class="headerlink" title="1.File类"></a>1.File类</h1><a id="more"></a><p>常用方法：boolean exists()   判断对应文件或目录是否存在</p><p>​                    boolean delete()        boolean createNewFile()</p><p>​                    String getName()       String getParent ()</p><p>​                    String getPath()          String getAbsolutePath()</p><p>​                    boolean canRead()    boolean canWrite()</p><p>​                    boolean isFile()           boolean isDirectory()</p><p>​                    boolean isAbsolute()  long lastModified()</p><p>​                    long length()                 String []list()</p><p>​                    File[] listFiles()</p><!--more--><p>实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">And</span> </span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span></span><br><span class="line"><span class="function"> </span>&#123;    </span><br><span class="line">   File fi=<span class="keyword">new</span> File(<span class="string">"D:\\JAVA测试"</span>,<span class="string">"test.txt"</span>);</span><br><span class="line">   <span class="keyword">if</span>(fi.exists()) &#123;</span><br><span class="line">   System.out.println(fi.getName());</span><br><span class="line">   System.out.println(fi.length());</span><br><span class="line">   System.out.println(fi.canRead());&#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   fi.createNewFile();</span><br><span class="line">   &#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="运行可执行文件"><a href="#运行可执行文件" class="headerlink" title="运行可执行文件"></a>运行可执行文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Jydge</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">  Runtime c=Runtime.getRuntime();</span><br><span class="line">  File f=<span class="keyword">new</span> File(<span class="string">"文件地址"</span>,<span class="string">"文件名"</span>);</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">c.exec(f.getAbsolutePath());</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="2-文件字节流"><a href="#2-文件字节流" class="headerlink" title="2.文件字节流"></a>2.文件字节流</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">And</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line"><span class="comment">//建立文件链接</span></span><br><span class="line">   File f1=<span class="keyword">new</span> File(<span class="string">"D:\\JAVA测试"</span>,<span class="string">"test.txt"</span>);</span><br><span class="line">   File f2=<span class="keyword">new</span> File(<span class="string">"D:\\JAVA测试"</span>,<span class="string">"test1.txt"</span>);</span><br><span class="line"><span class="comment">//选择流</span></span><br><span class="line">   FileInputStream in=<span class="keyword">new</span> FileInputStream(f1);  </span><br><span class="line">   FileOutputStream out=<span class="keyword">new</span> FileOutputStream(f2);</span><br><span class="line"><span class="comment">//拷贝</span></span><br><span class="line">   <span class="keyword">byte</span> b[]=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">   <span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">while</span>((len=in.read())!=-<span class="number">1</span>) &#123;</span><br><span class="line">   out.write(b,<span class="number">0</span>,len);</span><br><span class="line">   &#125;</span><br><span class="line">   out.flush();   <span class="comment">//将缓存区域的内容读取到文件当中（不理解）。。</span></span><br><span class="line"><span class="comment">//释放资源</span></span><br><span class="line">   out.close(); </span><br><span class="line">   in.close();   <span class="comment">//先打开的后关闭</span></span><br><span class="line">   &#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="3-文件字符流"><a href="#3-文件字符流" class="headerlink" title="3.文件字符流"></a>3.文件字符流</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">And</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line"><span class="comment">//建立文件链接</span></span><br><span class="line">   File f1=<span class="keyword">new</span> File(<span class="string">"D:\\JAVA测试"</span>,<span class="string">"test.txt"</span>);</span><br><span class="line">   File f2=<span class="keyword">new</span> File(<span class="string">"D:\\JAVA测试"</span>,<span class="string">"test1.txt"</span>);</span><br><span class="line"><span class="comment">//选择流</span></span><br><span class="line">   FileReader in=<span class="keyword">new</span> FileReader(f1);</span><br><span class="line">   FileWriter out=<span class="keyword">new</span> FileWriter(f2);</span><br><span class="line"><span class="comment">//拷贝</span></span><br><span class="line">   <span class="keyword">char</span>[] b=<span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line">   <span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">while</span>((len=in.read())!=-<span class="number">1</span>) &#123;</span><br><span class="line">   out.write(b, <span class="number">0</span>, len);</span><br><span class="line">   &#125;</span><br><span class="line">   out.flush();  <span class="comment">//将缓存区域的内容读取到文件当中（不理解）。。</span></span><br><span class="line"><span class="comment">//释放资源</span></span><br><span class="line">    out.close();</span><br><span class="line">    in.close();    <span class="comment">//先打开的后关闭</span></span><br><span class="line">   &#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="4-缓冲流"><a href="#4-缓冲流" class="headerlink" title="4.缓冲流"></a>4.缓冲流</h1><p>可以使字符串数组中的元素换行写入文本，也可以让文本中不同行的元素读取时在同一行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Jydge</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"> File file=<span class="keyword">new</span> File(<span class="string">"C:\\Users\\asus\\Desktop\\我滴东西\\456.txt"</span>);</span><br><span class="line">String content[]= &#123;<span class="string">"张三"</span>,<span class="string">"李四"</span>,<span class="string">"王五"</span>&#125;;</span><br><span class="line">        </span><br><span class="line">FileWriter out1=<span class="keyword">new</span> FileWriter(file);</span><br><span class="line">BufferedWriter out2=<span class="keyword">new</span> BufferedWriter(out1);</span><br><span class="line"><span class="keyword">for</span>(String str:content) &#123;</span><br><span class="line">        out2.write(str);</span><br><span class="line">out2.newLine();&#125;</span><br><span class="line">out2.close();</span><br><span class="line">out1.close();</span><br><span class="line">        </span><br><span class="line">FileReader in1=<span class="keyword">new</span> FileReader(file);</span><br><span class="line">BufferedReader in2=<span class="keyword">new</span> BufferedReader(in1);</span><br><span class="line"><span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line">String s=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">while</span>((s=in2.readLine())!=<span class="keyword">null</span>)</span><br><span class="line">  System.out.print(s);</span><br><span class="line">in1.close();</span><br><span class="line">in2.close();&#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="5-随机流"><a href="#5-随机流" class="headerlink" title="5.随机流"></a>5.随机流</h1><table><thead><tr><th>类型</th><th>字节</th></tr></thead><tbody><tr><td>Byte</td><td>1</td></tr><tr><td>Int</td><td>4</td></tr><tr><td>long</td><td>8</td></tr><tr><td>Char</td><td>2</td></tr><tr><td>Float</td><td>4</td></tr><tr><td>Double</td><td>8</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Jydge</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">  RandomAccessFile inAndOut=<span class="keyword">new</span> RandomAccessFile(<span class="string">"C:\\Users\\asus\\Desktop\\我滴东西\\456.txt"</span>,<span class="string">"rw"</span>); </span><br><span class="line">  <span class="keyword">char</span> data[]= &#123;<span class="string">'i'</span>,<span class="string">'l'</span>,<span class="string">'o'</span>,<span class="string">'v'</span>,<span class="string">'e'</span>,<span class="string">'y'</span>,<span class="string">'o'</span>,<span class="string">'u'</span>&#125;;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;data.length;i++)           <span class="comment">//写入</span></span><br><span class="line">  inAndOut.writeChar(data[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">long</span> i=<span class="number">0</span>;i&lt;data.length;i++) &#123;        <span class="comment">//读取</span></span><br><span class="line">  inAndOut.seek(i*<span class="number">2</span>);   <span class="comment">//定位读写位置，根据元素类型调整数字</span></span><br><span class="line">  System.out.print(inAndOut.readChar()+<span class="string">"  "</span>);  </span><br><span class="line">  &#125;</span><br><span class="line">  inAndOut.close();</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><h6 id="readLine（）-读取一个文本行，第二次读取下一行"><a href="#readLine（）-读取一个文本行，第二次读取下一行" class="headerlink" title="readLine（）  读取一个文本行，第二次读取下一行"></a>readLine（）  读取一个文本行，第二次读取下一行</h6><p>解决非ASCII字符乱码问题（比如汉字）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Jydge</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">  RandomAccessFile inAndOut=<span class="keyword">new</span> RandomAccessFile(<span class="string">"C:\\Users\\asus\\Desktop\\我滴东西\\456.txt"</span>,<span class="string">"rw"</span>);</span><br><span class="line">  String str=inAndOut.readLine();</span><br><span class="line">  <span class="keyword">byte</span>[] b=str.getBytes(<span class="string">"iso-8859-1"</span>); <span class="comment">//将获取的字符串重新编码</span></span><br><span class="line">  String content=<span class="keyword">new</span> String(b);</span><br><span class="line">  System.out.println(content);</span><br><span class="line">  inAndOut.close();</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><p>鸽了鸽了，后面内容有点多，等放假再弄（懒癌发作，数据结构还一点没学T.T）</p><h5 id=""><a href="#" class="headerlink" title=""></a></h5>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-File类&quot;&gt;&lt;a href=&quot;#1-File类&quot; class=&quot;headerlink&quot; title=&quot;1.File类&quot;&gt;&lt;/a&gt;1.File类&lt;/h1&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="JAVA" scheme="http://2544165563.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>HTML基础（部分CSS）</title>
    <link href="http://2544165563.github.io/2020/08/27/html/"/>
    <id>http://2544165563.github.io/2020/08/27/html/</id>
    <published>2020-08-27T03:00:50.623Z</published>
    <updated>2020-08-01T02:27:48.481Z</updated>
    
    <content type="html"><![CDATA[<h3 id="标签类型"><a href="#标签类型" class="headerlink" title="标签类型"></a>标签类型</h3><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>~<span class="tag">&lt;<span class="name">h6</span>&gt;</span>   <span class="tag">&lt;/<span class="name">h1</span>&gt;</span>~<span class="tag">&lt;/<span class="name">h6</span>&gt;</span>   标题</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>                   内容</span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span>               可以拥有空格</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>               容器</span><br></pre></td></tr></table></figure><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="居中"><a href="#居中" class="headerlink" title="居中"></a>居中</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>居中<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="引入图片"><a href="#引入图片" class="headerlink" title="引入图片"></a>引入图片</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"图片地址"</span> <span class="attr">width</span>=<span class="string">"宽度"</span> <span class="attr">height</span>=<span class="string">"长度"</span> <span class="attr">alt</span>=<span class="string">"加载失败"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="引入链接"><a href="#引入链接" class="headerlink" title="引入链接"></a>引入链接</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"链接地址"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="更改颜色"><a href="#更改颜色" class="headerlink" title="更改颜色"></a>更改颜色</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"background-color:red"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="隐藏标题"><a href="#隐藏标题" class="headerlink" title="隐藏标题"></a>隐藏标题</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.<span class="tag">&lt;<span class="name">dfn</span> <span class="attr">title</span>=<span class="string">"法外狂徒 性别：男 年龄：20"</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">dfn</span>&gt;</span></span><br><span class="line">2.<span class="tag">&lt;<span class="name">acronym</span> <span class="attr">title</span>=<span class="string">"liuxiang"</span>&gt;</span>LX<span class="tag">&lt;/<span class="name">acronym</span>&gt;</span></span><br><span class="line">3.<span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"liuxiang"</span>&gt;</span>LX<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字体类型"><a href="#字体类型" class="headerlink" title="字体类型"></a>字体类型</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"font-family:verdana;font-size:20px"</span>&gt;</span>字体<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="区域跳跃"><a href="#区域跳跃" class="headerlink" title="区域跳跃"></a>区域跳跃</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"top"</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#top"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="反向输出"><a href="#反向输出" class="headerlink" title="反向输出"></a>反向输出</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bdo</span> <span class="attr">dir</span>=<span class="string">"rtl"</span>&gt;</span>liu xiang<span class="tag">&lt;/<span class="name">bdo</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="划线"><a href="#划线" class="headerlink" title="划线"></a>划线</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>中划线<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.无序</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>l<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>love<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>you<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">2.有序</span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="输入框"><a href="#输入框" class="headerlink" title="输入框"></a>输入框</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"传输地址"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">required</span> <span class="attr">placeholder</span>=<span class="string">"输入框提示"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span>      <span class="comment">&lt;!--required为必填--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.单选</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"传输地址"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"a"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"a-b"</span> <span class="attr">checked</span>&gt;</span>a<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"b"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"a-b"</span>&gt;</span>b<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span>    <span class="comment">&lt;!--checked为默认选项--&gt;</span></span><br><span class="line">2.多选</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"传输地址"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"personality"</span>&gt;</span>A<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"personality"</span>&gt;</span>B<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"personality"</span>&gt;</span>C<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="添加边框"><a href="#添加边框" class="headerlink" title="添加边框"></a>添加边框</h3><figure class="highlight html"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.border</span>&#123;   </span></span><br><span class="line">        border-color: green;</span><br><span class="line">        border-width: 10px;</span><br><span class="line">        border-style: solid;</span><br><span class="line"><span class="css">        <span class="selector-tag">border-radius</span><span class="selector-pseudo">:50</span>%;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"border"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"图片地址"</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="内边距"><a href="#内边距" class="headerlink" title="内边距"></a>内边距</h3><figure class="highlight html"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.padding</span>&#123;<span class="attribute">padding-top</span>:<span class="number">10px</span>;<span class="attribute">padding-right</span>:<span class="number">10px</span>;<span class="attribute">padding</span>:left;<span class="attribute">padding-bottom</span>:<span class="number">10px</span>;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="外边距"><a href="#外边距" class="headerlink" title="外边距"></a>外边距</h3><figure class="highlight html"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.margin</span>&#123;<span class="attribute">margin-top</span>:<span class="number">10px</span>; <span class="attribute">margin-left</span>:-<span class="number">25px</span>;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5Casus%5CDesktop%5C%E6%88%91%E6%BB%B4%E4%B8%9C%E8%A5%BF%5C%E5%A3%81%E7%BA%B8%5C8837127292ad473ba0301bb99d66fb7c.jpeg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;标签类型&quot;&gt;&lt;a href=&quot;#标签类型&quot; class=&quot;headerlink&quot; title=&quot;标签类型&quot;&gt;&lt;/a&gt;标签类型&lt;/h3&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="HTML" scheme="http://2544165563.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>BeautifulSoup提取数据</title>
    <link href="http://2544165563.github.io/2020/08/27/BeautifulSoup%E6%8F%90%E5%8F%96%E6%95%B0%E6%8D%AE/"/>
    <id>http://2544165563.github.io/2020/08/27/BeautifulSoup%E6%8F%90%E5%8F%96%E6%95%B0%E6%8D%AE/</id>
    <published>2020-08-27T03:00:50.621Z</published>
    <updated>2020-08-11T11:36:59.267Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BeautifulSoup的使用"><a href="#BeautifulSoup的使用" class="headerlink" title="BeautifulSoup的使用"></a>BeautifulSoup的使用</h1><h2 id="先来个例子"><a href="#先来个例子" class="headerlink" title="先来个例子"></a>先来个例子</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">"https://python123.io/ws/demo.html"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>demo = r.text</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup = BeautifulSoup(demo,<span class="string">"html.parser"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(soup.prettify())</span><br><span class="line">&lt;html&gt;</span><br><span class="line"> &lt;head&gt;</span><br><span class="line">  &lt;title&gt;</span><br><span class="line">   This <span class="keyword">is</span> a python demo page</span><br><span class="line">  &lt;/title&gt;</span><br><span class="line"> &lt;/head&gt;</span><br><span class="line"> &lt;body&gt;</span><br><span class="line">  &lt;p class="title"&gt;</span><br><span class="line"> <span class="comment">#省略.......</span></span><br></pre></td></tr></table></figure><h2 id="主要部分"><a href="#主要部分" class="headerlink" title="主要部分"></a>主要部分</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup = BeautifulSoup(demo,<span class="string">"html.parser"</span>)   <span class="comment">#html.parser解析器</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(soup.prettify())</span><br></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="解析器"><a href="#解析器" class="headerlink" title="解析器"></a>解析器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">html.parser   #安装bs4</span><br><span class="line"></span><br><span class="line">lxml    #pip install lxml</span><br><span class="line"></span><br><span class="line">xml     #pip install xml</span><br><span class="line"></span><br><span class="line">html5lib   #pip install html5lib</span><br></pre></td></tr></table></figure><h2 id="标签信息"><a href="#标签信息" class="headerlink" title="标签信息"></a>标签信息</h2><h3 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(demo,<span class="string">"html.parser"</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup.title</span><br><span class="line">&lt;title&gt;...&lt;/title&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup.a.name</span><br><span class="line"><span class="string">'a'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup.a.attrs   <span class="comment">#查看标签属性</span></span><br><span class="line">&#123;<span class="string">'href'</span>: <span class="string">'//www.icourse163.org'</span>, <span class="string">'target'</span>: <span class="string">'_top'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup.a.attrs[<span class="string">'href'</span>]</span><br><span class="line"><span class="string">'//www.icourse163.org'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup.title.string</span><br><span class="line"><span class="string">'\nPython语言程序设计_北京理工大学_中国大学MOOC(慕课)\n'</span></span><br></pre></td></tr></table></figure><h3 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>newsoup.contents</span><br><span class="line"><span class="comment">#儿子标签</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> newsoup.children</span><br><span class="line"><span class="comment">#子标签</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> newsoup.descendants</span><br><span class="line"><span class="comment">#子孙标签</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup.a.parent.name</span><br><span class="line"><span class="string">'p'</span>      <span class="comment">#a的外层标签</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> soup.a.parent.parents</span><br><span class="line"><span class="comment">#循环遍历先辈标签</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup.next_sibling</span><br><span class="line"><span class="comment">#返回文本顺序的下一个平行结点标签</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup.previous_sibling</span><br><span class="line"><span class="comment">#返回上一个</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> soup.next_sibling</span><br><span class="line"><span class="comment">#对应迭代类型</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> soup.previous_siblings</span><br><span class="line"><span class="comment">#对应迭代类型</span></span><br></pre></td></tr></table></figure><h3 id="HTML内容查找"><a href="#HTML内容查找" class="headerlink" title="HTML内容查找"></a>HTML内容查找</h3><p>soup() == soup.find_all()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;&gt;.find_all(name,attrs,recursive,string,**kwargs)</span><br><span class="line"></span><br><span class="line">attrs:标签属性</span><br><span class="line"></span><br><span class="line">recursive:是否对子孙全部检索,默认为Ture</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> soup.find_all(<span class="string">'a'</span>):</span><br><span class="line">    print(link.get(<span class="string">'href'</span>))</span><br><span class="line"></span><br><span class="line">soup.find_all([a,b,c]) <span class="comment">#查找多项</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> tags <span class="keyword">in</span> soup.find_all(Ture):</span><br><span class="line">    print(tags,name)    <span class="comment">#打印所有标签名 </span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">import</span> re      <span class="comment">#查找包含a的标签</span></span><br><span class="line">soup.find_all(re.compile(<span class="string">'a'</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup.find_all(string = re.compile(<span class="string">"chenlvtang"</span>))</span><br><span class="line">[<span class="string">'chenlvtang的小房间'</span>]</span><br></pre></td></tr></table></figure><h2 id="例-大学排名"><a href="#例-大学排名" class="headerlink" title="例 大学排名"></a>例 大学排名</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url,timeout = <span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fillUnivList</span><span class="params">(ulist,html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">"html.parser"</span>)</span><br><span class="line">    <span class="keyword">for</span> tr <span class="keyword">in</span> soup.find(<span class="string">'tbody'</span>).children:</span><br><span class="line">        <span class="keyword">if</span> isinstance(tr,bs4.element.Tag):</span><br><span class="line">            tds = tr(<span class="string">'td'</span>)</span><br><span class="line">            ulist.append([tds[<span class="number">0</span>].string,tds[<span class="number">1</span>].string,tds[<span class="number">4</span>].string])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printUnivList</span><span class="params">(ulist,num)</span>:</span></span><br><span class="line">    tplt = <span class="string">"&#123;0:^10&#125;\t&#123;1:&#123;3&#125;^10&#125;\t&#123;2:^10&#125;"</span></span><br><span class="line">    print(tplt.format(<span class="string">"排名"</span>,<span class="string">"学校"</span>,<span class="string">"总分"</span>,chr(<span class="number">12288</span>)))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">          u = ulist[i]</span><br><span class="line">          print(tplt.format(u[<span class="number">0</span>],u[<span class="number">1</span>],u[<span class="number">2</span>],chr(<span class="number">12288</span>)))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    uinfo = []</span><br><span class="line">    url = <span class="string">'http://www.zuihaodaxue.com/zuihaodaxuepaiming2020.html'</span></span><br><span class="line">    html = getHTMLText(url)</span><br><span class="line">    fillUnivList(uinfo,html)</span><br><span class="line">    printUnivList(uinfo,<span class="number">20</span>)</span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;BeautifulSoup的使用&quot;&gt;&lt;a href=&quot;#BeautifulSoup的使用&quot; class=&quot;headerlink&quot; title=&quot;BeautifulSoup的使用&quot;&gt;&lt;/a&gt;BeautifulSoup的使用&lt;/h1&gt;&lt;h2 id=&quot;先来个例子&quot;&gt;&lt;a
      
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="http://2544165563.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>树先生</title>
    <link href="http://2544165563.github.io/2020/08/27/Hellow%E6%A0%91%E5%85%88%E7%94%9F/"/>
    <id>http://2544165563.github.io/2020/08/27/Hellow%E6%A0%91%E5%85%88%E7%94%9F/</id>
    <published>2020-08-27T03:00:50.621Z</published>
    <updated>2020-07-15T06:55:43.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-树"><a href="#1-树" class="headerlink" title="1.树"></a>1.树</h1><a id="more"></a><p>基本术语：</p><p>1.结点：数据元素及分支          2.结点的度：拥有的分支数             3.树的度：等于最大的结点度</p><p>4.叶子：没有分支的结点          5.非终端结点：度不为0，除根结点外，也称内部结点</p><p>6.双亲和孩子                             7.祖先：包括双亲                            8.子孙：包括孩子</p><p>9.层次                                        10.兄弟：同一个双亲                      11.堂兄弟：双亲不同但在同一层次</p><p>12.深度：最大层次                   13.有序树和无序树                         14.森林：多棵树</p><p>树的三种常用表示法（懒了，遇到的时候再去看）：</p><p>  （1）双亲表示法</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/shuang.png"><p>  （2）孩子表示法</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/hai.jpg"><p>（3）孩子兄弟法 （二叉树表示法、二叉链表表示法）</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/hai2.png"><h1 id="2-二叉树（与树是两种类型）"><a href="#2-二叉树（与树是两种类型）" class="headerlink" title="2.二叉树（与树是两种类型）"></a>2.二叉树（与树是两种类型）</h1><h5 id="二叉树定义："><a href="#二叉树定义：" class="headerlink" title="二叉树定义："></a>二叉树定义：</h5><p>（1）最多有两个结点</p><p>（2）有左右之分，不能调换</p><p>   普通二叉树性质：1.叶的数量m只与度为2的结点有关，n为度为2结点数量，则m=n+1。</p><p>​                                  2.第i层上至多有2的i-1次方个结点。</p><p>​                                  3.深度为k，最多有2的k次方减1个结点。</p><h5 id="特殊二叉树定义："><a href="#特殊二叉树定义：" class="headerlink" title="特殊二叉树定义："></a>特殊二叉树定义：</h5><p>（1）满二叉树：除叶结点外，度都为2.</p><p>（2）完全二叉树：与满二叉树的顺序对应。（挨个排的树） </p><p>   完全二叉树性质：1.具有n个结点，深度为[log2n]+1。</p><p>​                                  2.对于结点i，其双亲为i/2,左孩子为2i,又孩子为2i+1。</p><h5 id="遍历二叉树"><a href="#遍历二叉树" class="headerlink" title="遍历二叉树"></a>遍历二叉树</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> DataType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BiTNode</span>&#123;</span></span><br><span class="line">DataType data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BiTNode</span> *<span class="title">lchild</span>,*<span class="title">rchild</span>;</span></span><br><span class="line">&#125;BiTNode,*BiTree;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Create_BiTree</span><span class="params">(BiTree *T)</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line">ch=getchar();</span><br><span class="line"><span class="keyword">if</span>(ch==<span class="string">'@'</span>) *T=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">*T=(BiTree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BiTNode));</span><br><span class="line">(*T)-&gt;data=ch;</span><br><span class="line">Create_BiTree(&amp;(*T)-&gt;lchild);</span><br><span class="line">Create_BiTree(&amp;(*T)-&gt;rchild);</span><br><span class="line">&#125; &#125;</span><br><span class="line"><span class="comment">//先序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrderTraverse</span> <span class="params">(BiTree T)</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,T-&gt;data);</span><br><span class="line"><span class="keyword">if</span>(T-&gt;lchild)</span><br><span class="line">    PreOrderTraverse(T-&gt;lchild);</span><br><span class="line">    <span class="keyword">if</span>(T-&gt;rchild)</span><br><span class="line">    PreOrderTraverse(T-&gt;rchild);&#125;</span><br><span class="line"><span class="comment">//中序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrderTraverse</span> <span class="params">(BiTree T)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(T-&gt;lchild)</span><br><span class="line">    PreOrderTraverse(T-&gt;lchild);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,T-&gt;data);</span><br><span class="line">    <span class="keyword">if</span>(T-&gt;rchild)</span><br><span class="line">    PreOrderTraverse(T-&gt;rchild);&#125;</span><br><span class="line"><span class="comment">//后序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostOrderTraverse</span><span class="params">(BiTree T)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(T-&gt;lchild)</span><br><span class="line">    PreOrderTraverse(T-&gt;lchild);</span><br><span class="line">    <span class="keyword">if</span>(T-&gt;rchild)</span><br><span class="line">    PreOrderTraverse(T-&gt;rchild);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,T-&gt;data);&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">BiTree T;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n 输入叶结点的信息（建立空二叉树输入@）: "</span>);</span><br><span class="line">  Create_BiTree(&amp;T);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n 前序遍历结果: "</span>);</span><br><span class="line">PreOrderTraverse(T);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n 中序遍历结果: "</span>);</span><br><span class="line">InOrderTraverse (T);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n 后序遍历结果: "</span>);</span><br><span class="line">PostOrderTraverse(T);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);&#125;</span><br></pre></td></tr></table></figure><h5 id="线索二叉树"><a href="#线索二叉树" class="headerlink" title="线索二叉树"></a>线索二叉树</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> TElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BiThrNode</span>&#123;</span></span><br><span class="line">TElemType data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BiThrNode</span> *<span class="title">lchild</span>,*<span class="title">rchild</span>;</span>     <span class="comment">//没有孩子结点则标签等于1</span></span><br><span class="line"><span class="keyword">int</span> LTag,RTag;    <span class="comment">//等于0时指向孩子结点，等于1时指向前驱或后继</span></span><br><span class="line">&#125;BiThrNode,*BiThrTree;</span><br><span class="line"><span class="comment">//中序线索化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Inthread</span><span class="params">(BiTree root)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(root!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">Inthread(root-&gt;lchild);</span><br><span class="line"><span class="keyword">if</span>(root-&gt;lchild==<span class="literal">NULL</span>)</span><br><span class="line">&#123;root-&gt;LTag=<span class="number">1</span>;root-&gt;lchild=pre;&#125;</span><br><span class="line"><span class="keyword">if</span>(pre!=<span class="literal">NULL</span>&amp;&amp;pre-&gt;rchild==<span class="literal">NULL</span>)</span><br><span class="line">&#123;pre-&gt;rchild=root;pre-&gt;RTag=<span class="number">1</span>;&#125;</span><br><span class="line">pre=root;</span><br><span class="line">Inthread(root-&gt;rchild);</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><p>（1）线索：指向前驱或后继的指针  （2）线索化：在遍历过程中修改空链域</p><h1 id="3-森林、树"><a href="#3-森林、树" class="headerlink" title="3.森林、树"></a>3.森林、树</h1><p>1.树转二叉树</p><p>（1）连接相邻兄弟结点（2）只保留之前与第一个孩子的连线</p><p>2.二叉树还原树或森林</p><p>（1）若某结点为其双亲的左孩子，则把该结点的右孩子、右孩子的右孩子。。。都与该结点的双亲相连</p><p>（2）删除原有所有右孩子的连线</p><p>3.森林转二叉树</p><p>（1）将每一棵树转换为二叉树</p><p>（2）将二叉树的根结点作为前一个二叉树根结点的右孩子连接。</p><h1 id="4-树和森林的遍历"><a href="#4-树和森林的遍历" class="headerlink" title="4.树和森林的遍历"></a>4.树和森林的遍历</h1><p>树的遍历：（1）先根遍历ABECFHGD（2）后根遍历EBHFGCDA</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/gen.png"><p>森林的遍历（1）先序（2）中序（3）后序</p><h1 id="5-哈夫曼树"><a href="#5-哈夫曼树" class="headerlink" title="5.哈夫曼树"></a>5.哈夫曼树</h1><p>当有n个叶子时，就有2n-1个结点</p><p>基本术语：</p><p>1.路径：两个结点间的分支构成。       2.路径长度：路径上的分支数目</p><p>3.树的路径长度：树根到每一个结点的路径长度之和    </p><p>4.权：分为结点权和边权。                   5.结点的带权路径长度：路径长度*该结点的权值</p><p>6.树的带权路径长度：所有叶子到树根的带权路径长度之和。</p><p>7.哈夫曼树：树的带权路径长度最小的二叉树。</p><h5 id="哈夫曼树的构造方法"><a href="#哈夫曼树的构造方法" class="headerlink" title="哈夫曼树的构造方法"></a>哈夫曼树的构造方法</h5><p>（1）给定n个权值，每个权值构成只有根结点的森林</p><p>（2）将权值最小的两棵树分别当做左右孩子合并成一棵，新的权值为两棵树权值的和。</p><p>（3）重复2步骤。</p><h1 id="6-哈夫曼编码（最短，最优）"><a href="#6-哈夫曼编码（最短，最优）" class="headerlink" title="6.哈夫曼编码（最短，最优）"></a>6.哈夫曼编码（最短，最优）</h1><p>前缀码：在一个编码系统中，任何一个编码不是其他编码的前缀。</p><p>哈夫曼码：左为1，右为0.</p><p>编码方式： （1）定长编码：根据出现的情况m次，求2的n次方 &lt;=m。 求出n</p><p>​                    （2）哈夫曼编码：建立哈夫曼树，根据哈夫曼树编码</p><p>问题实例：</p><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/shu1.png"><img src="https://cdn.jsdelivr.net/gh/2544165563/2544165563.github.io/assets/shu2.png"><p>编码过程：</p><p>鸽了，过两天根据指导再打吧🐷</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-树&quot;&gt;&lt;a href=&quot;#1-树&quot; class=&quot;headerlink&quot; title=&quot;1.树&quot;&gt;&lt;/a&gt;1.树&lt;/h1&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://2544165563.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="数据结构" scheme="http://2544165563.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
</feed>
